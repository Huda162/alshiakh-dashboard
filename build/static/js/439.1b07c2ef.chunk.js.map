{"version":3,"file":"static/js/439.1b07c2ef.chunk.js","mappings":"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","sources":["views/Current-User/current_user.js","utils/util.js","hooks/general/useLanguage.js","hooks/aboutUs/useAboutUsEditing.js","hooks/general/useDelete.js","hooks/general/useDeleteMarked.js","hooks/categories/useCategories.js","components/PageTitle.js","components/AppCard.js","components/TextEditor.js","views/About-Us/edit-about-us.js","hooks/products/useProducts.js","hooks/sliders/useSliderEditing.js","views/Slider/edit-slider.js","hooks/sliders/useSliders.js","components/AppDialog.js","components/Tooltip.js","components/EmptyPage.js","views/Slider/sliders.js","hooks/general/useAllProducts.js","hooks/general/useFormValidation.js","views/Slider/add-slider.js","hooks/sliders/useSliderAdding.js","hooks/orders/useOrderDetails.js","components/OrderCard.js","views/Order-Details/order_details.js","views/Notification-Firebase/notification-firebase.js","hooks/banners/useBanners.js","views/Banners/banners.js","hooks/banners/useBannersEditing.js","views/Banners/edit-banner.js","views/Privacy-Policy/privacy_policy.js","hooks/aboutUs/useAboutUs.js","views/About-Us/about-us.js","views/Users/add-user.js","hooks/users/useUserAdding.js","hooks/users/useUserEditing.js","views/Users/edit-user.js","views/Categories/categories.js","components/CategoryDropdown.js","views/Categories/add-category.js","hooks/categories/useCategoryAdding.js","hooks/categories/useCategoryEditing.js","views/Categories/edit-category.js","components/ProductDialog.js","views/Products/products.js","hooks/brands/useBrands.js","components/AppProgressBar.js","hooks/general/useCurrency.js","views/Products/add-product.js","hooks/products/useProductAdding.js","views/Products/edit-product.js","hooks/products/useProductEditing.js","views/Products/view-product.js","hooks/Socials/useSocials.js","views/Socials/socials.js","hooks/Socials/useSocialEditing.js","views/Socials/edit-social.js","views/Orders/orders.js","hooks/orders/useOrder.js","hooks/feedbacks/useFeedbacks.js","views/Feedbacks/feedbacks.js","views/Feedbacks/add-feedback.js","hooks/feedbacks/useFeedbackAdding.js","hooks/feedbacks/useFeedbackEditing.js","views/Feedbacks/edit-feedback.js","hooks/copons/useCopons.js","views/Copons/copons.js","views/Copons/add-copon.js","hooks/copons/useCoponAdding.js","hooks/copons/useCoponEditing.js","views/Copons/edit-copon.js","hooks/dashboard/useDashboard.js","views/widgets/WidgetsDropdown.js","components/NavigationCard.js","components/NavigationButtons.js","hooks/settings/useSettings.js","components/AppBestProductsList.js","components/BestUsers.js","views/Dashboard/Dashboard.js","views/Users/users.js","hooks/users/useUsers.js","views/Settings/settings.js","views/Banners/add-banner.js","hooks/banners/useBannerAdding.js","views/Brands/add-brand.js","hooks/brands/useBrandAdding.js","hooks/brands/useBrandEditing.js","views/Brands/edit-brand.js","views/Brands/Brands.js","routes.js","components/AppBreadcrumb.js","views/pages/unauthorized/Unauthorezed.js","components/AppContent.js","components/AppHeader.js","components/AppSidebar.js","components/DocsCallout.js","components/DocsLink.js","components/DocsExample.js","constants/colors.js","hooks/general/useWidth.js","hooks/login/useLogin.js","layout/DefaultLayout.js","views/pages/login/Login.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport {\r\n  CAvatar,\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CProgress,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport avatar from '../../assets/images/avatars/ava3.png'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { NotePencil } from 'phosphor-react'\r\n\r\nconst CurrentUser = () => {\r\n  const currentUser = sessionStorage.getItem('name')\r\n  const id = sessionStorage.getItem('id')\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      WE\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <CAvatar src={avatar} size=\"large\" style={{ width: '120px', border: '6px solid white' }} />\r\n        <span style={{ marginTop: '40px' }}>{currentUser}</span>\r\n        <div\r\n          style={{\r\n            backgroundColor: '#38b0f1',\r\n            width: '75px',\r\n            // margin: '20',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-evenly',\r\n            borderRadius: '10px',\r\n            padding: '5px',\r\n            margin: '10px',\r\n            cursor: 'pointer',\r\n          }}\r\n          onClick={() => navigate(`/edit_user/${id}`)}\r\n        >\r\n          <NotePencil size={18} weight=\"duotone\" color=\"white\" />\r\n          <span style={{ color: 'white' }}>تعديل</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CurrentUser\r\n","import { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Theme } from 'src/constants/colors'\r\n\r\nexport const notifyDelete = () =>\r\n  toast.success('تم الحذف بنجاح', {\r\n    position: 'top-right',\r\n    autoClose: 3000,\r\n    // hideProgressBar: true,\r\n    closeOnClick: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    // className: 'custom-toast',\r\n    style: { fontSize: '17px', backgroundColor: Theme.base },\r\n    className: 'stickyToast',\r\n  })\r\n\r\nexport const notifyAdd = () =>\r\n  toast.success('تمت الإضافة بنجاح', {\r\n    position: 'bottom-right',\r\n    autoClose: 3000,\r\n    // hideProgressBar: true,\r\n    closeOnClick: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    // className: 'custom-toast',\r\n    style: { fontSize: '17px' },\r\n  })\r\n\r\nexport const notifyEdit = () =>\r\n  toast.success('تم التعديل بنجاح', {\r\n    position: 'bottom-right',\r\n    autoClose: 3000,\r\n    // hideProgressBar: true,\r\n    closeOnClick: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    // className: 'custom-toast',\r\n    style: { fontSize: '17px' },\r\n  })\r\nexport const notifyEdit2 = () =>\r\n  toast.success('تم التعديل بنجاح', {\r\n    position: 'top-right',\r\n    autoClose: 3000,\r\n    // hideProgressBar: true,\r\n    closeOnClick: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    // className: 'custom-toast',\r\n    style: { fontSize: '17px' },\r\n  })\r\n\r\nexport const notifyFailed = () =>\r\n  toast.error('حصل خلل، يرجى المحاولة لاحقا', {\r\n    position: 'bottom-right',\r\n    autoClose: 3000,\r\n    // hideProgressBar: true,\r\n    closeOnClick: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    // className: 'custom-toast',\r\n    style: { fontSize: '17px' },\r\n  })\r\n\r\nconst getUrlExtension = (url) => {\r\n  return url.split(/[#?]/)[0].split('.').pop().trim()\r\n}\r\n\r\nexport const dataURLtoFile = async (imgUrl) => {\r\n  console.log('inside')\r\n  var imgExt = getUrlExtension(imgUrl)\r\n  const response = await fetch(imgUrl)\r\n  const blob = await response.blob()\r\n  const file = new File([blob], 'profileImage.' + imgExt, {\r\n    type: blob.type,\r\n  })\r\n  console.log(file)\r\n  return file\r\n}\r\n","export const useLanguage = () => {\r\n  const isArabic = JSON.parse(localStorage.getItem('isArabic'))\r\n  const isEnglish = JSON.parse(localStorage.getItem('isEnglish'))\r\n  const isHebrew = JSON.parse(localStorage.getItem('isHebrew'))\r\n\r\n  const setArabic = (value) => {\r\n    localStorage.setItem('isArabic', JSON.stringify(value))\r\n  }\r\n\r\n  const setEnglish = (value) => {\r\n    localStorage.setItem('isEnglish', JSON.stringify(value))\r\n  }\r\n\r\n  const setHebrew = (value) => {\r\n    localStorage.setItem('isHebrew', JSON.stringify(value))\r\n  }\r\n\r\n  return {\r\n    isEnglish,\r\n    isArabic,\r\n    isHebrew,\r\n    setArabic,\r\n    setEnglish,\r\n    setHebrew,\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyEdit } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useLanguage } from '../general/useLanguage'\r\n\r\nexport const useAboutUsEditing = (aboutId, item) => {\r\n  const { body_ar, body_en, body_he, image } = item\r\n  const navigate = useNavigate()\r\n  const [bodyAr, setBodyAr] = useState('')\r\n  const [bodyEng, setBodyEng] = useState('')\r\n  const [bodyHeb, setBodyHeb] = useState('')\r\n  const [updatedImage, setUpdatedImage] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n\r\n  const getAbout = async () => {\r\n    setBodyAr(body_ar)\r\n    setBodyEng(body_en)\r\n    setBodyHeb(body_he)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAbout()\r\n  }, [])\r\n\r\n  const update = () => {\r\n    setLoading(true)\r\n    const formData = new FormData()\r\n    {\r\n      isArabic === 'true' ? formData.append('body_ar', bodyAr) : formData.append('body_ar', 'empty')\r\n    }\r\n    {\r\n      isEnglish === 'true'\r\n        ? formData.append('body_en', bodyEng)\r\n        : formData.append('body_en', 'empty')\r\n    }\r\n    {\r\n      isHebrew === 'true'\r\n        ? formData.append('body_he', bodyHeb)\r\n        : formData.append('body_he', 'empty')\r\n    }\r\n    formData.append('image', updatedImage)\r\n\r\n    axios\r\n      .post(`${API_ROUTE}/about/${aboutId}?_method=PUT`, formData)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        notifyEdit()\r\n        setTimeout(() => {\r\n          navigate('/about_us')\r\n        }, 500)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        setLoading(false)\r\n        setVisible(true)\r\n      })\r\n  }\r\n  return {\r\n    bodyAr,\r\n    loading,\r\n    update,\r\n    setBodyAr,\r\n    visible,\r\n    setVisible,\r\n    bodyEng,\r\n    bodyHeb,\r\n    setBodyEng,\r\n    setBodyHeb,\r\n    updatedImage,\r\n    setUpdatedImage,\r\n    image,\r\n  }\r\n}\r\n","import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyDelete, notifyFailed } from 'src/utils/util'\r\n\r\nexport const useDelete = (path, refreshFunction) => {\r\n  const [showDialog, setShowDialog] = useState(false)\r\n  const [deleteID, setDeleteID] = useState(null)\r\n\r\n  const confirmDelete = (id) => {\r\n    setDeleteID(id)\r\n    setShowDialog(true)\r\n  }\r\n  const cancelDelete = (id) => {\r\n    setDeleteID(null)\r\n    setShowDialog(false)\r\n  }\r\n  const executeDelete = async () => {\r\n    try {\r\n      await axios.delete(`${API_ROUTE}/${path}/${deleteID}`)\r\n      notifyDelete()\r\n      refreshFunction()\r\n    } catch (error) {\r\n      console.error(error)\r\n      notifyFailed()\r\n    } finally {\r\n      setDeleteID(null)\r\n      setShowDialog(false)\r\n    }\r\n  }\r\n  return {\r\n    showDialog,\r\n    setShowDialog,\r\n    confirmDelete,\r\n    executeDelete,\r\n    cancelDelete,\r\n  }\r\n}\r\n","import { useState } from 'react'\r\nimport { notifyDelete, notifyFailed } from 'src/utils/util'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\n\r\nexport const useDeleteMarked = (items, path, refreshFunction) => {\r\n  const [markedItems, setMarkedItems] = useState([])\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false)\r\n\r\n  const toggleMarkedItem = (id) => {\r\n    if (markedItems.find((itemId) => itemId === id)) {\r\n      const newItems = markedItems.filter((itemId) => itemId !== id)\r\n      setMarkedItems([...newItems])\r\n    } else {\r\n      const newItems = [...markedItems, id]\r\n      setMarkedItems([...newItems])\r\n    }\r\n  }\r\n\r\n  const markAll = () => {\r\n    if (markedItems.length === items.length) {\r\n      setMarkedItems([])\r\n    } else {\r\n      const newItems = items.map((item) => item.id)\r\n      setMarkedItems([...newItems])\r\n    }\r\n  }\r\n\r\n  const deleteMarked = () => {\r\n    setShowDeleteDialog(true)\r\n  }\r\n\r\n  const cancelDeleteMarked = () => {\r\n    setShowDeleteDialog(false)\r\n  }\r\n\r\n  const executeDeleteMarked = () => {\r\n    try {\r\n      const newItems = markedItems.map(async (item) => {\r\n        try {\r\n          await axios.delete(`${API_ROUTE}/${path}/${item}`)\r\n        } catch (error) {\r\n          console.error(error)\r\n          notifyFailed()\r\n        } finally {\r\n          refreshFunction()\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error)\r\n      notifyFailed()\r\n    } finally {\r\n      setShowDeleteDialog(false)\r\n      refreshFunction()\r\n      notifyDelete()\r\n      setMarkedItems([])\r\n    }\r\n  }\r\n\r\n  return {\r\n    showDeleteDialog,\r\n    markedItems,\r\n    setMarkedItems,\r\n    toggleMarkedItem,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { useDelete } from '../general/useDelete'\r\nimport { useDeleteMarked } from '../general/useDeleteMarked'\r\n\r\nexport const useCategories = () => {\r\n  const [categories, setCategories] = useState([])\r\n  const [filterValue, setFilterValue] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n\r\n  const getCategories = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await fetch(`${API_ROUTE}/categories`)\r\n      const data = await response.json()\r\n      setCategories(data.categories)\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const getFilteredCategories = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await fetch(`${API_ROUTE}/search_category/${searchQuery}`)\r\n      const data = await response.json()\r\n      setCategories(data['categories'])\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const {\r\n    showDeleteDialog,\r\n    markedItems,\r\n    setMarkedItems,\r\n    toggleMarkedItem,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n  } = useDeleteMarked(categories, 'categories', getCategories)\r\n\r\n  const { showDialog, confirmDelete, executeDelete, cancelDelete } = useDelete(\r\n    'categories',\r\n    getCategories,\r\n  )\r\n\r\n  useEffect(() => {\r\n    getCategories()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (searchQuery.trim() == '') {\r\n      getCategories()\r\n    } else {\r\n      getFilteredCategories()\r\n    }\r\n  }, [searchQuery])\r\n\r\n  const handleOnDragEnd = (result) => {\r\n    if (!result.destination) return\r\n    const items = Array.from(categories)\r\n    const [reorderedItem] = items.splice(result.source.index, 1)\r\n    items.splice(result.destination.index, 0, reorderedItem)\r\n    console.log(result)\r\n    // const updatedItems = items.map((item, index) => ({\r\n    //   ...item,\r\n    //   order_number: index,\r\n    // }))\r\n\r\n    setCategories(items)\r\n\r\n    // const request = updatedItems.forEach(async (item) => {\r\n    //   const formData = new FormData()\r\n    //   try{\r\n    //     await axios.put(`${API_ROUTE}/products/${item.id}/order-number`, {order_number: item.order_number})\r\n    //     console.log(item.id, ' updated to ', item.order_number)\r\n    //   }catch(error){\r\n    //     console.error(error)\r\n    //   }\r\n    // })\r\n  }\r\n  return {\r\n    categories,\r\n    loading,\r\n    showDialog,\r\n    confirmDelete,\r\n    executeDelete,\r\n    cancelDelete,\r\n    setFilterValue,\r\n    markedItems,\r\n    setMarkedItems,\r\n    showDeleteDialog,\r\n    toggleMarkedItem,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n    searchQuery,\r\n    setSearchQuery,\r\n    handleOnDragEnd,\r\n  }\r\n}\r\n","/* eslint-disable react/prop-types */\r\n\r\nimport { CButton, CCard, CCardBody, CFormSelect } from '@coreui/react'\r\nimport { Funnel, MagnifyingGlass, NotePencil, Trash } from 'phosphor-react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useCategories } from 'src/hooks/categories/useCategories'\r\nimport './test.css'\r\nimport '../layout/layout.css'\r\nimport React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport excelLogo from '../assets/images/excel.png'\r\nconst PageTitle = ({\r\n  title,\r\n  icon,\r\n  addText,\r\n  addPath,\r\n  filterValue,\r\n  setFilterValue,\r\n  addItem = false,\r\n  filterItems = false,\r\n  filterByCategory = false,\r\n  editItems = false,\r\n  categoryFilter,\r\n  setCategoryFilter,\r\n  deleteMarked,\r\n  mark = false,\r\n  markedItems,\r\n  editMarked,\r\n  saveExcel,\r\n  isExportable = false,\r\n  loadingOrders,\r\n}) => {\r\n  const navigate = useNavigate()\r\n  const { categories } = useCategories()\r\n\r\n  return (\r\n    <CCard\r\n      className=\"mb-2\"\r\n      style={{ backgroundColor: Theme.white, border: 'none', boxShadow: '0px 2px 3px #c8c8c8' }}\r\n    >\r\n      <CCardBody>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <span className=\"d-flex align-items-center\">\r\n            {icon}\r\n            <h4 className=\"mx-2 mb-0 almarai-bold\"> {title}</h4>\r\n          </span>\r\n          <div className=\"pc-view\">\r\n            <span className=\"d-flex\">\r\n              {addItem && (\r\n                <CButton\r\n                  style={{\r\n                    width: '160px',\r\n                    marginLeft: '5px',\r\n                    backgroundColor: Theme.primary1,\r\n                    border: 'none',\r\n                  }}\r\n                  onClick={() => {\r\n                    navigate(`/${addPath}`)\r\n                  }}\r\n                >\r\n                  <span style={{ fontWeight: 'bolder' }}> {addText}</span>\r\n                </CButton>\r\n              )}\r\n              {isExportable && (\r\n                <CButton\r\n                  style={{\r\n                    width: '160px',\r\n                    marginLeft: '5px',\r\n                    backgroundColor: 'rgb(33 121 73)',\r\n                    border: 'none',\r\n                  }}\r\n                  onClick={() => {\r\n                    saveExcel()\r\n                  }}\r\n                >\r\n                  {loadingOrders ? (\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </Spinner>\r\n                  ) : (\r\n                    <span style={{ fontWeight: 'bolder' }}>\r\n                      <img src={excelLogo} height={32} />\r\n                      تصدير اكسل\r\n                    </span>\r\n                  )}\r\n                </CButton>\r\n              )}\r\n              {filterByCategory && (\r\n                <span\r\n                  style={{\r\n                    border: '1px solid gray',\r\n                    padding: '5px',\r\n                    borderRadius: '5px',\r\n                    alignSelf: 'flex-start',\r\n                    marginLeft: '5px',\r\n                    // width: '200px'\r\n                  }}\r\n                  className=\" h-75 w-25 d-flex align-items-center\"\r\n                >\r\n                  <Funnel size={30} />\r\n                  <CFormSelect\r\n                    id=\"productCategory\"\r\n                    className=\"customSelect\"\r\n                    style={{\r\n                      height: '30px',\r\n                      border: 'none',\r\n                      marginRight: '0px',\r\n                      outline: 'none',\r\n                      backgroundColor: Theme.white,\r\n                      fontSize: 16,\r\n                      padding: '0px',\r\n                      paddingRight: '30px',\r\n                    }}\r\n                    value={categoryFilter}\r\n                    onChange={(e) => setCategoryFilter(e.target.value)}\r\n                  >\r\n                    <option selected=\"\" value=\"\">\r\n                      تصنيف\r\n                    </option>\r\n                    {categories.map((item) => (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name_ar}\r\n                      </option>\r\n                    ))}\r\n                  </CFormSelect>\r\n                </span>\r\n              )}\r\n              {filterItems && (\r\n                <span\r\n                  style={{\r\n                    border: '1px solid gray',\r\n                    padding: '5px',\r\n                    borderRadius: '5px',\r\n                    alignSelf: 'flex-start',\r\n                  }}\r\n                  className=\" h-75 d-flex align-items-center\"\r\n                >\r\n                  <MagnifyingGlass size={20} />\r\n                  <input\r\n                    style={{\r\n                      height: '30px',\r\n                      marginRight: '20px',\r\n                      border: 'none',\r\n                      outline: 'none',\r\n                      backgroundColor: Theme.white,\r\n                    }}\r\n                    type=\"text\"\r\n                    placeholder=\"ابحث بواسطة الاسم\"\r\n                    value={filterValue}\r\n                    onChange={(e) => setFilterValue(e.target.value)}\r\n                  />\r\n                </span>\r\n              )}\r\n              {mark && (\r\n                <CButton\r\n                  style={{\r\n                    width: '160px',\r\n                    marginRight: '5px',\r\n                    border: 'none',\r\n                  }}\r\n                  color=\"danger\"\r\n                  onClick={deleteMarked}\r\n                  disabled={markedItems < 1}\r\n                >\r\n                  <span style={{ fontWeight: 'bolder' }}>\r\n                    <Trash size={20} />\r\n                    حذف المحدد\r\n                  </span>\r\n                </CButton>\r\n              )}\r\n              {editItems && (\r\n                <CButton\r\n                  style={{\r\n                    width: '160px',\r\n                    marginRight: '5px',\r\n                    border: 'none',\r\n                  }}\r\n                  color=\"info\"\r\n                  onClick={editMarked}\r\n                  disabled={markedItems < 1}\r\n                >\r\n                  <span style={{ fontWeight: 'bolder' }}>\r\n                    <NotePencil size={20} />\r\n                    تعديل المحدد\r\n                  </span>\r\n                </CButton>\r\n              )}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"tools-container mobile-view mt-3\">\r\n          {addItem && (\r\n            <CButton\r\n              style={{\r\n                width: '100%',\r\n                marginLeft: '5px',\r\n                backgroundColor: Theme.primary1,\r\n                border: 'none',\r\n              }}\r\n              onClick={() => {\r\n                navigate(`/${addPath}`)\r\n              }}\r\n            >\r\n              <span style={{ fontWeight: 'bolder' }}> {addText}</span>\r\n            </CButton>\r\n          )}\r\n          {filterByCategory && (\r\n            <span\r\n              style={{\r\n                border: '1px solid gray',\r\n                padding: '5px',\r\n                borderRadius: '5px',\r\n                alignSelf: 'flex-start',\r\n                marginLeft: '5px',\r\n                // width: '100%'\r\n              }}\r\n              className=\" h-75 w-100 d-flex align-items-center my-2\"\r\n            >\r\n              <Funnel size={30} />\r\n              <CFormSelect\r\n                id=\"productCategory\"\r\n                className=\"customSelect\"\r\n                style={{\r\n                  height: '30px',\r\n                  border: 'none',\r\n                  marginRight: '0px',\r\n                  outline: 'none',\r\n                  backgroundColor: Theme.white,\r\n                  fontSize: 16,\r\n                  padding: '0px',\r\n                  paddingRight: '30px',\r\n                }}\r\n                value={categoryFilter}\r\n                onChange={(e) => setCategoryFilter(e.target.value)}\r\n              >\r\n                <option selected=\"\" value=\"\">\r\n                  تصنيف\r\n                </option>\r\n                {categories.map((item) => (\r\n                  <option value={item.id} key={item.id}>\r\n                    {item.name}\r\n                  </option>\r\n                ))}\r\n              </CFormSelect>\r\n            </span>\r\n          )}\r\n          {filterItems && (\r\n            <span\r\n              style={{\r\n                border: '1px solid gray',\r\n                padding: '5px',\r\n                borderRadius: '5px',\r\n                alignSelf: 'flex-start',\r\n              }}\r\n              className=\" h-75 d-flex align-items-center my-2\"\r\n            >\r\n              <MagnifyingGlass size={20} />\r\n              <input\r\n                style={{\r\n                  height: '30px',\r\n                  marginRight: '20px',\r\n                  border: 'none',\r\n                  outline: 'none',\r\n                  backgroundColor: Theme.white,\r\n                }}\r\n                type=\"text\"\r\n                placeholder=\"ابحث بواسطة الاسم\"\r\n                value={filterValue}\r\n                onChange={(e) => setFilterValue(e.target.value)}\r\n              />\r\n            </span>\r\n          )}\r\n          {mark && (\r\n            <CButton\r\n              style={{\r\n                width: '100%',\r\n                border: 'none',\r\n              }}\r\n              color=\"danger\"\r\n              onClick={deleteMarked}\r\n              disabled={markedItems < 1}\r\n            >\r\n              <span style={{ fontWeight: 'bolder' }}>\r\n                <Trash size={20} />\r\n                حذف المحدد\r\n              </span>\r\n            </CButton>\r\n          )}\r\n          {editItems && (\r\n            <CButton\r\n              style={{\r\n                width: '100%',\r\n                border: 'none',\r\n              }}\r\n              color=\"info\"\r\n              onClick={editMarked}\r\n              disabled={markedItems < 1}\r\n            >\r\n              <span style={{ fontWeight: 'bolder' }}>\r\n                <NotePencil size={20} />\r\n                تعديل المحدد\r\n              </span>\r\n            </CButton>\r\n          )}\r\n        </div>\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","/* eslint-disable react/prop-types */\r\n\r\nimport { CCard } from '@coreui/react'\r\nimport { Theme } from 'src/constants/colors'\r\nimport React from 'react'\r\n\r\nconst AppCard = (props) => {\r\n  return (\r\n    <CCard\r\n      className=\"rounded my-3\"\r\n      style={{\r\n        backgroundColor: Theme.white,\r\n        boxShadow: '0px 2px 3px #c8c8c8',\r\n        border: 'none',\r\n        padding: 15,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default AppCard\r\n","/* eslint-disable react/prop-types */\r\n\r\nimport React, { useEffect } from 'react'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css'\r\nimport './test.css'\r\n\r\nconst QuillEditor = ({ value, onChange }) => {\r\n  const modules = {\r\n    toolbar: [\r\n      [{ header: '1' }, { header: '2' }],\r\n      [{ list: 'ordered' }, { list: 'bullet' }],\r\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n      ['link', 'image'],\r\n      ['clean'],\r\n    ],\r\n  }\r\n\r\n  const formats = [\r\n    'header',\r\n    'font',\r\n    'list',\r\n    'bullet',\r\n    'bold',\r\n    'italic',\r\n    'underline',\r\n    'strike',\r\n    'blockquote',\r\n    'link',\r\n    'image',\r\n  ]\r\n\r\n  useEffect(() => {\r\n    onChange(value)\r\n  }, [value, onChange])\r\n\r\n  return (\r\n    <div className=\"quill-editor\">\r\n      <ReactQuill value={value} onChange={onChange} modules={modules} formats={formats} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuillEditor\r\n","import React from 'react'\r\nimport { CAlert, CButton, CCardBody, CCol, CRow } from '@coreui/react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport 'froala-editor/css/froala_style.min.css'\r\nimport 'froala-editor/css/froala_editor.pkgd.min.css'\r\nimport { useAboutUsEditing } from 'src/hooks/aboutUs/useAboutUsEditing'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { NotePencil } from 'phosphor-react'\r\nimport TextEditor from 'src/components/TextEditor'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport image from '../../assets/images/image.png'\r\n\r\nconst EditAboutUS = () => {\r\n  const params = useParams()\r\n  const { state } = useLocation()\r\n  const item = state?.aboutData\r\n  const {\r\n    bodyAr,\r\n    setBodyAr,\r\n    loading,\r\n    update,\r\n    visible,\r\n    setVisible,\r\n    bodyEng,\r\n    bodyHeb,\r\n    setBodyEng,\r\n    setBodyHeb,\r\n    updatedImage,\r\n    setUpdatedImage,\r\n    image: aboutImage,\r\n  } = useAboutUsEditing(params.id, item)\r\n\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  if (!item) {\r\n    return <div>Product not found</div>\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"تعديل المحتوى\" icon={<NotePencil size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div>\r\n              {isArabic === 'true' && (\r\n                <div className=\"mb-3\">\r\n                  <h5>المحتوى بالعربية</h5>\r\n                  <TextEditor value={bodyAr} onChange={setBodyAr} />\r\n                </div>\r\n              )}\r\n              {isEnglish === 'true' && (\r\n                <div className=\"mb-3\">\r\n                  <h5>المحتوى بالانجليزية</h5>\r\n                  <TextEditor value={bodyEng} onChange={setBodyEng} />\r\n                </div>\r\n              )}\r\n              {isHebrew === 'true' && (\r\n                <div className=\"mb-3\">\r\n                  <h5>المحتوى بالعبرية</h5>\r\n                  <TextEditor value={bodyHeb} onChange={setBodyHeb} />\r\n                </div>\r\n              )}\r\n              <div className=\"col\">\r\n                <label className=\"form-label\">الصورة</label>\r\n                <input\r\n                  className=\"form-control form-control-sm\"\r\n                  id=\"formFileSm\"\r\n                  type=\"file\"\r\n                  name=\"product_pic\"\r\n                  onChange={(e) => setUpdatedImage(e.target.files[0])}\r\n                />\r\n                {updatedImage ? (\r\n                  <img\r\n                    src={updatedImage ? URL.createObjectURL(updatedImage) : image}\r\n                    onError={(e) => {\r\n                      e.target.onError = null\r\n                      e.target.src = image\r\n                    }}\r\n                    width={300}\r\n                    height={300}\r\n                    style={{ margin: '10px' }}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={aboutImage ? aboutImage : image}\r\n                    onError={(e) => {\r\n                      e.target.onError = null\r\n                      e.target.src = image\r\n                    }}\r\n                    width={300}\r\n                    height={300}\r\n                    style={{ margin: '10px' }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            {loading ? (\r\n              <Spinner animation=\"border\" role=\"status\" style={{ margin: '10px' }}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            ) : (\r\n              <CButton\r\n                style={{\r\n                  width: '200px',\r\n                  marginTop: '30px',\r\n                  backgroundColor: Theme.primary1,\r\n                  border: 'none',\r\n                }}\r\n                type=\"submit\"\r\n                onClick={update}\r\n              >\r\n                <span style={{ fontWeight: 'bolder' }}>حفظ</span>\r\n              </CButton>\r\n            )}\r\n            <CAlert color=\"danger\" dismissible visible={visible} onClose={() => setVisible(false)}>\r\n              حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n            </CAlert>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default EditAboutUS\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyEdit, notifyEdit2 } from 'src/utils/util'\r\nimport { useDelete } from '../general/useDelete'\r\nimport { useDeleteMarked } from '../general/useDeleteMarked'\r\n\r\nexport const useProducts = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [products, setProducts] = useState([])\r\n  const [links, setLinks] = useState([])\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [categoryFilter, setCategoryFilter] = useState()\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  // const [loadingSwitch, setLoadingSwitch] = useState(false)\r\n  const [loadingId, setLoadingId] = useState()\r\n  const [sortKey, setSortKey] = useState('')\r\n  const [selectedProduct, setSelectedProduct] = useState()\r\n  const [productDialog, setProductDialog] = useState(false)\r\n  const [loadingOfferId, setLoadingOfferId] = useState()\r\n  const [offerDialog, setOfferDialog] = useState(false)\r\n  const [discount, setDiscount] = useState('')\r\n  const [offerId, setOfferId] = useState('')\r\n\r\n  const truncateDescription = (description, maxLength) => {\r\n    if (description.length > maxLength) {\r\n      return description.slice(0, maxLength) + '...'\r\n    }\r\n    return description\r\n  }\r\n\r\n  const openOfferDialog = (id, itemDiscount) => {\r\n    setDiscount(itemDiscount)\r\n    setOfferId(id)\r\n    setOfferDialog(true)\r\n  }\r\n\r\n  const getProducts = async () => {\r\n    setLoading(true)\r\n    const response = await fetch(`${API_ROUTE}/products?page=${currentPage}`)\r\n    const data = await response.json()\r\n    setProducts(data['data'])\r\n    setLinks(data['links'])\r\n    setLoading(false)\r\n  }\r\n\r\n  const getFilteredProducts = async () => {\r\n    const response = await fetch(`${API_ROUTE}/search_product/${searchQuery}`)\r\n    const data = await response.json()\r\n    setProducts(data.products)\r\n    setLoading(false)\r\n  }\r\n\r\n  const getProductsByCategory = async () => {\r\n    const response = await fetch(`${API_ROUTE}/products_by_category/${categoryFilter}`)\r\n    const data = await response.json()\r\n    setProducts(data['products'])\r\n    setLoading(false)\r\n  }\r\n\r\n  const updateAvailability = async (id, availability) => {\r\n    setLoadingId(id)\r\n    const updatedProducts = products.map((product) =>\r\n      product.id === id\r\n        ? { ...product, available: availability === 'true' ? 'false' : 'true' }\r\n        : product,\r\n    )\r\n    setProducts(updatedProducts)\r\n\r\n    const formData = new FormData()\r\n    formData.append('product_id', id)\r\n    formData.append('available', availability === 'true' ? 'false' : 'true')\r\n\r\n    try {\r\n      await axios.post(`${API_ROUTE}/update_product_status`, formData)\r\n      notifyEdit2()\r\n      setLoadingId(null)\r\n    } catch (error) {\r\n      console.error(error)\r\n      const failedProductsUpdate = products.map((product) =>\r\n        product.id === id ? { ...product, available: availability } : product,\r\n      )\r\n      setProducts(failedProductsUpdate)\r\n    }\r\n  }\r\n  const updateOffer = async (id, isOffer) => {\r\n    setLoadingOfferId(id)\r\n    const updatedProducts = products.map((product) =>\r\n      product.id === id ? { ...product, is_offer: isOffer === 'true' ? 'false' : 'true' } : product,\r\n    )\r\n    setProducts(updatedProducts)\r\n\r\n    const formData = new FormData()\r\n    formData.append('product_id', id)\r\n    formData.append('is_offer', isOffer === 'true' ? 'false' : 'true')\r\n    formData.append('discount_percentage', discount)\r\n\r\n    try {\r\n      await axios.post(`${API_ROUTE}/update_product_is_offer_status`, formData)\r\n      notifyEdit2()\r\n      setLoadingOfferId(null)\r\n    } catch (error) {\r\n      console.error(error)\r\n      const failedProductsUpdate = products.map((product) =>\r\n        product.id === id ? { ...product, is_offer: isOffer } : product,\r\n      )\r\n      setProducts(failedProductsUpdate)\r\n    }\r\n    setOfferDialog(false)\r\n  }\r\n\r\n  const { showDialog, confirmDelete, executeDelete, cancelDelete } = useDelete(\r\n    'products',\r\n    getProducts,\r\n  )\r\n\r\n  const {\r\n    showDeleteDialog,\r\n    markedItems,\r\n    toggleMarkedItem,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n  } = useDeleteMarked(products, 'products', getProducts)\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n  }, [currentPage])\r\n\r\n  useEffect(() => {\r\n    if (searchQuery.trim() === '') {\r\n      getProducts()\r\n    } else {\r\n      getFilteredProducts()\r\n    }\r\n  }, [searchQuery])\r\n\r\n  useEffect(() => {\r\n    if (categoryFilter === '') {\r\n      getProducts()\r\n    } else {\r\n      getProductsByCategory()\r\n    }\r\n  }, [categoryFilter])\r\n\r\n  const handlePageClick = (page) => {\r\n    setCurrentPage(page)\r\n  }\r\n\r\n  const handleDeletePage = () => {\r\n    deleteMarked()\r\n    setCurrentPage(1)\r\n  }\r\n\r\n  const handleOnDragEnd = async (result) => {\r\n    if (!result.destination) return\r\n    const items = Array.from(products)\r\n    const [reorderedItem] = items.splice(result.source.index, 1)\r\n    items.splice(result.destination.index, 0, reorderedItem)\r\n    console.log(result)\r\n\r\n    setProducts(items)\r\n    try {\r\n      await axios.put(`${API_ROUTE}/products/${result.draggableId}/order-number`, {\r\n        order_number: result.destination.index + 1,\r\n      })\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return {\r\n    products,\r\n    loading,\r\n    showDialog,\r\n    confirmDelete,\r\n    executeDelete,\r\n    cancelDelete,\r\n    handlePageClick,\r\n    truncateDescription,\r\n    categoryFilter,\r\n    setCategoryFilter,\r\n    toggleMarkedItem,\r\n    markedItems,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n    showDeleteDialog,\r\n    currentPage,\r\n    setCurrentPage,\r\n    links,\r\n    updateAvailability,\r\n    searchQuery,\r\n    setSearchQuery,\r\n    handleDeletePage,\r\n    loadingId,\r\n    setProducts,\r\n    handleOnDragEnd,\r\n    sortKey,\r\n    setSortKey,\r\n    selectedProduct,\r\n    setSelectedProduct,\r\n    productDialog,\r\n    setProductDialog,\r\n    updateOffer,\r\n    loadingOfferId,\r\n    offerDialog,\r\n    setOfferDialog,\r\n    discount,\r\n    setDiscount,\r\n    openOfferDialog,\r\n    offerId,\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyEdit } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useProducts } from '../products/useProducts'\r\nimport { useCategories } from '../categories/useCategories'\r\n\r\nexport const useSliderEditing = (sliderId, item) => {\r\n  const { image, image_mobile, type, data_id } = item\r\n  const navigate = useNavigate()\r\n  const [sliderPic, setSliderPic] = useState()\r\n  const [sliderPicMobile, setSliderPicMobile] = useState()\r\n  const [productID, setProductID] = useState('')\r\n  const [productName, setProductName] = useState('')\r\n  const [imagePC, setImagePC] = useState('')\r\n  const [imageMobile, setImageMobile] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const { products } = useProducts()\r\n  const { categories } = useCategories()\r\n  const [visible, setVisible] = useState(false)\r\n  const [sliderType, setSliderType] = useState()\r\n\r\n  const getSlider = async () => {\r\n    const url = `${API_ROUTE}/sliders/${sliderId}`\r\n    const response = await fetch(url)\r\n    const item = await response.json()\r\n    setSliderPic(image)\r\n    setSliderPicMobile(image_mobile)\r\n    setProductID(data_id)\r\n    setSliderType(type)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSlider()\r\n  }, [])\r\n\r\n  const update = () => {\r\n    setLoading(true)\r\n    const formData = new FormData()\r\n    formData.append('data_id', productID)\r\n    formData.append('image', imagePC)\r\n    formData.append('image_mobile', imageMobile)\r\n    formData.append('type', sliderType)\r\n    axios\r\n      .post(`${API_ROUTE}/sliders/${sliderId}?_method=PUT`, formData)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        notifyEdit()\r\n        setTimeout(() => {\r\n          navigate('/sliders')\r\n        }, 500)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        setLoading(false)\r\n        setVisible(true)\r\n      })\r\n  }\r\n  return {\r\n    sliderPic,\r\n    sliderPicMobile,\r\n    products,\r\n    productID,\r\n    setProductID,\r\n    image: imagePC,\r\n    setImage: setImagePC,\r\n    image_mobile: imageMobile,\r\n    setImageMobile,\r\n    loading,\r\n    update,\r\n    visible,\r\n    setVisible,\r\n    type: sliderType,\r\n    setType: setSliderType,\r\n    categories,\r\n  }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport { CAlert, CButton, CCardBody, CCol, CFormCheck, CFormSelect, CRow } from '@coreui/react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useSliderEditing } from 'src/hooks/sliders/useSliderEditing'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { NotePencil } from 'phosphor-react'\r\nimport { Theme } from 'src/constants/colors'\r\nimport image from '../../assets/images/image.png'\r\n\r\nconst EditSlider = () => {\r\n  const params = useParams()\r\n  const { state } = useLocation()\r\n  const item = state?.item\r\n\r\n  const {\r\n    sliderPic,\r\n    sliderPicMobile,\r\n    products,\r\n    productID,\r\n    setProductID,\r\n    image: imagePC,\r\n    setImage,\r\n    image_mobile,\r\n    setImageMobile,\r\n    loading,\r\n    update,\r\n    visible,\r\n    setVisible,\r\n    type,\r\n    setType,\r\n    categories,\r\n  } = useSliderEditing(params.id, item)\r\n\r\n  if (!item) {\r\n    return <div>Product not found</div>\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"تعديل الشريحة\" icon={<NotePencil size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              {' '}\r\n              <div className=\"row md-12\" style={{ marginTop: '15px' }}>\r\n                <div className=\"col\" style={{ width: '100%' }}>\r\n                  <label className=\"form-label\">صورة الشريحة</label>\r\n\r\n                  <input\r\n                    className=\"form-control form-control-sm\"\r\n                    id=\"formFileSm\"\r\n                    type=\"file\"\r\n                    name=\"product_pic\"\r\n                    onChange={(e) => setImage(e.target.files[0])}\r\n                  />\r\n                  {imagePC ? (\r\n                    <img\r\n                      src={imagePC ? URL.createObjectURL(imagePC) : image}\r\n                      onError={(e) => {\r\n                        e.target.onError = null\r\n                        e.target.src = image\r\n                      }}\r\n                      alt=\"picture\"\r\n                      width={300}\r\n                      height={300}\r\n                      style={{ margin: '10px' }}\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src={sliderPic ? sliderPic : image}\r\n                      onError={(e) => {\r\n                        e.target.onError = null\r\n                        e.target.src = image\r\n                      }}\r\n                      width={300}\r\n                      height={300}\r\n                      style={{ margin: '10px' }}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div className=\"col\">\r\n                  <label className=\"form-label\">صورة شريحة الموبايل</label>\r\n\r\n                  <input\r\n                    className=\"form-control form-control-sm\"\r\n                    id=\"formFileSm\"\r\n                    type=\"file\"\r\n                    name=\"product_pic\"\r\n                    onChange={(e) => setImageMobile(e.target.files[0])}\r\n                  />\r\n                  {image_mobile ? (\r\n                    <img\r\n                      src={image_mobile ? URL.createObjectURL(image_mobile) : image}\r\n                      onError={(e) => {\r\n                        e.target.onError = null\r\n                        e.target.src = image\r\n                      }}\r\n                      alt=\"picture\"\r\n                      width={300}\r\n                      height={300}\r\n                      style={{ margin: '10px' }}\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src={sliderPicMobile ? sliderPicMobile : image}\r\n                      onError={(e) => {\r\n                        e.target.onError = null\r\n                        e.target.src = image\r\n                      }}\r\n                      width={300}\r\n                      height={300}\r\n                      style={{ margin: '10px' }}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <CCol md={12}>هذه الشريحة تابعة لـ</CCol>\r\n                <CCol md={2} className=\"d-flex justify-content-between\">\r\n                  <CFormCheck\r\n                    button={{ color: 'success', variant: 'outline' }}\r\n                    type=\"radio\"\r\n                    name=\"options-outlined\"\r\n                    id=\"success-outlined\"\r\n                    autoComplete=\"off\"\r\n                    label=\"منتج\"\r\n                    value=\"product\"\r\n                    checked={type === 'product'}\r\n                    onChange={(e) => {\r\n                      setType(e.target.value)\r\n                    }}\r\n                  />\r\n                  <CFormCheck\r\n                    button={{ color: 'success', variant: 'outline' }}\r\n                    type=\"radio\"\r\n                    name=\"options-outlined\"\r\n                    id=\"danger-outlined\"\r\n                    autoComplete=\"off\"\r\n                    label=\"قسم رئيسي\"\r\n                    value=\"category\"\r\n                    checked={type === 'category'}\r\n                    onChange={(e) => {\r\n                      setType(e.target.value)\r\n                    }}\r\n                  />\r\n                </CCol>\r\n                {type == 'product' ? (\r\n                  <CCol md={12}>\r\n                    <CFormSelect\r\n                      id=\"productCategory\"\r\n                      label=\"اختر المنتج\"\r\n                      feedbackInvalid=\" المنتج مطلوب\"\r\n                      required\r\n                      value={productID}\r\n                      onChange={(e) => setProductID(e.target.value)}\r\n                    >\r\n                      <option selected=\"\" value=\"\"> اختر المنتج</option>\r\n                      {products.map((item, index) => (\r\n                        <option value={item.id} key={item.id}>\r\n                          {item.name_ar}\r\n                        </option>\r\n                      ))}\r\n                    </CFormSelect>\r\n                  </CCol>\r\n                ) : (\r\n                  <CCol md={12}>\r\n                    <CFormSelect\r\n                      id=\"productCategory\"\r\n                      label=\"اختر القسم\"\r\n                      feedbackInvalid=\" القسم مطلوب\"\r\n                      value={productID}\r\n                      onChange={(e) => setProductID(e.target.value)}\r\n                      required\r\n                    >\r\n                      <option selected=\"\" value=\"\"> اختر القسم</option>\r\n                      {categories.map((item, index) => (\r\n                        <option value={item.id} key={item.id}>\r\n                          {item.name_ar}\r\n                        </option>\r\n                      ))}\r\n                    </CFormSelect>\r\n                  </CCol>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {loading ? (\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            ) : (\r\n              <CButton\r\n                style={{\r\n                  width: '200px',\r\n                  marginTop: '30px',\r\n                  backgroundColor: Theme.primary1,\r\n                  border: 'none',\r\n                }}\r\n                type=\"submit\"\r\n                onClick={update}\r\n              >\r\n                <span style={{ fontWeight: 'bolder' }}>حفظ</span>\r\n              </CButton>\r\n            )}\r\n            <CAlert color=\"danger\" dismissible visible={visible} onClose={() => setVisible(false)}>\r\n              حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n            </CAlert>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default EditSlider\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyEdit } from 'src/utils/util'\r\nimport { useDelete } from '../general/useDelete'\r\nimport { useDeleteMarked } from '../general/useDeleteMarked'\r\n\r\nexport const useSliders = () => {\r\n  const [sliders, setSliders] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingId, setLoadingId] = useState()\r\n\r\n  const getSliders = async () => {\r\n    const response = await fetch(`${API_ROUTE}/sliders`)\r\n    const data = await response.json()\r\n    // eslint-disable-next-line dot-notation\r\n    setSliders(data['sliders'])\r\n    setLoading(false)\r\n  }\r\n  const { showDialog, confirmDelete, executeDelete, cancelDelete } = useDelete(\r\n    'sliders',\r\n    getSliders,\r\n  )\r\n\r\n  const {\r\n    showDeleteDialog,\r\n    markedItems,\r\n    toggleMarkedItem,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n  } = useDeleteMarked(sliders, 'sliders', getSliders)\r\n\r\n  const changeActiveStatus = async (id, activeState) => {\r\n    setLoadingId(id)\r\n    const formData = new FormData()\r\n    formData.append('slider_id', id)\r\n    if (activeState === 'true') {\r\n      formData.append('active', 'false')\r\n    } else {\r\n      formData.append('active', 'true')\r\n    }\r\n    try {\r\n      await axios.post(`${API_ROUTE}/update_slider_status`, formData)\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      getSliders()\r\n      notifyEdit()\r\n      setLoadingId(null)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getSliders()\r\n  }, [])\r\n\r\n  return {\r\n    loading,\r\n    showDialog,\r\n    sliders,\r\n    confirmDelete,\r\n    executeDelete,\r\n    cancelDelete,\r\n    toggleMarkedItem,\r\n    markedItems,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n    showDeleteDialog,\r\n    changeActiveStatus,\r\n    loadingId,\r\n  }\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport { Dialog, DialogActions, DialogTitle, Button } from '@mui/material'\r\nimport { Theme } from 'src/constants/colors'\r\nimport '../layout/layout.css'\r\nimport { CButton, CModal, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react'\r\nimport React from 'react'\r\n\r\nconst AppDialog = ({ title, open, onClose, actionCancel, actionExecute, deleteDialog = false }) => {\r\n  return (\r\n    <CModal\r\n      alignment=\"center\"\r\n      visible={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"VerticallyCenteredExample\"\r\n      className=\"almarai-regular \"\r\n    >\r\n      <CModalHeader>\r\n        <CModalTitle style={{ margin: 'auto' }} id=\"VerticallyCenteredExample\">\r\n          {title}\r\n        </CModalTitle>\r\n      </CModalHeader>\r\n      {deleteDialog ? (\r\n        <CModalFooter>\r\n          <CButton\r\n            onClick={actionCancel}\r\n            style={{ color: Theme.gray, backgroundColor: 'white', border: 'none' }}\r\n          >\r\n            إلغاء\r\n          </CButton>\r\n          <CButton\r\n            onClick={actionExecute}\r\n            style={{ backgroundColor: Theme.primaryRed, color: 'white', border: 'none' }}\r\n          >\r\n            نعم بالتأكيد\r\n          </CButton>\r\n        </CModalFooter>\r\n      ) : (\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\">Close</CButton>\r\n        </CModalFooter>\r\n      )}\r\n    </CModal>\r\n\r\n    /* <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      className=\"almarai-regular\"\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-title\"\r\n        color=\"white\"\r\n        style={{ color: Theme.primaryRed }}\r\n      >\r\n        {title}\r\n      </DialogTitle>\r\n      <DialogActions>\r\n        {deleteDialog ? (\r\n          <>\r\n            <Button onClick={actionCancel} style={{color: Theme.gray}}>إلغاء</Button>\r\n            <Button\r\n              onClick={actionExecute}\r\n              style={{ backgroundColor: Theme.primaryRed, color: 'white' }}\r\n            >\r\n              نعم بالتأكيد\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <Button onClick={onClose}>حسنا</Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog> */\r\n  )\r\n}\r\n\r\nexport default AppDialog\r\n","/* eslint-disable react/prop-types */\r\nimport { CButton, CTooltip } from '@coreui/react'\r\nimport { Eye, NotePencil, Trash } from 'phosphor-react'\r\nimport React from 'react'\r\n\r\nconst AppTooltip = ({ type, onClick }) => {\r\n  const displayTooltip = () => {\r\n    switch (type) {\r\n      case 'delete':\r\n        return (\r\n          <CTooltip content=\"حذف\" placement=\"top\">\r\n            <CButton\r\n              color=\"danger\"\r\n              style={{ marginLeft: 3, boxShadow: '0px 2px 3px #c8c8c8' }}\r\n              onClick={onClick}\r\n            >\r\n              <Trash size={16} color=\"white\" />\r\n            </CButton>\r\n          </CTooltip>\r\n        )\r\n      case 'edit':\r\n        return (\r\n          <CTooltip content=\"تعديل\" placement=\"top\">\r\n            <CButton\r\n              color=\"info\"\r\n              onClick={onClick}\r\n              style={{ marginLeft: 3, boxShadow: '0px 2px 3px #c8c8c8' }}\r\n            >\r\n              <NotePencil size={16} weight=\"duotone\" color=\"white\" />\r\n            </CButton>\r\n          </CTooltip>\r\n        )\r\n      case 'view':\r\n        return (\r\n          <CTooltip content=\"عرض\" placement=\"top\">\r\n            <CButton color=\"primary\" onClick={onClick} style={{ boxShadow: '0px 2px 3px #c8c8c8' }}>\r\n              <Eye size={16} weight=\"duotone\" color=\"white\" />\r\n            </CButton>\r\n          </CTooltip>\r\n        )\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  return <>{displayTooltip()}</>\r\n}\r\n\r\nexport default AppTooltip\r\n","/* eslint-disable react/prop-types */\r\n\r\nimport empty from '../assets/images/empty-folder.png'\r\nimport React from 'react'\r\n\r\nconst EmptyPage = ({ emptyItems }) => {\r\n  return (\r\n    <div className=\"m-3 py-3 d-flex align-items-center justify-content-center flex-column\">\r\n      <h5>لا يوجد {emptyItems} في الوقت الحالي</h5>\r\n      <br />\r\n      <img src={empty} alt=\"image\" width=\"350\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmptyPage\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSwitch,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { CheckSquare, SidebarSimple } from 'phosphor-react'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useSliders } from 'src/hooks/sliders/useSliders'\r\nimport AppDialog from 'src/components/AppDialog'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport AppTooltip from 'src/components/Tooltip'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport image from '../../assets/images/image.png'\r\nimport EmptyPage from 'src/components/EmptyPage'\r\n\r\nconst Sliders = () => {\r\n  const navigate = useNavigate()\r\n  const {\r\n    loading,\r\n    showDialog,\r\n    sliders,\r\n    confirmDelete,\r\n    executeDelete,\r\n    cancelDelete,\r\n    toggleMarkedItem,\r\n    markedItems,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n    showDeleteDialog,\r\n    changeActiveStatus,\r\n    loadingId,\r\n  } = useSliders()\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle\r\n          title=\"الشرائح\"\r\n          icon={<SidebarSimple size={25} />}\r\n          addItem={true}\r\n          addPath=\"add_slider\"\r\n          addText=\"إضافة شريحة\"\r\n          mark={true}\r\n          deleteMarked={deleteMarked}\r\n          markedItems={markedItems}\r\n        />\r\n        <AppBreadcrumb />\r\n        <div>\r\n          {loading ? (\r\n            <div className=\"h-100 w-100 d-flex justify-content-center align-items-center py-5 my-5\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {sliders.length > 0 ? (\r\n                <div\r\n                  className=\"rounded my-3\"\r\n                  style={{ backgroundColor: Theme.white, boxShadow: '0px 2px 3px #c8c8c8' }}\r\n                >\r\n                  <CTable align=\"middle\" className=\"mb-3\" hover responsive striped>\r\n                    <CTableHead color=\"light\">\r\n                      <CTableRow>\r\n                        <CTableHeaderCell className=\"text-center\" style={{ width: 100 }}>\r\n                          <CButton\r\n                            style={{\r\n                              backgroundColor: Theme.primary1,\r\n                              border: 'none',\r\n                            }}\r\n                            onClick={markAll}\r\n                          >\r\n                            <CheckSquare size={20} /> الكل\r\n                          </CButton>\r\n                        </CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">الصورة</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">صورة الهاتف</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\"> الإجراءات </CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\"> تفعيل </CTableHeaderCell>\r\n                      </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                      {sliders.map((item, index) => (\r\n                        <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                          <CTableDataCell className=\"text-center fw-medium\">\r\n                            <div className=\"d-flex justify-content-center align-items-center\">\r\n                              <CFormCheck\r\n                                id=\"index\"\r\n                                className=\"customCheckbox\"\r\n                                label=\" \"\r\n                                reverse\r\n                                checked={markedItems.find((id) => id == item.id)}\r\n                                onChange={() => {\r\n                                  toggleMarkedItem(item.id)\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <img\r\n                              src={item.image ? item.image : image}\r\n                              onError={(e) => {\r\n                                e.target.onError = null\r\n                                e.target.src = image\r\n                              }}\r\n                              alt=\"image\"\r\n                              width=\"100\"\r\n                            />\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <img\r\n                              src={item.image_mobile ? item.image_mobile : image}\r\n                              onError={(e) => {\r\n                                e.target.onError = null\r\n                                e.target.src = image\r\n                              }}\r\n                              alt=\"image_mobile\"\r\n                              width=\"100\"\r\n                            />\r\n                          </CTableDataCell>\r\n\r\n                          <CTableDataCell>\r\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                              <AppTooltip type=\"delete\" onClick={() => confirmDelete(item.id)} />\r\n                              <AppTooltip\r\n                                type=\"edit\"\r\n                                onClick={() =>\r\n                                  navigate(`/edit_slider/${item.id}`, { state: { item } })\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell>\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              {loadingId == item.id ? (\r\n                                <Spinner animation=\"border\" role=\"status\">\r\n                                  <span className=\"visually-hidden\">Loading...</span>\r\n                                </Spinner>\r\n                              ) : (\r\n                                <CFormSwitch\r\n                                  size=\"lg\"\r\n                                  id=\"activeApp\"\r\n                                  checked={item.active === 'true'}\r\n                                  reverse\r\n                                  style={\r\n                                    item.active === 'true'\r\n                                      ? {\r\n                                          boxShadow: 'none',\r\n                                          backgroundColor: Theme.primary1,\r\n                                          borderColor: Theme.primary1,\r\n                                        }\r\n                                      : { boxShadow: 'none' }\r\n                                  }\r\n                                  onChange={() => {\r\n                                    changeActiveStatus(item.id, item.active)\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </div>\r\n                          </CTableDataCell>\r\n                        </CTableRow>\r\n                      ))}\r\n                    </CTableBody>\r\n                  </CTable>\r\n                </div>\r\n              ) : (\r\n                <EmptyPage emptyItems=\"شرائح\" />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CCol>\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف هذه الشريحة ؟\"\r\n        open={showDialog}\r\n        onClose={cancelDelete}\r\n        actionCancel={cancelDelete}\r\n        actionExecute={executeDelete}\r\n        deleteDialog={true}\r\n      />\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف جميع الشرائح التي تم تحديدها ؟\"\r\n        open={showDeleteDialog}\r\n        onClose={cancelDeleteMarked}\r\n        actionCancel={cancelDeleteMarked}\r\n        actionExecute={executeDeleteMarked}\r\n        deleteDialog={true}\r\n      />\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Sliders\r\n","import { useState, useEffect } from 'react'\r\nimport { API_ROUTE } from 'src/routes'\r\n\r\nexport const useAllProducts = () => {\r\n  const [products, setProducts] = useState()\r\n  const getAllProducts = async () => {\r\n    console.log('inside get all products')\r\n    const response = await fetch(`${API_ROUTE}/all_products`)\r\n    const data = await response.json()\r\n    setProducts(data)\r\n    console.log('data', data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllProducts()\r\n  }, [])\r\n\r\n  return {\r\n    products,\r\n  }\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport const useFormValidation = (addFunc) => {\r\n  const [validated, setValidated] = useState(false)\r\n  const [checkValidated, setCheckValidated] = useState(true)\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const form = event.currentTarget\r\n    if (form.checkValidity() === false || checkValidated === false) {\r\n      event.stopPropagation()\r\n    } else {\r\n      addFunc()\r\n    }\r\n    setValidated(true)\r\n  }\r\n\r\n  return {\r\n    validated,\r\n    handleSubmit,\r\n    checkValidated,\r\n    setCheckValidated,\r\n  }\r\n}\r\n","/* eslint-disable react/jsx-key */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable prettier/prettier */\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CForm,\r\n  CFormCheck,\r\n  CFormInput,\r\n  CFormSelect,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport { PlusCircle } from 'phosphor-react'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport AppCard from 'src/components/AppCard'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useAllProducts } from 'src/hooks/general/useAllProducts'\r\nimport { useSliderAdding } from 'src/hooks/sliders/useSliderAdding'\r\nconst AddSlider = () => {\r\n  const {\r\n    sliderImage,\r\n    setSliderImage,\r\n    sliderImageMobile,\r\n    setSliderImageMobile,\r\n    // products,\r\n    productID,\r\n    setProductID,\r\n    loading,\r\n    handleSubmit,\r\n    validated,\r\n    visible,\r\n    setVisible,\r\n    categories,\r\n    type,\r\n    setType,\r\n  } = useSliderAdding()\r\n  const { products } = useAllProducts()\r\n  console.log(products)\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"شريحة جديدة\" icon={<PlusCircle size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <CForm\r\n                    className=\"row g-3 needs-validation\"\r\n                    noValidate\r\n                    validated={validated}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    <div className=\"mb-3\">\r\n                      <CFormInput\r\n                        label=\"الصورة\"\r\n                        type=\"file\"\r\n                        id=\"Pic\"\r\n                        feedbackInvalid=\"الصورة مطلوبة\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setSliderImage(e.target.files[0])\r\n                        }}\r\n                      />\r\n                      {sliderImage && (\r\n                        <img\r\n                          src={sliderImage ? URL.createObjectURL(sliderImage) : ''}\r\n                          width=\"250\"\r\n                          height=\"200\"\r\n                          alt=\"slider\"\r\n                          style={{ margin: '10px' }}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <CFormInput\r\n                        label=\"صورة الهاتف\"\r\n                        type=\"file\"\r\n                        id=\"phonePic\"\r\n                        feedbackInvalid=\"صورة الهاتف مطلوبة\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setSliderImageMobile(e.target.files[0])\r\n                        }}\r\n                      />\r\n                      {sliderImageMobile && (\r\n                        <img\r\n                          src={sliderImageMobile ? URL.createObjectURL(sliderImageMobile) : ''}\r\n                          width=\"250\"\r\n                          height=\"200\"\r\n                          alt=\"slider\"\r\n                          style={{ margin: '10px' }}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <CCol md={12}>هذه الشريحة تابعة لـ</CCol>\r\n                    <CCol md={2} className=\"d-flex justify-content-between\">\r\n                      <CFormCheck\r\n                        button={{ color: 'secondary', variant: 'outline' }}\r\n                        type=\"radio\"\r\n                        name=\"options-outlined\"\r\n                        id=\"secondary-outlined\"\r\n                        autoComplete=\"off\"\r\n                        label=\"منتج\"\r\n                        value=\"product\"\r\n                        checked={type === 'product'}\r\n                        onChange={(e) => {\r\n                          setType(e.target.value)\r\n                        }}\r\n                      />\r\n                      <CFormCheck\r\n                        button={{ color: 'secondary', variant: 'outline' }}\r\n                        type=\"radio\"\r\n                        name=\"options-outlined\"\r\n                        id=\"danger-outlined\"\r\n                        autoComplete=\"off\"\r\n                        label=\"قسم رئيسي\"\r\n                        value=\"category\"\r\n                        checked={type === 'category'}\r\n                        onChange={(e) => {\r\n                          setType(e.target.value)\r\n                        }}\r\n                      />\r\n                    </CCol>\r\n                    {type === 'product' ? (\r\n                      <CCol md={12}>\r\n                        <CFormSelect\r\n                          id=\"productCategory\"\r\n                          label=\"اختر المنتج\"\r\n                          feedbackInvalid=\" المنتج مطلوب\"\r\n                          value={productID}\r\n                          onChange={(e) => setProductID(e.target.value)}\r\n                          required\r\n                        >\r\n                          <option selected=\"\" value=\"\">\r\n                            {' '}\r\n                            اختر المنتج\r\n                          </option>\r\n                          {products?.map((item, index) => (\r\n                            <option value={item.id} key={item.id}>\r\n                              {item.name_ar}\r\n                            </option>\r\n                          ))}\r\n                        </CFormSelect>\r\n                      </CCol>\r\n                    ) : (\r\n                      <CCol md={12}>\r\n                        <CFormSelect\r\n                          id=\"productCategory\"\r\n                          label=\"اختر القسم\"\r\n                          feedbackInvalid=\" القسم مطلوب\"\r\n                          value={productID}\r\n                          onChange={(e) => setProductID(e.target.value)}\r\n                          required\r\n                        >\r\n                          <option selected=\"\" value=\"\">\r\n                            {' '}\r\n                            اختر القسم\r\n                          </option>\r\n                          {categories.map((item, index) => (\r\n                            <option value={item.id} key={item.id}>\r\n                              {item.name_ar}\r\n                            </option>\r\n                          ))}\r\n                        </CFormSelect>\r\n                      </CCol>\r\n                    )}\r\n                    {loading ? (\r\n                      <Spinner animation=\"border\" role=\"status\" style={{ margin: '20px' }}>\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                      </Spinner>\r\n                    ) : (\r\n                      <CButton\r\n                        style={{\r\n                          width: '200px',\r\n                          marginTop: '30px',\r\n                          backgroundColor: Theme.primary1,\r\n                          border: 'none',\r\n                        }}\r\n                        type=\"submit\"\r\n                      >\r\n                        <span style={{ fontWeight: 'bolder' }}>اضافه شريحة</span>\r\n                      </CButton>\r\n                    )}\r\n                    <CAlert\r\n                      color=\"danger\"\r\n                      dismissible\r\n                      visible={visible}\r\n                      onClose={() => setVisible(false)}\r\n                    >\r\n                      حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n                    </CAlert>\r\n                  </CForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\nexport default AddSlider\r\n","import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyAdd } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useProducts } from '../products/useProducts'\r\nimport { useFormValidation } from '../general/useFormValidation'\r\nimport { useCategories } from '../categories/useCategories'\r\n\r\nexport const useSliderAdding = () => {\r\n  const [sliderImage, setSliderImage] = useState('')\r\n  const [sliderImageMobile, setSliderImageMobile] = useState('')\r\n  const [productID, setProductID] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const { products } = useProducts()\r\n  const { categories } = useCategories()\r\n  const navigate = useNavigate()\r\n  const [type, setType] = useState('product')\r\n\r\n  const addSlider = async () => {\r\n    setLoading(true)\r\n    let formData = new FormData()\r\n    formData.append('image', sliderImage)\r\n    formData.append('image_mobile', sliderImageMobile)\r\n    formData.append('data_id', productID)\r\n    formData.append('type', type)\r\n    const response = await axios\r\n      .post(`${API_ROUTE}/sliders`, formData)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        notifyAdd()\r\n        setTimeout(() => {\r\n          navigate('/sliders')\r\n        }, 500)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        setLoading(false)\r\n        setVisible(true)\r\n      })\r\n  }\r\n\r\n  const { handleSubmit, validated } = useFormValidation(addSlider)\r\n  return {\r\n    sliderImage,\r\n    setSliderImage,\r\n    sliderImageMobile,\r\n    setSliderImageMobile,\r\n    products,\r\n    productID,\r\n    setProductID,\r\n    loading,\r\n    addSlider,\r\n    handleSubmit,\r\n    validated,\r\n    visible,\r\n    setVisible,\r\n    categories,\r\n    type,\r\n    setType,\r\n  }\r\n}\r\n","import { useLoadScript } from '@react-google-maps/api'\r\nimport { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { API_ROUTE } from 'src/routes'\r\n\r\nexport const useOrderDetails = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [order, setOrder] = useState([''])\r\n  const [OrderDetails, setOrderDetails] = useState([])\r\n  const [coordinate, setCoordinates] = useState({ lng: 0, lat: 0 })\r\n  const params = useParams()\r\n  const [visible, setVisible] = useState(false)\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY || '',\r\n  })\r\n  const getOrderDetails = async () => {\r\n    const url = `${API_ROUTE}/orders/${params.id}`\r\n    const response = await fetch(url)\r\n    const item = await response.json()\r\n    setOrder(item['order'])\r\n    setOrderDetails(item['order']['order_details'])\r\n    const lattitude = item.order.lattitude\r\n    const longitude = item.order.longitude\r\n    setCoordinates({ lng: longitude, lat: lattitude })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getOrderDetails()\r\n  }, [])\r\n  const totals = OrderDetails.reduce((total, e) => {\r\n    return total + e.sum_all\r\n  }, 0)\r\n\r\n  return {\r\n    loading,\r\n    order,\r\n    OrderDetails,\r\n    totals,\r\n    isLoaded,\r\n    visible,\r\n    setVisible,\r\n    coordinate,\r\n    setCoordinates,\r\n  }\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport { useState } from 'react'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\nimport React from 'react'\r\n\r\nconst OrderCard = ({ title, info }) => {\r\n  const { width } = useWidth()\r\n\r\n  return (\r\n    <div\r\n      style={\r\n        width < 768\r\n          ? {\r\n              backgroundColor: Theme.primaryLight,\r\n              borderRadius: 5,\r\n              boxShadow: '0px 2px 3px #c8c8c8',\r\n              // margin: '1rem',\r\n              padding: '1rem',\r\n              paddingBottom: 0,\r\n              width: '49%',\r\n              rowGap: 5,\r\n              marginBottom: '0.5rem',\r\n            }\r\n          : {\r\n              backgroundColor: Theme.primaryLight,\r\n              borderRadius: 5,\r\n              boxShadow: '0px 2px 3px #c8c8c8',\r\n              // margin: '1rem',\r\n              padding: '1rem',\r\n              paddingBottom: 0,\r\n              width: '20%',\r\n              rowGap: 5,\r\n            }\r\n      }\r\n      className=\"d-flex justify-content-center align-items-center flex-column\"\r\n    >\r\n      <h5 style={{ fontWeight: 'bold' }}>{title}</h5>\r\n      <p>{info}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderCard\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n// import { useData } from 'src/context/DataContext'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { GoogleMap, Marker } from '@react-google-maps/api'\r\nimport { useOrderDetails } from 'src/hooks/orders/useOrderDetails'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { Theme } from 'src/constants/colors'\r\nimport OrderCard from 'src/components/OrderCard'\r\nimport { Equals, Minus, ShoppingCartSimple, X } from 'phosphor-react'\r\nimport image from '../../assets/images/image.png'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\n\r\nconst OrderDetails = () => {\r\n  const { loading, order, OrderDetails, totals, isLoaded, coordinate, setCoordinates } =\r\n    useOrderDetails()\r\n  const { width } = useWidth()\r\n\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol xs>\r\n          <PageTitle\r\n            title=\"تفاصيل الطلبية\"\r\n            icon={<ShoppingCartSimple size={25} weight=\"light\" />}\r\n          />\r\n          <AppBreadcrumb />\r\n          <AppCard className=\"mb-2\">\r\n            <CCardBody\r\n              className=\"d-flex justify-content-between\"\r\n              style={width < 768 ? { columnGap: 5, flexWrap: 'wrap' } : { columnGap: 5 }}\r\n            >\r\n              <OrderCard title=\"اسم الزبون:\" info={order.customer_name} />\r\n              <OrderCard title=\"رقم الهاتف:\" info={order.phone} />\r\n              <OrderCard title=\" المنطقة:\" info={order.geoarea} />\r\n              <OrderCard title=\"المدينة:\" info={order.city} />\r\n              <OrderCard\r\n                title=\"حالة الطلبية:\"\r\n                info={\r\n                  order.status === 'pending'\r\n                    ? 'معلق'\r\n                    : order.status === 'in_progress'\r\n                    ? 'في التوصيل'\r\n                    : order.status === 'done'\r\n                    ? 'عالق'\r\n                    : order.status === 'delivered'\r\n                    ? 'تم الاستلام'\r\n                    : order.status === 'cancelled'\r\n                    ? 'ملغي'\r\n                    : ''\r\n                }\r\n              />\r\n            </CCardBody>\r\n            <div\r\n              style={{\r\n                backgroundColor: Theme.base,\r\n                borderRadius: 5,\r\n                boxShadow: `0px 2px 3px #c8c8c8`,\r\n                margin: '1rem',\r\n                padding: '1rem',\r\n                paddingBottom: 0,\r\n                rowGap: 5,\r\n              }}\r\n              className=\"d-flex justify-content-center align-items-start flex-column\"\r\n            >\r\n              <h5 style={{ fontWeight: 'bold' }}>ملاحظات الزبون:</h5>\r\n              <p>{order.note ?? 'لا يوجد ملاحظات'}</p>\r\n            </div>\r\n\r\n            <CCardBody className={width > 768 ? 'd-flex flex-row justify-content-between' : ''}>\r\n              {loading ? (\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </Spinner>\r\n              ) : (\r\n                <div\r\n                  className=\"rounded my-3\"\r\n                  style={\r\n                    width > 768\r\n                      ? {\r\n                          backgroundColor: Theme.white,\r\n                          boxShadow: '0px 2px 3px #c8c8c8',\r\n                          width: '49%',\r\n                          overflowX: 'scroll',\r\n                          padding: '1rem',\r\n                        }\r\n                      : {\r\n                          backgroundColor: Theme.white,\r\n                          boxShadow: '0px 2px 3px #c8c8c8',\r\n                          width: '100%',\r\n                          overflowX: 'scroll',\r\n                          padding: '1rem',\r\n                        }\r\n                  }\r\n                >\r\n                  <h4 style={{ fontWeight: 'bold' }}>منتجات الطلبية</h4>\r\n                  {OrderDetails.map((item, index) => (\r\n                    <div\r\n                      key={index}\r\n                      style={{\r\n                        height: '20vh',\r\n                        borderBottom: '1px solid #c8c8c8',\r\n                        margin: '1rem',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-between',\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          height: '100%',\r\n                          display: 'flex',\r\n                          flexDirection: 'row',\r\n                          alignItems: 'center',\r\n                          paddingTop: '1rem',\r\n                          paddingBottom: '1rem',\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src={item.product_image ? item.product_image : image}\r\n                          onError={(e) => {\r\n                            e.target.onError = null\r\n                            e.target.src = image\r\n                          }}\r\n                          alt=\"product\"\r\n                          height=\"90%\"\r\n                        />\r\n                        {item.product ? (\r\n                          <div style={{ height: '100%', padding: '1rem' }}>\r\n                            {isArabic === 'true' && <h5>{item.product?.name_ar}</h5>}\r\n                            {/* {isEnglish === 'true' && <h5>{item.product?.name_en}</h5>}\r\n                            {isHebrew === 'true' && <h5>{item.product?.name_he}</h5>} */}\r\n                            <div style={{ display: 'flex' }}>\r\n                              {item.selected_color && (\r\n                                <div\r\n                                  style={{\r\n                                    padding: '0.25rem',\r\n                                    paddingLeft: '0.5rem',\r\n                                    paddingRight: '0.5rem',\r\n                                    backgroundColor: '#e6e6e6',\r\n                                    borderRadius: '20px',\r\n                                    marginTop: '0.5rem',\r\n                                    marginBottom: '0.5rem',\r\n                                    width: '5rem',\r\n                                    height: '2rem',\r\n                                    display: 'flex',\r\n                                    justifyContent: 'space-between',\r\n                                  }}\r\n                                >\r\n                                  اللون:\r\n                                  <span\r\n                                    style={{\r\n                                      backgroundColor: '#fff',\r\n                                      borderRadius: '20px',\r\n                                      width: '1.5rem',\r\n                                      height: '1.5rem',\r\n                                      display: 'inline-block',\r\n                                    }}\r\n                                  >\r\n                                    {item.selected_color && <>{item.selected_color}</>}\r\n                                  </span>\r\n                                </div>\r\n                              )}\r\n                              {item.selected_size && (\r\n                                <div\r\n                                  style={{\r\n                                    padding: '0.25rem',\r\n                                    paddingLeft: '0.5rem',\r\n                                    paddingRight: '0.5rem',\r\n                                    backgroundColor: '#e6e6e6',\r\n                                    borderRadius: '20px',\r\n                                    marginTop: '0.5rem',\r\n                                    marginBottom: '0.5rem',\r\n                                    width: '5rem',\r\n                                    height: '2rem',\r\n                                    display: 'flex',\r\n                                    justifyContent: 'space-between',\r\n                                  }}\r\n                                >\r\n                                  الحجم:\r\n                                  <span\r\n                                    style={{\r\n                                      borderRadius: '20px',\r\n                                      width: '1.5rem',\r\n                                      height: '1.5rem',\r\n                                      display: 'inline-block',\r\n                                    }}\r\n                                  >\r\n                                    {item.selected_size}\r\n                                  </span>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <h5>منتج محذوف</h5>\r\n                        )}\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"d-flex flex-row\">\r\n                          <h5>{item.qty}</h5>\r\n                          <X size={25} weight=\"light\" />\r\n                          <h5>₪{item.price}</h5>\r\n                        </div>\r\n                        <div\r\n                          style={{ color: 'gray' }}\r\n                          className=\"d-flex flex-row align-items-center justify-content-end\"\r\n                        >\r\n                          <h6>₪{item.sum_all}</h6>\r\n                          <Equals size={15} weight=\"light\" color=\"gray\" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  <div className=\"d-flex justify-content-between align-items-center mx-3\">\r\n                    <h4>المجموع: </h4>\r\n                    <h4>₪{totals}</h4>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div\r\n                className=\"rounded my-3\"\r\n                style={\r\n                  width > 768\r\n                    ? {\r\n                        backgroundColor: Theme.white,\r\n                        boxShadow: '0px 2px 3px #c8c8c8',\r\n                        width: '49%',\r\n                        overflowX: 'scroll',\r\n                        padding: '1rem',\r\n                      }\r\n                    : {\r\n                        backgroundColor: Theme.white,\r\n                        boxShadow: '0px 2px 3px #c8c8c8',\r\n                        width: '100%',\r\n                        overflowX: 'scroll',\r\n                        padding: '1rem',\r\n                      }\r\n                }\r\n              >\r\n                <h4 style={{ fontWeight: 'bold' }}>حسابات الطلبية</h4>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center m-4\"\r\n                  style={{ borderBottom: '1px solid #c8c8c8' }}\r\n                >\r\n                  <h5> سعر المنتجات: </h5>\r\n                  <h5>₪{totals}</h5>\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center m-4\"\r\n                  style={{ borderBottom: '1px solid #c8c8c8' }}\r\n                >\r\n                  <h5>سعر التوصيل: </h5>\r\n                  <h5>₪{order.delivery_price}</h5>\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center m-4\"\r\n                  style={{ borderBottom: '1px solid #c8c8c8' }}\r\n                >\r\n                  <h5>سعر الخصم: </h5>\r\n                  <h5>\r\n                    <Minus size={15} weight=\"bold\" />\r\n                    ₪0\r\n                  </h5>\r\n                </div>\r\n                <div className=\"d-flex justify-content-between align-items-center m-4\">\r\n                  <h5>السعر الإجمالي: </h5>\r\n                  <h5>₪{order.total}</h5>\r\n                </div>\r\n              </div>\r\n            </CCardBody>\r\n          </AppCard>\r\n          <div\r\n            className=\"rounded my-3 d-flex justify-content-center\"\r\n            style={{\r\n              backgroundColor: Theme.white,\r\n              boxShadow: '0px 2px 3px #c8c8c8',\r\n              width: '100%',\r\n              overflowX: 'scroll',\r\n            }}\r\n          >\r\n            {!isLoaded ? (\r\n              <div>Loading map...</div>\r\n            ) : (\r\n              <CCard\r\n                style={{ height: '600px', width: '900px', marginTop: '30px', marginBottom: '10px' }}\r\n              >\r\n                <GoogleMap\r\n                  zoom={10}\r\n                  center={coordinate}\r\n                  mapContainerStyle={{ height: '600px', width: '100%' }}\r\n                >\r\n                  <Marker position={coordinate} />\r\n                </GoogleMap>\r\n              </CCard>\r\n            )}\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderDetails\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { NotePencil, Trash } from 'phosphor-react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\n\r\nconst NotificationFirebase = () => {\r\n  const [Notification, setNotification] = useState([])\r\n  const navigate = useNavigate()\r\n  const [deleteId, setDeleteId] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [showDialog, setShowDialog] = useState(false)\r\n\r\n  const getNotification = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await fetch(`${API_ROUTE}/Notification`)\r\n      const data = await response.json()\r\n      setNotification(data.Notification)\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const confirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setShowDialog(true)\r\n  }\r\n\r\n  const cancelDelete = () => {\r\n    setDeleteId(null)\r\n    setShowDialog(false)\r\n  }\r\n\r\n  const executeDelete = async () => {\r\n    try {\r\n      await axios.delete(`${API_ROUTE}/Notification/${deleteId}`)\r\n      getNotification()\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setDeleteId(null)\r\n      setShowDialog(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getNotification()\r\n  }, [])\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader> الإشعارات</CCardHeader>\r\n          <CCardBody>\r\n            {/* <CButton\r\n              color=\"primary\"\r\n              style={{ width: '160px', margin: '5px', marginBottom: '10px' }}\r\n              onClick={() => {\r\n                navigate('/add_category')\r\n              }}\r\n            >\r\n              <span style={{ fontWeight: 'bolder' }}>إضافة قسم</span>\r\n            </CButton> */}\r\n            {loading ? (\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            ) : (\r\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\r\n                <CTableHead color=\"light\">\r\n                  <CTableRow>\r\n                    <CTableHeaderCell className=\"text-center\">الاسم</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\">الصورة</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\"> الإجراءات </CTableHeaderCell>\r\n                  </CTableRow>\r\n                </CTableHead>\r\n                <CTableBody>\r\n                  {Notification.map((item, index) => (\r\n                    <CTableRow v-for=\"item in tableItems\" key={item.id}>\r\n                      <CTableDataCell className=\"text-center\">{item.name}</CTableDataCell>\r\n\r\n                      <CTableDataCell className=\"text-center\">\r\n                        <img src={item.image} alt=\"image\" width=\"100\" height=\"100\" />\r\n                      </CTableDataCell>\r\n\r\n                      <CTableDataCell>\r\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                          <>\r\n                            <div\r\n                              // ref={ref}\r\n                              style={{\r\n                                backgroundColor: '#ff3a31',\r\n                                width: '85px',\r\n                                // margin: '20',\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-evenly',\r\n                                borderRadius: '10px',\r\n                                padding: '5px',\r\n                                margin: '10px',\r\n                                cursor: 'pointer',\r\n                              }}\r\n                              onClick={() => confirmDelete(item.id)}\r\n                            >\r\n                              <Trash size={22} color=\"white\" />\r\n                              <span style={{ color: 'white' }}>حذف</span>\r\n                            </div>\r\n                          </>\r\n                          <div\r\n                            style={{\r\n                              backgroundColor: '#38b0f1',\r\n                              width: '85px',\r\n                              // margin: '20',\r\n                              display: 'flex',\r\n                              flexDirection: 'row',\r\n                              justifyContent: 'space-evenly',\r\n                              borderRadius: '10px',\r\n                              padding: '5px',\r\n                              margin: '10px',\r\n                              cursor: 'pointer',\r\n                            }}\r\n                            onClick={() => navigate(`/edit_category/${item.id}`)}\r\n                          >\r\n                            <NotePencil size={22} weight=\"duotone\" color=\"white\" />\r\n                            <span style={{ color: 'white' }}>تعديل</span>\r\n                          </div>\r\n                        </div>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  ))}\r\n                </CTableBody>\r\n              </CTable>\r\n            )}\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <Dialog\r\n        open={showDialog}\r\n        onClose={cancelDelete}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" color=\"white\" style={{ backgroundColor: '#ff3a31' }}>\r\n          هل أنت متأكد من رغبتك بحذف هذا الاشعار ؟\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={cancelDelete}>إلغاء</Button>\r\n          <Button onClick={executeDelete} style={{ backgroundColor: '#ff3a31', color: 'white' }}>\r\n            نعم بالتأكيد\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default NotificationFirebase\r\n","import { useState, useEffect } from 'react'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { useDelete } from '../general/useDelete'\r\n\r\nexport const useBanners = () => {\r\n  const [banners, setBanners] = useState([])\r\n  const [selectedLanguage, setSelectedLanguage] = useState('ar')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const getBanners = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await fetch(`${API_ROUTE}/banners`)\r\n      const data = await response.json()\r\n      setBanners(data.banners)\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const { showDialog, confirmDelete, executeDelete, cancelDelete } = useDelete(\r\n    'banners',\r\n    getBanners,\r\n  )\r\n\r\n  useEffect(() => {\r\n    getBanners()\r\n  }, [])\r\n\r\n  return {\r\n    banners,\r\n    loading,\r\n    showDialog,\r\n    confirmDelete,\r\n    cancelDelete,\r\n    executeDelete,\r\n    selectedLanguage,\r\n    setSelectedLanguage,\r\n  }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport {\r\n  CCol,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { Cards } from 'phosphor-react'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useBanners } from 'src/hooks/banners/useBanners'\r\nimport AppDialog from 'src/components/AppDialog'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport AppTooltip from 'src/components/Tooltip'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport EmptyPage from 'src/components/EmptyPage'\r\nimport image from '../../assets/images/image.png'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\n\r\nconst Banners = () => {\r\n  const navigate = useNavigate()\r\n  const {\r\n    banners,\r\n    loading,\r\n    showDialog,\r\n    cancelDelete,\r\n    executeDelete,\r\n    selectedLanguage,\r\n    setSelectedLanguage,\r\n  } = useBanners()\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle\r\n          title=\"البنرات\"\r\n          icon={<Cards size={25} />}\r\n        />\r\n        <AppBreadcrumb />\r\n        <div>\r\n          {loading ? (\r\n            <div className=\"h-100 w-100 d-flex justify-content-center align-items-center py-5 my-5\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {banners.length > 0 ? (\r\n                <div\r\n                  className=\"rounded my-3\"\r\n                  style={{ backgroundColor: Theme.white, boxShadow: '0px 2px 3px #c8c8c8' }}\r\n                >\r\n                  <CNav variant=\"tabs\" className=\"justify-content-center\" layout=\"fill\">\r\n                    {isArabic === 'true' && (\r\n                      <CNavItem>\r\n                        <CNavLink\r\n                          style={\r\n                            selectedLanguage === 'ar'\r\n                              ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                              : {\r\n                                  color: Theme.primaryLight,\r\n                                  backgroundColor: Theme.base,\r\n                                  borderBottom: '#d8dbe0',\r\n                                }\r\n                          }\r\n                          active={selectedLanguage === 'ar'}\r\n                          onClick={() => {\r\n                            setSelectedLanguage('ar')\r\n                          }}\r\n                        >\r\n                          باللغة العربية\r\n                        </CNavLink>\r\n                      </CNavItem>\r\n                    )}\r\n                    {isEnglish === 'true' && (\r\n                      <CNavItem>\r\n                        <CNavLink\r\n                          style={\r\n                            selectedLanguage === 'en'\r\n                              ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                              : {\r\n                                  color: Theme.primaryLight,\r\n                                  backgroundColor: Theme.base,\r\n                                  borderBottom: '#d8dbe0',\r\n                                }\r\n                          }\r\n                          active={selectedLanguage === 'en'}\r\n                          onClick={() => {\r\n                            setSelectedLanguage('en')\r\n                          }}\r\n                        >\r\n                          باللغة الانجليزية\r\n                        </CNavLink>\r\n                      </CNavItem>\r\n                    )}\r\n                    {isHebrew === 'true' && (\r\n                      <CNavItem>\r\n                        <CNavLink\r\n                          style={\r\n                            selectedLanguage === 'he'\r\n                              ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                              : {\r\n                                  color: Theme.primaryLight,\r\n                                  backgroundColor: Theme.base,\r\n                                  borderBottom: '#d8dbe0',\r\n                                }\r\n                          }\r\n                          active={selectedLanguage === 'he'}\r\n                          onClick={() => {\r\n                            setSelectedLanguage('he')\r\n                          }}\r\n                        >\r\n                          باللغة العبرية\r\n                        </CNavLink>\r\n                      </CNavItem>\r\n                    )}\r\n                  </CNav>\r\n                  <CTable align=\"middle\" className=\"mb-3\" hover responsive>\r\n                    <CTableHead color=\"light\">\r\n                      <CTableRow>\r\n                        <CTableHeaderCell className=\"text-center\" style={{width: '15%'}}>عنوان البانر</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">صورة البانر </CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">\r\n                          صورة البانر للهاتف\r\n                        </CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\" style={{width: '15%'}}> الإجراءات </CTableHeaderCell>\r\n                      </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                      {banners.map((item, index) => (\r\n                        <CTableRow className=\"text-center\" key={index}>\r\n                          <CTableDataCell>\r\n                            <div className=\"d-flex justify-content-center align-items-center h-100 w-100\">\r\n                              {selectedLanguage === 'ar' ? (\r\n                                <CRow>{item.title_ar}</CRow>\r\n                              ) : selectedLanguage === 'en' ? (\r\n                                <CRow>{item.title_en}</CRow>\r\n                              ) : (\r\n                                <CRow>{item.title_he}</CRow>\r\n                              )}\r\n                            </div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell>\r\n                            <img\r\n                              src={\r\n                                selectedLanguage === 'ar'\r\n                                  ? item.image\r\n                                  : selectedLanguage === 'en'\r\n                                  ? item.image_en\r\n                                  : image\r\n                              }\r\n                              onError={(e) => {\r\n                                e.target.onError = null\r\n                                e.target.src = image\r\n                              }}\r\n                              alt=\"banner_1\"\r\n                              height=\"150\"\r\n                            />\r\n                          </CTableDataCell>\r\n                          <CTableDataCell>\r\n                            <img\r\n                              src={\r\n                                selectedLanguage === 'ar'\r\n                                  ? item.image_mobile\r\n                                  : selectedLanguage === 'en'\r\n                                  ? item.image_mobile_en\r\n                                  : image\r\n                              }\r\n                              onError={(e) => {\r\n                                e.target.onError = null\r\n                                e.target.src = image\r\n                              }}\r\n                              alt=\"banner_1\"\r\n                              height=\"150\"\r\n                            />\r\n                          </CTableDataCell>\r\n                          <CTableDataCell>\r\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                              <AppTooltip\r\n                                type=\"edit\"\r\n                                onClick={() =>\r\n                                  navigate(`/edit_banner/${item.id}`, { state: { item } })\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </CTableDataCell>\r\n                        </CTableRow>\r\n                      ))}\r\n                    </CTableBody>\r\n                  </CTable>\r\n                </div>\r\n              ) : (\r\n                <EmptyPage />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CCol>\r\n      <ToastContainer />\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف هذا البانر ؟\"\r\n        open={showDialog}\r\n        onClose={cancelDelete}\r\n        actionCancel={cancelDelete}\r\n        actionExecute={executeDelete}\r\n        deleteDialog={true}\r\n      />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Banners\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyEdit } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useProducts } from '../products/useProducts'\r\nimport { useCategories } from '../categories/useCategories'\r\nimport { useLanguage } from '../general/useLanguage'\r\n\r\nexport const useBannersEditing = (bannerId, item) => {\r\n  const {\r\n    name,\r\n    title_ar,\r\n    title_en,\r\n    title_he,\r\n    image,\r\n    image_mobile,\r\n    type,\r\n    data_id,\r\n    image_en,\r\n    image_mobile_en,\r\n  } = item\r\n  const [bannerName, setBannerName] = useState('')\r\n  const [bannerImage, setBannerImage] = useState('')\r\n  const [bannerImageEn, setBannerImageEn] = useState('')\r\n  const [bannerImageMobile, setBannerImageMobile] = useState('')\r\n  const [bannerImageMobileEn, setBannerImageMobileEn] = useState('')\r\n  const [bannerTitleAr, setBannerTitleAr] = useState('')\r\n  const [bannerTitleEn, setBannerTitleEn] = useState('')\r\n  const [bannerTitleHeb, setBannerTitleHeb] = useState('')\r\n  const [bannerType, setType] = useState('product')\r\n  const [dataId, setDataId] = useState('')\r\n  const [bannerImageUpdated, setBannerImageUpdated] = useState()\r\n  const [bannerImageEnUpdated, setBannerImageEnUpdated] = useState()\r\n  const [bannerImageMobileUpdated, setBannerImageMobileUpdated] = useState()\r\n  const [bannerImageMobileEnUpdated, setBannerImageMobileEnUpdated] = useState()\r\n  const navigate = useNavigate()\r\n  const [loading, setLoading] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const { products } = useProducts()\r\n  const { categories } = useCategories()\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  console.log(bannerId)\r\n\r\n  const getBanner = async () => {\r\n    setBannerName(name)\r\n    setBannerImage(image)\r\n    setBannerImageEn(image_en)\r\n    setBannerImageMobile(image_mobile)\r\n    setBannerImageMobileEn(image_mobile_en)\r\n    setBannerTitleAr(title_ar)\r\n    setBannerTitleEn(title_en)\r\n    setBannerTitleHeb(title_he)\r\n    setType(type)\r\n    setDataId(data_id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getBanner()\r\n  }, [])\r\n\r\n  const update = () => {\r\n    setLoading(true)\r\n    const formData = new FormData()\r\n    formData.append('name', bannerName)\r\n    formData.append('image', bannerImageUpdated)\r\n    formData.append('image_en', bannerImageEnUpdated)\r\n    formData.append('image_mobile', bannerImageMobileUpdated)\r\n    formData.append('image_mobile_en', bannerImageMobileEnUpdated)\r\n    formData.append('type', bannerType)\r\n    formData.append('data_id', dataId)\r\n    {\r\n      isArabic === 'true'\r\n        ? formData.append('title_ar', bannerTitleAr)\r\n        : formData.append('title_ar', 'empty')\r\n    }\r\n    {\r\n      isEnglish === 'true'\r\n        ? formData.append('title_en', bannerTitleEn)\r\n        : formData.append('title_en', 'empty')\r\n    }\r\n    {\r\n      isHebrew === 'true'\r\n        ? formData.append('title_he', bannerTitleHeb)\r\n        : formData.append('title_he', 'empty')\r\n    }\r\n    axios\r\n      .post(`${API_ROUTE}/banners/${bannerId}?_method=PUT`, formData)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        notifyEdit()\r\n        setTimeout(() => {\r\n          navigate('/banners')\r\n        }, 500)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        setLoading(false)\r\n        setVisible(true)\r\n      })\r\n  }\r\n  return {\r\n    bannerName,\r\n    bannerImage,\r\n    bannerImageUpdated,\r\n    bannerImageMobile,\r\n    bannerImageMobileUpdated,\r\n    bannerImageEn,\r\n    bannerImageEnUpdated,\r\n    bannerImageMobileEn,\r\n    bannerImageMobileEnUpdated,\r\n    setBannerImageEn,\r\n    setBannerImageEnUpdated,\r\n    setBannerImageMobileEn,\r\n    setBannerImageMobileEnUpdated,\r\n    setBannerName,\r\n    setBannerImage,\r\n    setBannerImageUpdated,\r\n    setBannerImageMobile,\r\n    setBannerImageMobileUpdated,\r\n    loading,\r\n    update,\r\n    visible,\r\n    setVisible,\r\n    products,\r\n    categories,\r\n    bannerTitleAr,\r\n    bannerTitleEn,\r\n    bannerTitleHeb,\r\n    setBannerTitleAr,\r\n    setBannerTitleEn,\r\n    setBannerTitleHeb,\r\n    type: bannerType,\r\n    setType,\r\n    dataId,\r\n    setDataId,\r\n  }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useBannersEditing } from 'src/hooks/banners/useBannersEditing'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { NotePencil } from 'phosphor-react'\r\nimport { Theme } from 'src/constants/colors'\r\nimport image from '../../assets/images/image.png'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\n\r\nconst EditBanner = () => {\r\n  const params = useParams()\r\n  const { state } = useLocation()\r\n  const item = state?.item\r\n  const {\r\n    bannerName,\r\n    bannerImage,\r\n    bannerImageUpdated,\r\n    bannerImageMobile,\r\n    bannerImageMobileUpdated,\r\n    setBannerName,\r\n    setBannerImage,\r\n    setBannerImageUpdated,\r\n    setBannerImageMobile,\r\n    setBannerImageMobileUpdated,\r\n    bannerImageEn,\r\n    bannerImageEnUpdated,\r\n    bannerImageMobileEn,\r\n    bannerImageMobileEnUpdated,\r\n    setBannerImageEn,\r\n    setBannerImageEnUpdated,\r\n    setBannerImageMobileEn,\r\n    setBannerImageMobileEnUpdated,\r\n    loading,\r\n    update,\r\n    visible,\r\n    setVisible,\r\n    products,\r\n    categories,\r\n    bannerTitleAr,\r\n    bannerTitleEn,\r\n    bannerTitleHeb,\r\n    setBannerTitleAr,\r\n    setBannerTitleEn,\r\n    setBannerTitleHeb,\r\n    type,\r\n    setType,\r\n    dataId,\r\n    setDataId,\r\n  } = useBannersEditing(params.id, item)\r\n\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  const { width } = useWidth()\r\n\r\n  if (!item) {\r\n    return <div>Product not found</div>\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"تعديل البانر\" icon={<NotePencil size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"row\" style={{ marginTop: '15px' }}>\r\n              <div className=\"col\">\r\n                <label className=\"form-label\"> اسم البانر </label>\r\n                <input\r\n                  className=\"form-control form-control-sm\"\r\n                  id=\"formFileSm\"\r\n                  type=\"text\"\r\n                  name=\"product_pic\"\r\n                  value={bannerName}\r\n                  onChange={(e) => setBannerName(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" style={{ marginTop: '15px' }}>\r\n              {isArabic == 'true' && (\r\n                <CCol CCol sm={width < 768 ? 12 : null}>\r\n                  <label className=\"form-label\"> عنوان البانر بالعربية </label>\r\n                  <input\r\n                    className=\"form-control form-control-sm\"\r\n                    id=\"formFileSm\"\r\n                    type=\"text\"\r\n                    name=\"product_pic\"\r\n                    value={bannerTitleAr}\r\n                    onChange={(e) => setBannerTitleAr(e.target.value)}\r\n                  />\r\n                </CCol>\r\n              )}\r\n              {isEnglish == 'true' && (\r\n                <CCol CCol sm={width < 768 ? 12 : null}>\r\n                  <label className=\"form-label\"> عنوان البانر بالانجليزية </label>\r\n                  <input\r\n                    className=\"form-control form-control-sm\"\r\n                    id=\"formFileSm\"\r\n                    type=\"text\"\r\n                    name=\"product_pic\"\r\n                    value={bannerTitleEn}\r\n                    onChange={(e) => setBannerTitleEn(e.target.value)}\r\n                  />\r\n                </CCol>\r\n              )}\r\n              {isHebrew == 'true' && (\r\n                <CCol CCol sm={width < 768 ? 12 : null}>\r\n                  <label className=\"form-label\"> عنوان البانر بالعبرية </label>\r\n                  <input\r\n                    className=\"form-control form-control-sm\"\r\n                    id=\"formFileSm\"\r\n                    type=\"text\"\r\n                    name=\"product_pic\"\r\n                    value={bannerTitleHeb}\r\n                    onChange={(e) => setBannerTitleHeb(e.target.value)}\r\n                  />\r\n                </CCol>\r\n              )}\r\n            </div>\r\n            <div className=\"row\" style={{ marginTop: '15px' }}>\r\n              <div className=\"col\">\r\n                <label className=\"form-label\">صورة البانر </label>\r\n                <input\r\n                  className=\"form-control form-control-sm\"\r\n                  id=\"formFileSm\"\r\n                  type=\"file\"\r\n                  name=\"product_pic\"\r\n                  onChange={(e) => setBannerImageUpdated(e.target.files[0])}\r\n                />\r\n                {bannerImageUpdated ? (\r\n                  <img\r\n                    src={bannerImageUpdated ? URL.createObjectURL(bannerImageUpdated) : ''}\r\n                    width={300}\r\n                    height={300}\r\n                    style={{ margin: '10px' }}\r\n                  />\r\n                ) : (\r\n                  <img src={bannerImage} width={300} height={300} style={{ margin: '10px' }} />\r\n                )}\r\n              </div>\r\n              <div className=\"col\">\r\n                <label className=\"form-label\">صورة البانر باللغة الانجليزية </label>\r\n                <input\r\n                  className=\"form-control form-control-sm\"\r\n                  id=\"formFileSm\"\r\n                  type=\"file\"\r\n                  name=\"product_pic\"\r\n                  onChange={(e) => setBannerImageEnUpdated(e.target.files[0])}\r\n                />\r\n                {bannerImageEnUpdated ? (\r\n                  <img\r\n                    src={bannerImageEnUpdated ? URL.createObjectURL(bannerImageEnUpdated) : ''}\r\n                    width={300}\r\n                    height={300}\r\n                    style={{ margin: '10px' }}\r\n                  />\r\n                ) : (\r\n                  <img src={bannerImageEn} width={300} height={300} style={{ margin: '10px' }} />\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\" style={{ marginTop: '15px' }}>\r\n              <div className=\"col\">\r\n                <label className=\"form-label\">صورة البانر للهاتف</label>\r\n                <input\r\n                  className=\"form-control form-control-sm\"\r\n                  id=\"formFileSm\"\r\n                  type=\"file\"\r\n                  name=\"product_pic\"\r\n                  onChange={(e) => setBannerImageMobileUpdated(e.target.files[0])}\r\n                />\r\n\r\n                {bannerImageMobileUpdated ? (\r\n                  <img\r\n                    src={\r\n                      bannerImageMobileUpdated ? URL.createObjectURL(bannerImageMobileUpdated) : ''\r\n                    }\r\n                    width={300}\r\n                    height={300}\r\n                    style={{ margin: '10px' }}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={bannerImageMobile}\r\n                    width={300}\r\n                    height={300}\r\n                    style={{ margin: '10px' }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"col\">\r\n                <label className=\"form-label\">صورة البانر للهاتف باللغة الانجليزية</label>\r\n                <input\r\n                  className=\"form-control form-control-sm\"\r\n                  id=\"formFileSm\"\r\n                  type=\"file\"\r\n                  name=\"product_pic\"\r\n                  onChange={(e) => setBannerImageMobileEnUpdated(e.target.files[0])}\r\n                />\r\n\r\n                {bannerImageMobileEnUpdated ? (\r\n                  <img\r\n                    src={\r\n                      bannerImageMobileEnUpdated\r\n                        ? URL.createObjectURL(bannerImageMobileEnUpdated)\r\n                        : ''\r\n                    }\r\n                    width={300}\r\n                    height={300}\r\n                    style={{ margin: '10px' }}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={bannerImageMobileEn}\r\n                    width={300}\r\n                    height={300}\r\n                    style={{ margin: '10px' }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <CCol md={12}>هذا البانر تابع لـ</CCol>\r\n              <CCol md={2} className=\"d-flex justify-content-between\">\r\n                <CFormCheck\r\n                  button={{ color: 'secondary', variant: 'outline' }}\r\n                  type=\"radio\"\r\n                  name=\"options-outlined\"\r\n                  id=\"secondary-outlined\"\r\n                  autoComplete=\"off\"\r\n                  label=\"منتج\"\r\n                  value=\"product\"\r\n                  checked={type === 'product'}\r\n                  onChange={(e) => {\r\n                    setType(e.target.value)\r\n                  }}\r\n                />\r\n                <CFormCheck\r\n                  button={{ color: 'secondary', variant: 'outline' }}\r\n                  type=\"radio\"\r\n                  name=\"options-outlined\"\r\n                  id=\"danger-outlined\"\r\n                  autoComplete=\"off\"\r\n                  label=\"قسم رئيسي\"\r\n                  value=\"category\"\r\n                  checked={type === 'category'}\r\n                  onChange={(e) => {\r\n                    setType(e.target.value)\r\n                  }}\r\n                />\r\n              </CCol>\r\n              {type == 'product' ? (\r\n                <CCol md={12}>\r\n                  <CFormSelect\r\n                    id=\"productCategory\"\r\n                    label=\"اختر المنتج\"\r\n                    feedbackInvalid=\" المنتج مطلوب\"\r\n                    value={dataId}\r\n                    onChange={(e) => setDataId(e.target.value)}\r\n                    required\r\n                  >\r\n                    <option selected=\"\" value=\"\">\r\n                      {' '}\r\n                      اختر المنتج\r\n                    </option>\r\n                    {products?.map((item, index) => (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name_ar}\r\n                      </option>\r\n                    ))}\r\n                  </CFormSelect>\r\n                </CCol>\r\n              ) : (\r\n                <CCol md={12}>\r\n                  <CFormSelect\r\n                    id=\"productCategory\"\r\n                    label=\"اختر القسم\"\r\n                    feedbackInvalid=\" القسم مطلوب\"\r\n                    value={dataId}\r\n                    onChange={(e) => setDataId(e.target.value)}\r\n                    required\r\n                  >\r\n                    <option selected=\"\" value=\"\">\r\n                      {' '}\r\n                      اختر القسم\r\n                    </option>\r\n                    {categories?.map((item, index) => (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name_ar}\r\n                      </option>\r\n                    ))}\r\n                  </CFormSelect>\r\n                </CCol>\r\n              )}\r\n            </div>\r\n            {loading ? (\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            ) : (\r\n              <CButton\r\n                style={{\r\n                  width: '200px',\r\n                  marginTop: '30px',\r\n                  backgroundColor: Theme.primary1,\r\n                  border: 'none',\r\n                }}\r\n                type=\"submit\"\r\n                onClick={update}\r\n              >\r\n                <span style={{ fontWeight: 'bolder' }}>حفظ</span>\r\n              </CButton>\r\n            )}\r\n            <CAlert color=\"danger\" dismissible visible={visible} onClose={() => setVisible(false)}>\r\n              حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n            </CAlert>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default EditBanner\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { NotePencil, Trash } from 'phosphor-react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { useCategories } from 'src/hooks/categories/useCategories'\r\n\r\nconst PrivacyPolicy = () => {\r\n  // const navigate = useNavigate()\r\n  // const [deleteId, setDeleteId] = useState('')\r\n  // const [loading, setLoading] = useState(false)\r\n  // const [showDialog, setShowDialog] = useState(false)\r\n  // const {categories} = useCategories()\r\n\r\n  // const getCategories = async () => {\r\n  //   setLoading(true)\r\n  //   try {\r\n  //     const response = await fetch(`${API_ROUTE}/categories`)\r\n  //     const data = await response.json()\r\n  //     setCategories(data.categories)\r\n  //   } catch (error) {\r\n  //     console.error(error)\r\n  //   } finally {\r\n  //     setLoading(false)\r\n  //   }\r\n  // }\r\n\r\n  // const confirmDelete = (id) => {\r\n  //   setDeleteId(id)\r\n  //   setShowDialog(true)\r\n  // }\r\n\r\n  // const cancelDelete = () => {\r\n  //   setDeleteId(null)\r\n  //   setShowDialog(false)\r\n  // }\r\n\r\n  // const executeDelete = async () => {\r\n  //   try {\r\n  //     await axios.delete(`${API_ROUTE}/categories/${deleteId}`)\r\n  //     getCategories()\r\n  //   } catch (error) {\r\n  //     console.error(error)\r\n  //   } finally {\r\n  //     setDeleteId(null)\r\n  //     setShowDialog(false)\r\n  //   }\r\n  // }\r\n  // useEffect(() => {\r\n  //   getCategories()\r\n  // }, [])\r\n  return (\r\n    <CRow>\r\n      {/* <CCol xs>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader> سياسة الخصوصية</CCardHeader>\r\n          <CCardBody>\r\n            <CButton\r\n              color=\"primary\"\r\n              style={{ width: '160px', margin: '5px', marginBottom: '10px' }}\r\n              onClick={() => {\r\n                navigate('/add_about_us')\r\n              }}\r\n            >\r\n              <span style={{ fontWeight: 'bolder' }}>إضافة سياسة جديدة </span>\r\n            </CButton>\r\n            {loading ? (\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            ) : (\r\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\r\n                <CTableHead color=\"light\">\r\n                  <CTableRow>\r\n                    <CTableHeaderCell className=\"text-center\">المحتوى بالعربية</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\">المحتوى بالإنجليزي</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\"> الإجراءات </CTableHeaderCell>\r\n                  </CTableRow>\r\n                </CTableHead>\r\n                <CTableBody>\r\n                  {categories.map((item, index) => (\r\n                    <CTableRow v-for=\"item in tableItems\" key={item.id}>\r\n                      <CTableDataCell className=\"text-center\">{item.name}</CTableDataCell>\r\n\r\n                      <CTableDataCell className=\"text-center\">{item.name} </CTableDataCell>\r\n\r\n                      <CTableDataCell>\r\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                          <>\r\n                            <div\r\n                              // ref={ref}\r\n                              style={{\r\n                                backgroundColor: '#ff3a31',\r\n                                width: '85px',\r\n                                // margin: '20',\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-evenly',\r\n                                borderRadius: '10px',\r\n                                padding: '5px',\r\n                                margin: '10px',\r\n                                cursor: 'pointer',\r\n                              }}\r\n                              onClick={() => confirmDelete(item.id)}\r\n                            >\r\n                              <Trash size={22} color=\"white\" />\r\n                              <span style={{ color: 'white' }}>حذف</span>\r\n                            </div>\r\n                          </>\r\n                          <div\r\n                            style={{\r\n                              backgroundColor: '#38b0f1',\r\n                              width: '85px',\r\n                              // margin: '20',\r\n                              display: 'flex',\r\n                              flexDirection: 'row',\r\n                              justifyContent: 'space-evenly',\r\n                              borderRadius: '10px',\r\n                              padding: '5px',\r\n                              margin: '10px',\r\n                              cursor: 'pointer',\r\n                            }}\r\n                            onClick={() => navigate(`/edit_category/${item.id}`)}\r\n                          >\r\n                            <NotePencil size={22} weight=\"duotone\" color=\"white\" />\r\n                            <span style={{ color: 'white' }}>تعديل</span>\r\n                          </div>\r\n                        </div>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  ))}\r\n                </CTableBody>\r\n              </CTable>\r\n            )}\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <Dialog\r\n        open={showDialog}\r\n        onClose={cancelDelete}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" color=\"white\" style={{ backgroundColor: '#ff3a31' }}>\r\n          هل أنت متأكد من رغبتك بحذف هذا القسم ؟\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={cancelDelete}>إلغاء</Button>\r\n          <Button onClick={executeDelete} style={{ backgroundColor: '#ff3a31', color: 'white' }}>\r\n            نعم بالتأكيد\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog> */}\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default PrivacyPolicy\r\n","import { useState, useEffect } from 'react'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { useDelete } from '../general/useDelete'\r\n\r\nexport const useAboutUs = () => {\r\n  const [about, setAbout] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const getAboutUs = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await fetch(`${API_ROUTE}/about`)\r\n      const data = await response.json()\r\n      setAbout(data)\r\n      console.log(data)\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const { showDialog, confirmDelete, executeDelete, cancelDelete } = useDelete(\r\n    'categories',\r\n    getAboutUs,\r\n  )\r\n\r\n  useEffect(() => {\r\n    getAboutUs()\r\n  }, [])\r\n  const aboutData = about.about && about.about[0]\r\n  const id = aboutData && aboutData.id\r\n\r\n  return {\r\n    loading,\r\n    showDialog,\r\n    about,\r\n    getAboutUs,\r\n    confirmDelete,\r\n    cancelDelete,\r\n    executeDelete,\r\n    aboutData,\r\n    id,\r\n  }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport {\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { Question } from 'phosphor-react'\r\nimport { useAboutUs } from 'src/hooks/aboutUs/useAboutUs'\r\nimport AppDialog from 'src/components/AppDialog'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport AppTooltip from 'src/components/Tooltip'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport image from '../../assets/images/image.png'\r\n\r\nconst AboutUs = () => {\r\n  const navigate = useNavigate()\r\n  const { loading, showDialog, about, cancelDelete, executeDelete, aboutData, id } = useAboutUs()\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"من نحن\" icon={<Question size={25} />} />\r\n        <AppBreadcrumb />\r\n        <div>\r\n          {loading ? (\r\n            <div className=\"h-100 w-100 d-flex justify-content-center align-items-center py-5 my-5\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className=\"rounded my-3\"\r\n              style={{ backgroundColor: Theme.white, boxShadow: '0px 2px 3px #c8c8c8' }}\r\n            >\r\n              <CTable align=\"middle\" className=\"mb-3\" hover responsive>\r\n                <CTableHead color=\"light\">\r\n                  <CTableRow>\r\n                    {isArabic === 'true' && (\r\n                      <CTableHeaderCell className=\"text-center\">\r\n                        من نحن باللغة العربية\r\n                      </CTableHeaderCell>\r\n                    )}\r\n                    {isEnglish === 'true' && (\r\n                      <CTableHeaderCell className=\"text-center\">\r\n                        من نحن باللغة الانجليزية\r\n                      </CTableHeaderCell>\r\n                    )}\r\n                    {isHebrew === 'true' && (\r\n                      <CTableHeaderCell className=\"text-center\">\r\n                        من نحن باللغة العبرية\r\n                      </CTableHeaderCell>\r\n                    )}\r\n                    <CTableHeaderCell className=\"text-center\"> الصورة </CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\"> الإجراءات </CTableHeaderCell>\r\n                  </CTableRow>\r\n                </CTableHead>\r\n                <CTableBody>\r\n                  <CTableRow v-for=\"item in tableItems\" key={about.id}>\r\n                    {isArabic === 'true' && (\r\n                      <CTableDataCell className=\"text-center\">\r\n                        {aboutData && aboutData.body_ar && (\r\n                          <div dangerouslySetInnerHTML={{ __html: aboutData.body_ar }} />\r\n                        )}\r\n                      </CTableDataCell>\r\n                    )}\r\n                    {isEnglish === 'true' && (\r\n                      <CTableDataCell className=\"text-center\">\r\n                        {aboutData && aboutData.body_en && (\r\n                          <div dangerouslySetInnerHTML={{ __html: aboutData.body_en }} />\r\n                        )}\r\n                      </CTableDataCell>\r\n                    )}\r\n                    {isHebrew === 'true' && (\r\n                      <CTableDataCell className=\"text-center\">\r\n                        {aboutData && aboutData.body_he && (\r\n                          <div dangerouslySetInnerHTML={{ __html: aboutData.body_he }} />\r\n                        )}\r\n                      </CTableDataCell>\r\n                    )}\r\n                    <CTableDataCell>\r\n                      <img\r\n                        src={aboutData?.image ? aboutData?.image : image}\r\n                        onError={(e) => {\r\n                          e.target.onError = null\r\n                          e.target.src = image\r\n                        }}\r\n                        alt=\"category\"\r\n                        width=\"100\"\r\n                        height=\"100\"\r\n                      />\r\n                    </CTableDataCell>\r\n                    <CTableDataCell>\r\n                      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <AppTooltip\r\n                          type=\"edit\"\r\n                          onClick={() => navigate(`/edit_about_us/${id}`, { state: { aboutData } })}\r\n                        />\r\n                      </div>\r\n                    </CTableDataCell>\r\n                  </CTableRow>\r\n                </CTableBody>\r\n              </CTable>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CCol>\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف هذا القسم ؟\"\r\n        open={showDialog}\r\n        onClose={cancelDelete}\r\n        actionCancel={cancelDelete}\r\n        actionExecute={executeDelete}\r\n        deleteDialog={true}\r\n      />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default AboutUs\r\n","/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable prettier/prettier */\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CForm,\r\n  CFormInput,\r\n  CFormSelect,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useUserAdding } from 'src/hooks/users/useUserAdding'\r\nimport { Theme } from 'src/constants/colors'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { PlusCircle } from 'phosphor-react'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\nconst AddUser = () => {\r\n  const {\r\n    userName,\r\n    setUserName,\r\n    password,\r\n    setPassword,\r\n    phoneNumber,\r\n    setPhoneNumber,\r\n    loading,\r\n    visible,\r\n    setVisible,\r\n    handleSubmit,\r\n    validated,\r\n    roleId,\r\n    setRoleId,\r\n  } = useUserAdding()\r\n\r\n  const { width } = useWidth()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"مستخدم جديد\" icon={<PlusCircle size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <CForm\r\n                    className=\"row g-3 needs-validation\"\r\n                    noValidate\r\n                    validated={validated}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    <CCol sm={width < 768 ? 12 : null}>\r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        placeholder=\"اسم المستخدم\"\r\n                        feedbackInvalid=\"اسم المستخدم مطلوب\"\r\n                        id=\"userNameAr\"\r\n                        label=\"اسم المستخدم\"\r\n                        required\r\n                        onChange={(e) => setUserName(e.target.value)}\r\n                        value={userName}\r\n                      />\r\n                    </CCol>\r\n                    <CCol md={12}>\r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        placeholder=\"رقم الهاتف\"\r\n                        feedbackInvalid=\"رقم الهاتف\"\r\n                        id=\"userName\"\r\n                        label=\"رقم الهاتف\"\r\n                        required\r\n                        value={phoneNumber}\r\n                        onChange={(e) => setPhoneNumber(e.target.value)}\r\n                      />\r\n                    </CCol>\r\n                    <CCol md={12}>\r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        placeholder=\"كلمة السر\"\r\n                        feedbackInvalid=\"كلمة السر\"\r\n                        id=\"userName\"\r\n                        label=\"كلمة السر\"\r\n                        required\r\n                        value={[password]}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                    </CCol>\r\n                    <CCol md={12}>\r\n                      <CFormSelect\r\n                        id=\"productCategory\"\r\n                        label=\"اختر الوظيفة\"\r\n                        feedbackInvalid=\" الوظيفة مطلوبة\"\r\n                        value={roleId}\r\n                        onChange={(e) => setRoleId(e.target.value)}\r\n                        required\r\n                      >\r\n                        <option selected=\"\" value=\"\">\r\n                          {' '}\r\n                          اختر الوظيفة\r\n                        </option>\r\n\r\n                        <option value={1}>مسؤول</option>\r\n                        <option value={2}>موظف</option>\r\n                      </CFormSelect>\r\n                    </CCol>\r\n                    {loading ? (\r\n                      <Spinner animation=\"border\" role=\"status\" style={{ margin: '10px' }}>\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                      </Spinner>\r\n                    ) : (\r\n                      <CButton\r\n                        style={{\r\n                          width: '200px',\r\n                          marginTop: '30px',\r\n                          backgroundColor: Theme.primary1,\r\n                          border: 'none',\r\n                        }}\r\n                        // onClick={addUser}\r\n                        type=\"submit\"\r\n                      >\r\n                        <span style={{ fontWeight: 'bolder' }}>اضافه المستخدم</span>\r\n                      </CButton>\r\n                    )}\r\n                    <CAlert\r\n                      color=\"danger\"\r\n                      dismissible\r\n                      visible={visible}\r\n                      onClose={() => setVisible(false)}\r\n                    >\r\n                      حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n                    </CAlert>\r\n                  </CForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\nexport default AddUser\r\n","import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyAdd } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useFormValidation } from '../general/useFormValidation'\r\n\r\nexport const useUserAdding = () => {\r\n  const [userName, setUserName] = useState()\r\n  const [password, setPassword] = useState()\r\n  const [phoneNumber, setPhoneNumber] = useState()\r\n  const [roleId, setRoleId] = useState()\r\n  const [loading, setLoading] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const navigate = useNavigate()\r\n  const addUser = async () => {\r\n    setLoading(true)\r\n\r\n    let formData = new FormData()\r\n    formData.append('name', userName)\r\n    formData.append('password', password)\r\n    formData.append('phone', phoneNumber)\r\n    formData.append('role_id', roleId)\r\n\r\n    const post = await axios\r\n      .post(`${API_ROUTE}/register`, formData)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        notifyAdd()\r\n        setTimeout(() => {\r\n          navigate('/users')\r\n        }, 500)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        setLoading(false)\r\n        setVisible(true)\r\n      })\r\n    setLoading(false)\r\n  }\r\n\r\n  const { handleSubmit, validated } = useFormValidation(addUser)\r\n\r\n  return {\r\n    userName,\r\n    setUserName,\r\n    password,\r\n    setPassword,\r\n    phoneNumber,\r\n    setPhoneNumber,\r\n    loading,\r\n    addUser,\r\n    visible,\r\n    setVisible,\r\n    handleSubmit,\r\n    validated,\r\n    roleId,\r\n    setRoleId,\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyEdit } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport const useUserEditing = (userId, item) => {\r\n  const { name, phone, role_id } = item\r\n  const [loading, setLoading] = useState(false)\r\n  const [userNameAr, setUserNameAr] = useState('')\r\n  const [phoneNumber, setPhoneNumber] = useState()\r\n  const [roleId, setRoleId] = useState()\r\n  const [visible, setVisible] = useState(false)\r\n  const navigate = useNavigate()\r\n  const getuser = async () => {\r\n    setUserNameAr(name)\r\n    setPhoneNumber(phone)\r\n    setRoleId(role_id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getuser()\r\n  }, [])\r\n\r\n  const update = () => {\r\n    setLoading(true)\r\n    const formData = new FormData()\r\n    formData.append('user_id', userId)\r\n    formData.append('name', userNameAr)\r\n    formData.append('phone', phoneNumber)\r\n    formData.append('role_id', roleId)\r\n\r\n    axios\r\n      .post(`${API_ROUTE}/update_user`, formData)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        notifyEdit()\r\n        setTimeout(() => {\r\n          navigate('/users')\r\n        }, 500)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        setLoading(false)\r\n        setVisible(true)\r\n      })\r\n  }\r\n  return {\r\n    loading,\r\n    userNameAr,\r\n    setUserNameAr,\r\n    phoneNumber,\r\n    setPhoneNumber,\r\n    update,\r\n    visible,\r\n    setVisible,\r\n    roleId,\r\n    setRoleId,\r\n  }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { CAlert, CButton, CCardBody, CCol, CFormSelect, CRow } from '@coreui/react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useUserEditing } from 'src/hooks/users/useUserEditing'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { NotePencil } from 'phosphor-react'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\nconst EditUser = () => {\r\n  const params = useParams()\r\n  const { state } = useLocation()\r\n  const item = state?.item\r\n\r\n  const {\r\n    loading,\r\n    userNameAr,\r\n    setUserNameAr,\r\n    phoneNumber,\r\n    setPhoneNumber,\r\n    update,\r\n    visible,\r\n    setVisible,\r\n    roleId,\r\n    setRoleId,\r\n  } = useUserEditing(params.id, item)\r\n\r\n  const { width } = useWidth()\r\n  if (!item) {\r\n    return <div>Product not found</div>\r\n  }\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"تعديل بيانات المستخدم\" icon={<NotePencil size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              <div className=\"row\">\r\n                <CCol sm={width < 768 ? 12 : null}>\r\n                  <label className=\"form-label\">اسم المستخدم باللغة العربية</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"اسم المستخدم باللغة العربية \"\r\n                    aria-label=\"First name\"\r\n                    name=\"user_name\"\r\n                    value={userNameAr}\r\n                    onChange={(e) => setUserNameAr(e.target.value)}\r\n                  />\r\n                </CCol>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label className=\"form-label\"> رقم الهاتف </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"رقم الهاتف \"\r\n                    aria-label=\"First name\"\r\n                    name=\"phone_number\"\r\n                    value={phoneNumber}\r\n                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <CCol md={12}>\r\n                <CFormSelect\r\n                  id=\"productCategory\"\r\n                  label=\"اختر الوظيفة\"\r\n                  feedbackInvalid=\" الوظيفة مطلوبة\"\r\n                  value={roleId}\r\n                  onChange={(e) => setRoleId(e.target.value)}\r\n                >\r\n                  <option selected=\"\" value=\"\"> اختر الوظيفة</option>\r\n                  <option value={1}>مسؤول</option>\r\n                  <option value={2}>موظف</option>\r\n                </CFormSelect>\r\n              </CCol>\r\n            </div>\r\n\r\n            {loading ? (\r\n              <Spinner animation=\"border\" role=\"status\" style={{ margin: '10px' }}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            ) : (\r\n              <CButton\r\n                style={{\r\n                  width: '200px',\r\n                  marginTop: '30px',\r\n                  backgroundColor: Theme.primary1,\r\n                  border: 'none',\r\n                }}\r\n                type=\"submit\"\r\n                onClick={update}\r\n              >\r\n                <span style={{ fontWeight: 'bolder' }}>حفظ</span>\r\n              </CButton>\r\n            )}\r\n            <CAlert color=\"danger\" dismissible visible={visible} onClose={() => setVisible(false)}>\r\n              حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n            </CAlert>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default EditUser\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CFormCheck,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { CheckSquare, CirclesThreePlus } from 'phosphor-react'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useCategories } from 'src/hooks/categories/useCategories'\r\nimport AppDialog from 'src/components/AppDialog'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport AppTooltip from 'src/components/Tooltip'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport image from '../../assets/images/image.png'\r\nimport EmptyPage from 'src/components/EmptyPage'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\n\r\nconst Categories = () => {\r\n  const navigate = useNavigate()\r\n  const {\r\n    categories,\r\n    loading,\r\n    showDialog,\r\n    confirmDelete,\r\n    executeDelete,\r\n    cancelDelete,\r\n    setFilterValue,\r\n    markedItems,\r\n    showDeleteDialog,\r\n    toggleMarkedItem,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n    searchQuery,\r\n    setSearchQuery,\r\n    handleOnDragEnd,\r\n  } = useCategories()\r\n\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle\r\n          title=\"الأقسام الرئيسية\"\r\n          icon={<CirclesThreePlus size={25} />}\r\n          addText=\"إضافة قسم\"\r\n          addPath=\"add_category\"\r\n          filterValue={searchQuery}\r\n          setFilterValue={setSearchQuery}\r\n          filterItems={true}\r\n          addItem={true}\r\n          mark={true}\r\n          deleteMarked={deleteMarked}\r\n          markedItems={markedItems}\r\n        />\r\n        <AppBreadcrumb />\r\n        <div>\r\n          {loading ? (\r\n            <div className=\"h-100 w-100 d-flex justify-content-center align-items-center py-5 my-5\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {categories.length > 0 ? (\r\n                <div\r\n                  className=\"rounded my-3\"\r\n                  style={{ backgroundColor: Theme.white, boxShadow: '0px 2px 3px #c8c8c8' }}\r\n                >\r\n                  {/* <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                    <Droppable droppableId=\"categories\">\r\n                      {(provided) => ( */}\r\n                  <CTable\r\n                    align=\"middle\"\r\n                    hover\r\n                    responsive\r\n                    striped\r\n                    className=\" mb-3 categories\"\r\n                    // {...provided.droppableProps}\r\n                    // ref={provided.innerRef}\r\n                    width={1000}\r\n                  >\r\n                    <CTableHead color=\"light\">\r\n                      <CTableRow>\r\n                        <CTableHeaderCell className=\"text-center\" style={{ width: 100 }}>\r\n                          <CButton\r\n                            style={{\r\n                              backgroundColor: Theme.primary1,\r\n                              border: 'none',\r\n                            }}\r\n                            onClick={markAll}\r\n                          >\r\n                            <CheckSquare size={20} /> الكل\r\n                          </CButton>\r\n                        </CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">الاسم</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">الصورة</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\"> الإجراءات </CTableHeaderCell>\r\n                      </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                      {categories.map((item, index) => (\r\n                        <CTableRow\r\n                        key={index}\r\n                          v-for=\"item in tableItems\"\r\n                        >\r\n                          <CTableDataCell className=\"text-center fw-medium\">\r\n                            <div className=\"d-flex justify-content-center align-items-center\">\r\n                              <CFormCheck\r\n                                id=\"index\"\r\n                                className=\"customCheckbox\"\r\n                                label=\" \"\r\n                                reverse\r\n                                checked={markedItems.find((id) => id === item.id)}\r\n                                onChange={() => {\r\n                                  toggleMarkedItem(item.id)\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell>\r\n                            <div className=\"d-flex flex-column h-100 align-items-center\">\r\n                              {isArabic === 'true' && (\r\n                                <button\r\n                                  className=\"hovarableText\"\r\n                                  onClick={() =>\r\n                                    navigate(`/edit_category/${item.id}`, {\r\n                                      state: { item },\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {item.name_ar}\r\n                                </button>\r\n                              )}\r\n                              {isEnglish === 'true' && (\r\n                                <button\r\n                                  className=\"hovarableText\"\r\n                                  onClick={() =>\r\n                                    navigate(`/edit_category/${item.id}`, {\r\n                                      state: { item },\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {item.name_en}\r\n                                </button>\r\n                              )}\r\n                              {isHebrew === 'true' && (\r\n                                <button\r\n                                  className=\"hovarableText\"\r\n                                  onClick={() =>\r\n                                    navigate(`/category/${item.id}`, { state: { item } })\r\n                                  }\r\n                                >\r\n                                  {item.name_he}\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </CTableDataCell>\r\n\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <img\r\n                              src={item.image ? item.image : image}\r\n                              onError={(e) => {\r\n                                e.target.onError = null\r\n                                e.target.src = image\r\n                              }}\r\n                              alt=\"category\"\r\n                              width=\"100\"\r\n                              height=\"100\"\r\n                            />\r\n                          </CTableDataCell>\r\n\r\n                          <CTableDataCell>\r\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                              <AppTooltip type=\"delete\" onClick={() => confirmDelete(item.id)} />\r\n                              <AppTooltip\r\n                                type=\"edit\"\r\n                                onClick={() =>\r\n                                  navigate(`/edit_category/${item.id}`, {\r\n                                    state: { item },\r\n                                  })\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </CTableDataCell>\r\n                        </CTableRow>\r\n                      ))}\r\n                    </CTableBody>\r\n                  </CTable>\r\n                  {/* )}\r\n                    </Droppable>\r\n                  </DragDropContext> */}\r\n                </div>\r\n              ) : (\r\n                <EmptyPage emptyItems=\"أقسام\" />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CCol>\r\n      <ToastContainer />\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف هذا القسم؟\"\r\n        open={showDialog}\r\n        onClose={cancelDelete}\r\n        actionCancel={cancelDelete}\r\n        actionExecute={executeDelete}\r\n        deleteDialog={true}\r\n      />\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف جميع المنتجات التي تم تحديدها ؟\"\r\n        open={showDeleteDialog}\r\n        onClose={cancelDeleteMarked}\r\n        actionCancel={cancelDeleteMarked}\r\n        actionExecute={executeDeleteMarked}\r\n        deleteDialog={true}\r\n      />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Categories\r\n","/* eslint react/prop-types: 0 */\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\n\r\nconst CategoryDropdown = ({ onSelect }) => {\r\n  const [categoriesByLevel, setCategoriesByLevel] = useState({ 0: [] })\r\n  const [selectedCategories, setSelectedCategories] = useState([])\r\n  const [dropdownOpen, setDropdownOpen] = useState({})\r\n\r\n  useEffect(() => {\r\n    fetchCategories(0, 0)\r\n  }, [])\r\n\r\n  const fetchCategories = async (parentId, level) => {\r\n    try {\r\n      const response = await axios.get(`${API_ROUTE}/sub_categories/${parentId}`)\r\n      const categories = response.data.categories || []\r\n      setCategoriesByLevel((prev) => ({\r\n        ...prev,\r\n        [level]: categories,\r\n      }))\r\n      return categories\r\n    } catch (error) {\r\n      console.error('Failed to fetch categories', error)\r\n    }\r\n  }\r\n\r\n  const handleSelectCategory = async (category, level) => {\r\n    const newSelectedCategories = selectedCategories.slice(0, level)\r\n    newSelectedCategories[level] = category\r\n    setSelectedCategories(newSelectedCategories)\r\n\r\n    const children = await fetchCategories(category.id, level + 1)\r\n\r\n    if (Array.isArray(children) && children.length > 0) {\r\n      setCategoriesByLevel((prev) => ({\r\n        ...prev,\r\n        [level + 1]: children,\r\n      }))\r\n    } else {\r\n      setCategoriesByLevel((prev) => ({\r\n        ...prev,\r\n        [level + 1]: [],\r\n      }))\r\n    }\r\n    console.log(newSelectedCategories)\r\n    const lastSelectedCategory = newSelectedCategories[newSelectedCategories.length - 1]\r\n    onSelect(lastSelectedCategory)\r\n  }\r\n\r\n  const toggleDropdown = (level) => {\r\n    setDropdownOpen((prev) => ({\r\n      ...prev,\r\n      [level]: !prev[level],\r\n    }))\r\n  }\r\n\r\n  const renderDropdown = (categories, level) =>\r\n    categories.length > 0 && (\r\n      <Dropdown\r\n        style={{ marginTop: '1rem' }}\r\n        isOpen={dropdownOpen[level] || false}\r\n        toggle={() => toggleDropdown(level)}\r\n        key={level}\r\n      >\r\n        <DropdownToggle caret>{selectedCategories[level]?.name_ar || 'اختر قسم'}</DropdownToggle>\r\n        <DropdownMenu>\r\n          {categories.map((category) => (\r\n            <DropdownItem key={category.id} onClick={() => handleSelectCategory(category, level)}>\r\n              {category.name_ar}\r\n            </DropdownItem>\r\n          ))}\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    )\r\n\r\n  return (\r\n    <div>\r\n      {Object.keys(categoriesByLevel).map((level) =>\r\n        renderDropdown(categoriesByLevel[level], parseInt(level, 10)),\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryDropdown\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable prettier/prettier */\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CForm,\r\n  CFormCheck,\r\n  CFormInput,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport { PlusCircle } from 'phosphor-react'\r\nimport { useState } from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport AppCard from 'src/components/AppCard'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useCategoryAdding } from 'src/hooks/categories/useCategoryAdding'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\nimport '../../components/test.css'\r\nimport React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Dropdown from 'react-multilevel-dropdown'\r\nimport CategoryDropdown from 'src/components/CategoryDropdown'\r\n\r\nconst AddCategory = () => {\r\n  const {\r\n    categoryNameAr,\r\n    setCategoryNameAr,\r\n    loading,\r\n    categoryNameEng,\r\n    setCategoryNameEng,\r\n    categoryNameHeb,\r\n    setCategoryNameHeb,\r\n    image,\r\n    setImage,\r\n    handleSubmit,\r\n    validated,\r\n    visible,\r\n    setVisible,\r\n    subCategories,\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    handleCategorySelect,\r\n    isChild,\r\n    setIsChild,\r\n  } = useCategoryAdding()\r\n\r\n  console.log(subCategories)\r\n\r\n  const { width } = useWidth()\r\n\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"قسم جديد\" icon={<PlusCircle size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <CForm\r\n                    className=\"row g-3 needs-validation\"\r\n                    noValidate\r\n                    validated={validated}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    {isArabic === 'true' && (\r\n                      <CCol sm={width < 768 ? 12 : null}>\r\n                        <CFormInput\r\n                          type=\"text\"\r\n                          placeholder=\"اسم القسم باللغة العربية\"\r\n                          feedbackInvalid=\"اسم القسم باللغة العربية مطلوب\"\r\n                          id=\"categoryNameAr\"\r\n                          label=\"اسم القسم باللغة العربية\"\r\n                          required\r\n                          onChange={(e) => {\r\n                            setCategoryNameAr(e.target.value)\r\n                          }}\r\n                          value={categoryNameAr}\r\n                        />\r\n                      </CCol>\r\n                    )}\r\n                    {isEnglish === 'true' && (\r\n                      <CCol sm={width < 768 ? 12 : null}>\r\n                        <CFormInput\r\n                          type=\"text\"\r\n                          placeholder=\"اسم القسم باللغة الانجليزية\"\r\n                          feedbackInvalid=\"اسم القسم باللغة الانجليزية مطلوب\"\r\n                          id=\"categoryNameEng\"\r\n                          label=\"اسم القسم باللغة الانجليزية\"\r\n                          required\r\n                          onChange={(e) => {\r\n                            setCategoryNameEng(e.target.value)\r\n                          }}\r\n                          value={categoryNameEng}\r\n                        />\r\n                      </CCol>\r\n                    )}\r\n                    {isHebrew === 'true' && (\r\n                      <CCol sm={width < 768 ? 12 : null}>\r\n                        <CFormInput\r\n                          type=\"text\"\r\n                          placeholder=\"اسم القسم باللغة العبرية\"\r\n                          feedbackInvalid=\"اسم القسم باللغة العبرية مطلوب\"\r\n                          id=\"categoryNameHeb\"\r\n                          label=\"اسم القسم باللغة العبرية\"\r\n                          required\r\n                          onChange={(e) => {\r\n                            setCategoryNameHeb(e.target.value)\r\n                          }}\r\n                          value={categoryNameHeb}\r\n                        />\r\n                      </CCol>\r\n                    )}\r\n                    <div className=\"mb-3\">\r\n                      <CFormInput\r\n                        label=\"صورة القسم\"\r\n                        type=\"file\"\r\n                        id=\"categoryPic\"\r\n                        feedbackInvalid=\"صورة القسم مطلوبة\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setImage(e.target.files[0])\r\n                        }}\r\n                      />\r\n                      {image && (\r\n                        <img\r\n                          src={image ? URL.createObjectURL(image) : ''}\r\n                          style={{ margin: '10px' }}\r\n                          width={300}\r\n                          height={300}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <CCol md={12}>\r\n                      <CFormCheck\r\n                        className=\"customCheckbox\"\r\n                        type=\"checkbox\"\r\n                        id=\"multiColor\"\r\n                        reverse\r\n                        label=\"هل هذا القسم قسم فرعي؟\"\r\n                        checked={isChild}\r\n                        onChange={() => {\r\n                          setIsChild(!isChild)\r\n                          if (isChild === true) {\r\n                            setSelectedCategory(null)\r\n                          }\r\n                        }}\r\n                      />\r\n                    </CCol>\r\n                    {isChild && (\r\n                      <CRow>\r\n                        <CCol style={{marginTop: '1rem'}}>\r\n                          <p>اختر الفرع الرئيسي لهذا الفرع ...</p>\r\n                          <CategoryDropdown onSelect={handleCategorySelect} />\r\n                        </CCol>\r\n                        <div>القسم التابع له: {selectedCategory?.name_ar} </div>\r\n                      </CRow>\r\n                    )}\r\n\r\n                    {loading && categoryNameAr !== '' ? (\r\n                      <Spinner animation=\"border\" role=\"status\" style={{ margin: '10px' }}>\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                      </Spinner>\r\n                    ) : (\r\n                      <CButton\r\n                        style={{\r\n                          width: '200px',\r\n                          marginTop: '30px',\r\n                          backgroundColor: Theme.primary1,\r\n                          border: 'none',\r\n                        }}\r\n                        type=\"submit\"\r\n                      >\r\n                        <span style={{ fontWeight: 'bolder' }}>اضافه قسم</span>\r\n                      </CButton>\r\n                    )}\r\n                    <CAlert\r\n                      color=\"danger\"\r\n                      dismissible\r\n                      visible={visible}\r\n                      onClose={() => setVisible(false)}\r\n                    >\r\n                      حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n                    </CAlert>\r\n                  </CForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\nexport default AddCategory\r\n","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyAdd } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useFormValidation } from '../general/useFormValidation'\r\nimport { useLanguage } from '../general/useLanguage'\r\nimport { useCategories } from './useCategories'\r\n\r\nexport const useCategoryAdding = () => {\r\n  const [categoryNameAr, setCategoryNameAr] = useState('')\r\n  const [categoryNameEng, setCategoryNameEng] = useState('')\r\n  const [categoryNameHeb, setCategoryNameHeb] = useState('')\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  const [loading, setLoading] = useState(false)\r\n  const [image, setImage] = useState('')\r\n  const [visible, setVisible] = useState(false)\r\n  const navigate = useNavigate()\r\n  const [selectedCategory, setSelectedCategory] = useState(null)\r\n  const [isChild, setIsChild] = useState(false)\r\n\r\n  const handleCategorySelect = (category) => {\r\n    setSelectedCategory(category)\r\n  }\r\n  const addCategory = async () => {\r\n    setLoading(true)\r\n    let formData = new FormData()\r\n    formData.append('image', image)\r\n    isArabic === 'true'\r\n      ? formData.append('name_ar', categoryNameAr)\r\n      : formData.append('name_ar', 'empty')\r\n    isEnglish === 'true'\r\n      ? formData.append('name_en', categoryNameEng)\r\n      : formData.append('name_en', 'empty')\r\n    isHebrew === 'true'\r\n      ? formData.append('name_he', categoryNameHeb)\r\n      : formData.append('name_he', 'empty')\r\n    selectedCategory\r\n      ? formData.append('parent_id', selectedCategory.id)\r\n      : formData.append('parent_id', 0)\r\n    try {\r\n      await axios.post(`${API_ROUTE}/categories`, formData)\r\n      setLoading(false)\r\n      notifyAdd()\r\n      setTimeout(() => {\r\n        navigate('/categories')\r\n      }, 500)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setLoading(false)\r\n      setVisible(true)\r\n    }\r\n  }\r\n\r\n  const { handleSubmit, validated } = useFormValidation(addCategory)\r\n\r\n  return {\r\n    categoryNameAr,\r\n    setCategoryNameAr,\r\n    categoryNameEng,\r\n    setCategoryNameEng,\r\n    categoryNameHeb,\r\n    setCategoryNameHeb,\r\n    loading,\r\n    addCategory,\r\n    image,\r\n    setImage,\r\n    handleSubmit,\r\n    validated,\r\n    visible,\r\n    setVisible,\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    handleCategorySelect,\r\n    isChild,\r\n    setIsChild,\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyEdit } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useLanguage } from '../general/useLanguage'\r\n\r\nexport const useCategoryEditing = (categoryId, item) => {\r\n  const { name_ar, name_en, name_he, image, parent_id } = item\r\n  const [categoryImage, setCategoryImage] = useState('')\r\n  const [categoryNameAr, setCategoryNameAr] = useState('')\r\n  const [categoryNameEng, setCategoryNameEng] = useState('')\r\n  const [categoryNameHeb, setCategoryNameHeb] = useState('')\r\n  const [updatedImage, setUpdatedImage] = useState('')\r\n  const navigate = useNavigate()\r\n  const [loading, setLoading] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  const [selectedCategory, setSelectedCategory] = useState(null)\r\n  const [isChild, setIsChild] = useState(false)\r\n  const [parent, setParent] = useState('')\r\n  const [isMainParent, setIsMainParent] = useState(false)\r\n\r\n  const handleCategorySelect = (category) => {\r\n    setSelectedCategory(category)\r\n  }\r\n\r\n  const getcategory = async () => {\r\n    // const url = `${API_ROUTE}/categories/${categoryId}`\r\n    // const response = await fetch(url)\r\n    // const item = await response.json()\r\n    setCategoryNameAr(name_ar)\r\n    setCategoryNameEng(name_en)\r\n    setCategoryNameHeb(name_he)\r\n    setCategoryImage(image)\r\n    setParent(parent_id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getcategory()\r\n  }, [])\r\n\r\n  const update = () => {\r\n    setLoading(true)\r\n    const formData = new FormData()\r\n    {\r\n      isArabic === 'true'\r\n        ? formData.append('name_ar', categoryNameAr)\r\n        : formData.append('name_ar', 'empty')\r\n    }\r\n    {\r\n      isEnglish === 'true'\r\n        ? formData.append('name_en', categoryNameEng)\r\n        : formData.append('name_en', 'empty')\r\n    }\r\n    {\r\n      isHebrew === 'true'\r\n        ? formData.append('name_he', categoryNameHeb)\r\n        : formData.append('name_he', 'empty')\r\n    }\r\n    formData.append('image', updatedImage)\r\n    isChild\r\n      ? formData.append('parent_id', selectedCategory.id)\r\n      : isMainParent\r\n      ? formData.append('parent_id', 0)\r\n      : formData.append('parent_id', parent)\r\n\r\n    axios\r\n      .post(`${API_ROUTE}/categories/${categoryId}?_method=PUT`, formData)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        notifyEdit()\r\n        setTimeout(() => {\r\n          navigate('/categories')\r\n        }, 500)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        setLoading(false)\r\n        setVisible(true)\r\n      })\r\n  }\r\n\r\n  return {\r\n    categoryImage,\r\n    setUpdatedImage,\r\n    loading,\r\n    update,\r\n    updatedImage,\r\n    categoryNameAr,\r\n    categoryNameEng,\r\n    categoryNameHeb,\r\n    setCategoryNameAr,\r\n    setCategoryNameEng,\r\n    setCategoryNameHeb,\r\n    visible,\r\n    setVisible,\r\n    parent,\r\n    isChild,\r\n    setIsChild,\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    handleCategorySelect,\r\n    isMainParent,\r\n    setIsMainParent,\r\n  }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { CAlert, CButton, CCardBody, CCol, CFormCheck, CRow } from '@coreui/react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useCategoryEditing } from 'src/hooks/categories/useCategoryEditing'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { NotePencil } from 'phosphor-react'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport { Theme } from 'src/constants/colors'\r\nimport image from '../../assets/images/image.png'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\nimport { useCategories } from 'src/hooks/categories/useCategories'\r\nimport CategoryDropdown from 'src/components/CategoryDropdown'\r\n\r\nconst EditCategory = () => {\r\n  const params = useParams()\r\n  const { state } = useLocation()\r\n  const item = state?.item\r\n  const {\r\n    categoryImage,\r\n    setUpdatedImage,\r\n    update,\r\n    loading,\r\n    updatedImage,\r\n    categoryNameAr,\r\n    categoryNameEng,\r\n    categoryNameHeb,\r\n    setCategoryNameAr,\r\n    setCategoryNameEng,\r\n    setCategoryNameHeb,\r\n    visible,\r\n    setVisible,\r\n    parent,\r\n    isChild,\r\n    setIsChild,\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    handleCategorySelect,\r\n    isMainParent,\r\n    setIsMainParent\r\n  } = useCategoryEditing(params.id, item)\r\n  const { width } = useWidth()\r\n  const { categories } = useCategories()\r\n\r\n  const category = categories.find((category) => category.id === parent)\r\n\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  if (!item) {\r\n    return <div>Product not found</div>\r\n  }\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"تعديل القسم\" icon={<NotePencil size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              <div className=\"row\">\r\n                {isArabic === 'true' && (\r\n                  <CCol sm={width < 768 ? 12 : null}>\r\n                    <label className=\"form-label\">اسم القسم باللغة العربية</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"اسم القسم باللغة العربية \"\r\n                      aria-label=\"First name\"\r\n                      name=\"product_name\"\r\n                      value={categoryNameAr}\r\n                      onChange={(e) => setCategoryNameAr(e.target.value)}\r\n                    />\r\n                  </CCol>\r\n                )}\r\n                {isEnglish === 'true' && (\r\n                  <CCol sm={width < 768 ? 12 : null}>\r\n                    <label className=\"form-label\">اسم القسم باللغة الانجليزية</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"اسم القسم باللغة الانجليزية \"\r\n                      aria-label=\"First name\"\r\n                      name=\"product_name\"\r\n                      value={categoryNameEng}\r\n                      onChange={(e) => setCategoryNameEng(e.target.value)}\r\n                    />\r\n                  </CCol>\r\n                )}\r\n                {isHebrew === 'true' && (\r\n                  <CCol sm={width < 768 ? 12 : null}>\r\n                    <label className=\"form-label\">اسم القسم باللغة العربية</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"اسم القسم باللغة العربية \"\r\n                      aria-label=\"First name\"\r\n                      name=\"product_name\"\r\n                      value={categoryNameHeb}\r\n                      onChange={(e) => setCategoryNameHeb(e.target.value)}\r\n                    />\r\n                  </CCol>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" style={{ marginTop: '15px' }}>\r\n              <div className=\"col\">\r\n                <label className=\"form-label\">صورة المنتج</label>\r\n                <input\r\n                  className=\"form-control form-control-sm\"\r\n                  id=\"formFileSm\"\r\n                  type=\"file\"\r\n                  name=\"product_pic\"\r\n                  onChange={(e) => setUpdatedImage(e.target.files[0])}\r\n                />\r\n                {updatedImage ? (\r\n                  <img\r\n                    src={updatedImage ? URL.createObjectURL(updatedImage) : image}\r\n                    onError={(e) => {\r\n                      e.target.onError = null\r\n                      e.target.src = image\r\n                    }}\r\n                    width={300}\r\n                    height={300}\r\n                    style={{ margin: '10px' }}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={categoryImage ? categoryImage : image}\r\n                    onError={(e) => {\r\n                      e.target.onError = null\r\n                      e.target.src = image\r\n                    }}\r\n                    width={300}\r\n                    height={300}\r\n                    style={{ margin: '10px' }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            {parent === 0 ?\r\n            <div>\r\n              هذا القسم رئيسي غير تابع لأي قسم آخر\r\n            </div>\r\n            :<div>\r\n              هذا القسم تابع للقسم <b style={{color: Theme.primary1}}>{category?.name_ar}</b>\r\n              <CCol md={12}>\r\n              <CFormCheck\r\n                className=\"customCheckbox\"\r\n                type=\"checkbox\"\r\n                id=\"multiColor\"\r\n                reverse\r\n                disabled= {isChild}\r\n                label=\"هل تود جعله رئيسي؟\"\r\n                checked={isMainParent}\r\n                onChange={() => {\r\n                  setIsMainParent(!isMainParent)\r\n                  if (isMainParent === false) {\r\n                    setIsChild(false)\r\n                  }\r\n                }}\r\n              />\r\n            </CCol>\r\n            </div>}\r\n            \r\n            <CCol md={12}>\r\n              <CFormCheck\r\n                className=\"customCheckbox\"\r\n                type=\"checkbox\"\r\n                id=\"multiColor\"\r\n                reverse\r\n                label=\"هل تود تغيير القسم الذي يتبع له؟\"\r\n                checked={isChild}\r\n                disabled={isMainParent}\r\n                onChange={() => {\r\n                  setIsChild(!isChild)\r\n                  if (isChild === true) {\r\n                    setSelectedCategory(null)\r\n                  }\r\n                }}\r\n              />\r\n            </CCol>\r\n            {isChild && (\r\n              <CRow>\r\n                <CCol style={{marginTop: '1rem'}}>\r\n                  <p>اختر الفرع الرئيسي لهذا الفرع ...</p>\r\n                  <CategoryDropdown onSelect={handleCategorySelect} />\r\n                </CCol>\r\n                <div>القسم التابع له: <b style={{color: Theme.primaryLight}}>{selectedCategory?.name_ar} </b></div>\r\n              </CRow>\r\n            )}\r\n            {loading ? (\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            ) : (\r\n              <CButton\r\n                style={{\r\n                  width: '200px',\r\n                  marginTop: '30px',\r\n                  backgroundColor: Theme.primary1,\r\n                  border: 'none',\r\n                }}\r\n                type=\"submit\"\r\n                onClick={update}\r\n              >\r\n                <span style={{ fontWeight: 'bolder' }}>حفظ</span>\r\n              </CButton>\r\n            )}\r\n            <CAlert color=\"danger\" dismissible visible={visible} onClose={() => setVisible(false)}>\r\n              حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n            </CAlert>\r\n          </CCardBody>\r\n          {/* )} */}\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default EditCategory\r\n","/* eslint-disable react/prop-types */\r\nimport { Dialog, DialogActions, DialogTitle, Button } from '@mui/material'\r\nimport { Theme } from 'src/constants/colors'\r\nimport '../layout/layout.css'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCarousel,\r\n  CCarouselItem,\r\n  CImage,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTooltip,\r\n} from '@coreui/react'\r\nimport React, { useState } from 'react'\r\nimport broken from '../assets/images/image.png'\r\nimport { Tag } from 'phosphor-react'\r\nimport AppCard from './AppCard'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\n\r\nconst ProductDialog = ({ product, open, onClose }) => {\r\n  const [selectedLang, setSelectedLang] = useState('ar')\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  return (\r\n    <CModal\r\n      alignment=\"center\"\r\n      scrollable\r\n      visible={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"VerticallyCenteredExample\"\r\n      className=\"almarai-regular \"\r\n    >\r\n      <CModalHeader>\r\n        <CModalTitle style={{ marginLeft: 'auto' }} id=\"VerticallyCenteredExample\">\r\n          تفاصيل المنتج\r\n        </CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <CCarousel\r\n          controls\r\n          indicators\r\n          dark\r\n          style={{\r\n            height: '50%',\r\n            width: '100%',\r\n            // backgroundColor: Theme.base,\r\n            // boxShadow: '0px 2px 3px #c8c8c8',\r\n            paddingTop: '1rem',\r\n            paddingBottom: '3rem',\r\n          }}\r\n          className=\"d-flex align-items-center rounded\"\r\n        >\r\n          {product?.images.map((img, index) => (\r\n            <CCarouselItem key={index}>\r\n              <div className=\"d-flex align-items-center justify-content-center\">\r\n                <CImage\r\n                  className=\"d-block w-75\"\r\n                  src={img.url || broken}\r\n                  onError={(e) => {\r\n                    e.target.onError = null\r\n                    e.target.src = broken\r\n                  }}\r\n                  style={{ borderRadius: 5 }}\r\n                />\r\n              </div>\r\n            </CCarouselItem>\r\n          ))}\r\n        </CCarousel>\r\n        <CNav variant=\"tabs\" className=\"justify-content-center m-3\">\r\n          {isArabic === 'true' && (\r\n            <CNavItem>\r\n              <CNavLink\r\n                style={\r\n                  isArabic === 'false'\r\n                    ? null\r\n                    : selectedLang === 'ar'\r\n                    ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                    : { color: Theme.primaryLight }\r\n                }\r\n                active={selectedLang === 'ar'}\r\n                disabled={isArabic === 'false'}\r\n                onClick={() => {\r\n                  setSelectedLang('ar')\r\n                }}\r\n              >\r\n                باللغة العربية\r\n              </CNavLink>\r\n            </CNavItem>\r\n          )}\r\n          {isEnglish === 'true' && (\r\n            <CNavItem>\r\n              <CNavLink\r\n                style={\r\n                  isEnglish === 'false'\r\n                    ? null\r\n                    : selectedLang === 'en'\r\n                    ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                    : { color: Theme.primaryLight }\r\n                }\r\n                active={selectedLang === 'en'}\r\n                disabled={isEnglish === 'false'}\r\n                onClick={() => {\r\n                  setSelectedLang('en')\r\n                }}\r\n              >\r\n                {' '}\r\n                باللغة الانجليزية\r\n              </CNavLink>\r\n            </CNavItem>\r\n          )}\r\n          {isHebrew === 'true' && (\r\n            <CNavItem>\r\n              <CNavLink\r\n                style={\r\n                  isHebrew === 'false'\r\n                    ? null\r\n                    : selectedLang === 'he'\r\n                    ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                    : { color: Theme.primaryLight }\r\n                }\r\n                active={selectedLang === 'he'}\r\n                disabled={isHebrew === 'false'}\r\n                onClick={() => {\r\n                  setSelectedLang('he')\r\n                }}\r\n              >\r\n                {' '}\r\n                باللغة العبرية\r\n              </CNavLink>\r\n            </CNavItem>\r\n          )}\r\n        </CNav>\r\n        {selectedLang === 'ar' && (\r\n          <div className=\"d-flex align-items-center justify-content-end my-1\">\r\n            <h4 style={{ color: Theme.primary1, fontWeight: 'bold' }}>{product?.name_ar}</h4>\r\n          </div>\r\n        )}\r\n        {selectedLang === 'en' && (\r\n          <div className=\"d-flex align-items-center justify-content-start my-1\">\r\n            <h4 style={{ color: Theme.primary1, fontWeight: 'bold' }}>{product?.name_en}</h4>\r\n          </div>\r\n        )}\r\n        {selectedLang === 'he' && (\r\n          <div className=\"d-flex align-items-center justify-content-start my-1\">\r\n            <h4 style={{ color: Theme.primary1, fontWeight: 'bold' }}>{product?.name_he}</h4>\r\n          </div>\r\n        )}\r\n        {selectedLang === 'ar' && (\r\n          <div className=\"d-flex align-items-center justify-content-end my-1\">\r\n            <h5 style={{ color: Theme.grayDark, fontWeight: 'bold' }}>\r\n              ₪{product?.price_nis}\r\n              <Tag />\r\n            </h5>\r\n          </div>\r\n        )}\r\n        {selectedLang === 'en' && (\r\n          <div className=\"d-flex align-items-center justify-content-start my-1\">\r\n            <h5 style={{ color: Theme.grayDark, fontWeight: 'bold' }}>\r\n              <Tag />${product?.price_usd}\r\n            </h5>\r\n          </div>\r\n        )}\r\n        {selectedLang === 'he' && (\r\n          <div className=\"d-flex align-items-center justify-content-start my-1\">\r\n            <h5 style={{ color: Theme.grayDark, fontWeight: 'bold' }}>\r\n              <Tag />${product?.price_nis}\r\n            </h5>\r\n          </div>\r\n        )}\r\n        {selectedLang === 'ar' && (\r\n          <div className=\"d-flex align-items-center justify-content-end my-1\">\r\n            <h6 style={{ color: Theme.grayDark, textAlign: 'end' }}>{product?.description_ar}</h6>\r\n          </div>\r\n        )}\r\n        {selectedLang === 'en' && (\r\n          <div className=\"d-flex align-items-center justify-content-start my-1\">\r\n            <h6 style={{ color: Theme.grayDark }}>{product?.description_en}</h6>\r\n          </div>\r\n        )}\r\n        {selectedLang === 'he' && (\r\n          <div className=\"d-flex align-items-center justify-content-start my-1\">\r\n            <h6 style={{ color: Theme.grayDark }}>{product?.description_he}</h6>\r\n          </div>\r\n        )}\r\n\r\n        {product?.product_sizes?.length > 0 && (\r\n          <AppCard className=\"mb-4\">\r\n            <CCardBody>\r\n              <div\r\n                className={\r\n                  selectedLang === 'ar' ? 'd-flex align-items-end justify-content-start' : ''\r\n                }\r\n                style={{ marginTop: '15px', flexDirection: 'column' }}\r\n              >\r\n                {selectedLang === 'ar' && <p>الأحجام</p>}\r\n                {selectedLang === 'en' && <p>sizes</p>}\r\n                {selectedLang === 'he' && <p>sizes</p>}\r\n                <div>\r\n                  {product.product_sizes.map((size, index) => (\r\n                    <CTooltip\r\n                      content={\r\n                        selectedLang === 'en'\r\n                          ? `$${size.size_price_usd}`\r\n                          : `₪${size.size_price_nis}`\r\n                      }\r\n                      trigger={['hover']}\r\n                      key={index}\r\n                    >\r\n                      <span className=\"d-inline-block\" tabIndex={0}>\r\n                        <CButton\r\n                          shape=\"rounded-pill\"\r\n                          style={{\r\n                            marginLeft: 3,\r\n                            backgroundColor: Theme.primaryLight,\r\n                            border: 'none',\r\n                          }}\r\n                        >\r\n                          {size.size}\r\n                        </CButton>\r\n                      </span>\r\n                    </CTooltip>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </CCardBody>\r\n          </AppCard>\r\n        )}\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton style={{ backgroundColor: Theme.primaryRed, color: 'white', border: 'none' }}>\r\n          اغلاق\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n\r\n    /* <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      className=\"almarai-regular\"\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-title\"\r\n        color=\"white\"\r\n        style={{ color: Theme.primaryRed }}\r\n      >\r\n        {title}\r\n      </DialogTitle>\r\n      <DialogActions>\r\n        {deleteDialog ? (\r\n          <>\r\n            <Button onClick={actionCancel} style={{color: Theme.gray}}>إلغاء</Button>\r\n            <Button\r\n              onClick={actionExecute}\r\n              style={{ backgroundColor: Theme.primaryRed, color: 'white' }}\r\n            >\r\n              نعم بالتأكيد\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <Button onClick={onClose}>حسنا</Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog> */\r\n  )\r\n}\r\n\r\nexport default ProductDialog\r\n","/* eslint-disable react/jsx-key */\r\n/* eslint-disable jsx-a11y/img-redundant-alt */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormInput,\r\n  CFormSwitch,\r\n  CPagination,\r\n  CPaginationItem,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CTooltip,\r\n} from '@coreui/react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport {\r\n  ArrowDown,\r\n  ArrowsDownUp,\r\n  ArrowUp,\r\n  CheckSquare,\r\n  Eye,\r\n  NotePencil,\r\n  Percent,\r\n  Tag,\r\n  Trash,\r\n} from 'phosphor-react'\r\nimport Pagination from 'src/components/Pagination'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useProducts } from 'src/hooks/products/useProducts'\r\nimport AppDialog from 'src/components/AppDialog'\r\nimport { Theme } from 'src/constants/colors'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport AppTooltip from 'src/components/Tooltip'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport '../../components/test.css'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport image from '../../assets/images/image.png'\r\nimport EmptyPage from 'src/components/EmptyPage'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport ProductDialog from 'src/components/ProductDialog'\r\nimport { Input } from 'reactstrap'\r\nimport { Checkbox, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material'\r\n\r\nconst Products = () => {\r\n  const navigate = useNavigate()\r\n  const {\r\n    products,\r\n    loading,\r\n    showDialog,\r\n    confirmDelete,\r\n    executeDelete,\r\n    cancelDelete,\r\n    handlePageClick,\r\n    truncateDescription,\r\n    categoryFilter,\r\n    setCategoryFilter,\r\n    toggleMarkedItem,\r\n    markedItems,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n    showDeleteDialog,\r\n    links,\r\n    updateAvailability,\r\n    searchQuery,\r\n    setSearchQuery,\r\n    handleDeletePage,\r\n    loadingId,\r\n    handleOnDragEnd,\r\n    sortKey,\r\n    setSortKey,\r\n    selectedProduct,\r\n    setSelectedProduct,\r\n    productDialog,\r\n    setProductDialog,\r\n    updateOffer,\r\n    loadingOfferId,\r\n    offerDialog,\r\n    setOfferDialog,\r\n    discount,\r\n    setDiscount,\r\n    openOfferDialog,\r\n    offerId\r\n  } = useProducts()\r\n\r\n  const { isEnglish, isArabic, isHebrew } = useLanguage()\r\n\r\n  return (\r\n    <CRow className=\"h-100\">\r\n      <CCol xs>\r\n        <PageTitle\r\n          title=\"المنتجات\"\r\n          addText=\"اضافة منتج\"\r\n          addPath=\"add_product\"\r\n          filterValue={searchQuery}\r\n          setFilterValue={setSearchQuery}\r\n          filterItems={true}\r\n          addItem={true}\r\n          filterByCategory={true}\r\n          categoryFilter={categoryFilter}\r\n          setCategoryFilter={setCategoryFilter}\r\n          icon={<Tag size={25} />}\r\n          mark={true}\r\n          deleteMarked={handleDeletePage}\r\n          markedItems={markedItems}\r\n        />\r\n        <AppBreadcrumb />\r\n\r\n        <div>\r\n          {loading ? (\r\n            <div className=\"h-100 w-100 d-flex justify-content-center align-items-center py-5 my-5\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {products && products.length > 0 ? (\r\n                <div\r\n                  className=\"rounded my-3\"\r\n                  style={{\r\n                    backgroundColor: Theme.white,\r\n                    boxShadow: '0px 2px 3px #c8c8c8',\r\n                    width: '100%',\r\n                    overflowX: 'scroll',\r\n                  }}\r\n                >\r\n                  <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                    <Droppable droppableId=\"products\">\r\n                      {(provided) => (\r\n                        <CTable\r\n                          className=\" mb-3 products\"\r\n                          {...provided.droppableProps}\r\n                          ref={provided.innerRef}\r\n                          align=\"middle\"\r\n                          hover\r\n                          responsive\r\n                          striped\r\n                          width={1000}\r\n                        >\r\n                          <CTableHead color=\"light\">\r\n                            <CTableRow>\r\n                              <CTableHeaderCell className=\"text-center\" style={{ width: 100 }}>\r\n                                <CButton\r\n                                  style={{\r\n                                    backgroundColor: Theme.primary1,\r\n                                    border: 'none',\r\n                                  }}\r\n                                  onClick={markAll}\r\n                                >\r\n                                  <CheckSquare size={20} /> الكل\r\n                                </CButton>\r\n                              </CTableHeaderCell>\r\n                              <CTableHeaderCell className=\"text-center\">الاسم</CTableHeaderCell>\r\n                              <CTableHeaderCell>\r\n                                <div className=\"d-flex h-100 align-items-center justify-content-between\">\r\n                                  {sortKey === '' && (\r\n                                    <ArrowsDownUp\r\n                                      size={20}\r\n                                      onClick={() => {\r\n                                        setSortKey('price_asc')\r\n                                      }}\r\n                                      className=\"hovarableText\"\r\n                                    />\r\n                                  )}\r\n                                  {sortKey === 'price_asc' && (\r\n                                    <ArrowDown\r\n                                      size={20}\r\n                                      onClick={() => setSortKey('price_desc')}\r\n                                      style={{ color: Theme.primaryLight, cursor: 'pointer' }}\r\n                                    />\r\n                                  )}\r\n                                  {sortKey === 'price_desc' && (\r\n                                    <ArrowUp\r\n                                      size={20}\r\n                                      onClick={() => {\r\n                                        setSortKey('')\r\n                                      }}\r\n                                      style={{ color: Theme.primaryLight, cursor: 'pointer' }}\r\n                                    />\r\n                                  )}\r\n                                  السعر\r\n                                </div>\r\n                              </CTableHeaderCell>\r\n                              <CTableHeaderCell className=\"text-center\">الصورة</CTableHeaderCell>\r\n                              <CTableHeaderCell className=\"text-center\">الوصف</CTableHeaderCell>\r\n                              <CTableHeaderCell className=\"text-center\">\r\n                                {' '}\r\n                                الإجراءات{' '}\r\n                              </CTableHeaderCell>\r\n                              <CTableHeaderCell className=\"text-center\"> العروض </CTableHeaderCell>\r\n                              <CTableHeaderCell className=\"text-center\"> متوفر </CTableHeaderCell>\r\n                            </CTableRow>\r\n                          </CTableHead>\r\n                          <CTableBody>\r\n                            {products.map((item, index) => (\r\n                              <Draggable\r\n                                key={item.id}\r\n                                draggableId={item.id.toString()}\r\n                                index={index}\r\n                              >\r\n                                {(provided) => (\r\n                                  <CTableRow\r\n                                    v-for=\"item in tableItems\"\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}\r\n                                  >\r\n                                    <CTableDataCell className=\"text-center fw-medium\">\r\n                                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                                        <CFormCheck\r\n                                          id=\"index\"\r\n                                          className=\"customCheckbox\"\r\n                                          label=\" \"\r\n                                          reverse\r\n                                          checked={markedItems.find((id) => id === item.id)}\r\n                                          onChange={() => {\r\n                                            toggleMarkedItem(item.id)\r\n                                          }}\r\n                                        />\r\n                                      </div>\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                      <div className=\"d-flex flex-column h-100 align-items-center\">\r\n                                        {isArabic === 'true' && (\r\n                                          <button\r\n                                            className=\"hovarableText\"\r\n                                            onClick={() =>\r\n                                              navigate(`/edit_product/${item.id}`, {\r\n                                                state: { item },\r\n                                              })\r\n                                            }\r\n                                          >\r\n                                            {item.name_ar}\r\n                                          </button>\r\n                                        )}\r\n                                        {isEnglish === 'true' && (\r\n                                          <button\r\n                                            className=\"hovarableText\"\r\n                                            onClick={() =>\r\n                                              navigate(`/edit_product/${item.id}`, {\r\n                                                state: { item },\r\n                                              })\r\n                                            }\r\n                                          >\r\n                                            {item.name_en}\r\n                                          </button>\r\n                                        )}\r\n                                        {isHebrew === 'true' && (\r\n                                          <button\r\n                                            className=\"hovarableText\"\r\n                                            onClick={() =>\r\n                                              navigate(`/edit_product/${item.id}`, {\r\n                                                state: { item },\r\n                                              })\r\n                                            }\r\n                                          >\r\n                                            {item.name_he}\r\n                                          </button>\r\n                                        )}\r\n                                      </div>\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell className=\"text-center\">\r\n                                      ₪{item.price_nis}\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell className=\"text-center\">\r\n                                      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                        {item.images.length > 1 ? (\r\n                                          <div style={{ position: 'relative' }} className=\"mb-2\">\r\n                                            <div\r\n                                              style={{\r\n                                                width: 100,\r\n                                                height: 100,\r\n                                                backgroundColor: Theme.gray,\r\n                                                borderRadius: 5,\r\n                                              }}\r\n                                            />\r\n                                            <div\r\n                                              style={{\r\n                                                width: 100,\r\n                                                height: 100,\r\n                                                backgroundColor: Theme.grayDark,\r\n                                                borderRadius: 5,\r\n                                                position: 'absolute',\r\n                                                top: 4,\r\n                                                right: 4,\r\n                                              }}\r\n                                            />\r\n\r\n                                            <img\r\n                                              src={item.images[0] ? item.images[0].url : image}\r\n                                              onError={(e) => {\r\n                                                e.target.onError = null\r\n                                                e.target.src = image\r\n                                              }}\r\n                                              alt={`image-${item.images[0].id}`}\r\n                                              width=\"100\"\r\n                                              height=\"100\"\r\n                                              style={{\r\n                                                boxShadow: '0px 2px 3px #c8c8c8',\r\n                                                borderRadius: 5,\r\n                                                position: 'absolute',\r\n                                                top: 8,\r\n                                                right: 8,\r\n                                                backgroundColor: Theme.base,\r\n                                              }}\r\n                                            />\r\n                                          </div>\r\n                                        ) : (\r\n                                          <img\r\n                                            src={item.images[0] ? item.images[0].url : image}\r\n                                            onError={(e) => {\r\n                                              e.target.onError = null\r\n                                              e.target.src = image\r\n                                            }}\r\n                                            alt={`image-`}\r\n                                            width=\"100\"\r\n                                            height=\"100\"\r\n                                            style={{\r\n                                              boxShadow: '0px 2px 3px #c8c8c8',\r\n                                              borderRadius: 5,\r\n                                            }}\r\n                                          />\r\n                                        )}\r\n                                      </div>\r\n                                    </CTableDataCell>\r\n                                    {item.description_ar !== null ? (\r\n                                      <CTableDataCell className=\"text-center\">\r\n                                        {truncateDescription(item.description_ar, 30)}\r\n                                      </CTableDataCell>\r\n                                    ) : (\r\n                                      <CTableDataCell className=\"text-center\">\r\n                                        لا يوجد وصف\r\n                                      </CTableDataCell>\r\n                                    )}\r\n                                    <CTableDataCell\r\n                                      className=\"text-center\"\r\n                                      style={{ width: '20%' }}\r\n                                    >\r\n                                      <AppTooltip\r\n                                        type=\"delete\"\r\n                                        onClick={() => confirmDelete(item.id)}\r\n                                      />\r\n                                      <AppTooltip\r\n                                        type=\"edit\"\r\n                                        onClick={() =>\r\n                                          navigate(`/edit_product/${item.id}`, { state: { item } })\r\n                                        }\r\n                                      />\r\n                                      <AppTooltip\r\n                                        type=\"view\"\r\n                                        onClick={() => {\r\n                                          setSelectedProduct(item)\r\n                                          setProductDialog(true)\r\n                                        }}\r\n                                      />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                                        {loadingOfferId === item.id ? (\r\n                                          <Spinner animation=\"border\" role=\"status\">\r\n                                            <span className=\"visually-hidden\">Loading...</span>\r\n                                          </Spinner>\r\n                                        ) : (\r\n                                          <CFormSwitch\r\n                                            size=\"lg\"\r\n                                            id=\"activeApp\"\r\n                                            checked={item.is_offer === 'true'}\r\n                                            style={\r\n                                              item.is_offer === 'true'\r\n                                                ? {\r\n                                                    boxShadow: 'none',\r\n                                                    backgroundColor: Theme.primaryLight,\r\n                                                    borderColor: Theme.primaryLight,\r\n                                                  }\r\n                                                : { boxShadow: 'none' }\r\n                                            }\r\n                                            onChange={() => {\r\n                                              item.is_offer === 'true'\r\n                                                ? updateOffer(item.id, item.is_offer)\r\n                                                : openOfferDialog(item.id, item.discount_percentage)\r\n                                            }}\r\n                                          />\r\n                                        )}\r\n                                      </div>\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                                        {loadingId === item.id ? (\r\n                                          <Spinner animation=\"border\" role=\"status\">\r\n                                            <span className=\"visually-hidden\">Loading...</span>\r\n                                          </Spinner>\r\n                                        ) : (\r\n                                          <CFormSwitch\r\n                                            size=\"lg\"\r\n                                            id=\"activeApp\"\r\n                                            checked={item.available === 'true'}\r\n                                            style={\r\n                                              item.available === 'true'\r\n                                                ? {\r\n                                                    boxShadow: 'none',\r\n                                                    backgroundColor: Theme.primary1,\r\n                                                    borderColor: Theme.primary1,\r\n                                                  }\r\n                                                : { boxShadow: 'none' }\r\n                                            }\r\n                                            onChange={() => {\r\n                                              updateAvailability(item.id, item.available)\r\n                                            }}\r\n                                          />\r\n                                        )}\r\n                                      </div>\r\n                                    </CTableDataCell>\r\n                                  </CTableRow>\r\n                                )}\r\n                              </Draggable>\r\n                            ))}\r\n                          </CTableBody>\r\n                          {provided.placeholder}\r\n                        </CTable>\r\n                      )}\r\n                    </Droppable>\r\n                  </DragDropContext>\r\n                </div>\r\n              ) : (\r\n                <EmptyPage emptyItems=\"منتجات\" />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n        {searchQuery.trim() === '' && (\r\n          <CPagination align=\"center\">\r\n            {links &&\r\n              links.map((item, index) => (\r\n                <CPaginationItem\r\n                  active={item.active}\r\n                  key={index}\r\n                  onClick={() => {\r\n                    if (item.url) {\r\n                      const page = new URL(item.url).searchParams.get('page')\r\n                      handlePageClick(Number(page))\r\n                    }\r\n                  }}\r\n                  disabled={item.url == null}\r\n                >\r\n                  {item.label === 'Next &raquo;' ? (\r\n                    <>&raquo;</>\r\n                  ) : item.label === '&laquo; Previous' ? (\r\n                    <>&laquo;</>\r\n                  ) : (\r\n                    <>{item.label}</>\r\n                  )}\r\n                </CPaginationItem>\r\n              ))}\r\n          </CPagination>\r\n        )}\r\n      </CCol>\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف هذا المنتج ؟\"\r\n        open={showDialog}\r\n        onClose={cancelDelete}\r\n        actionCancel={cancelDelete}\r\n        actionExecute={executeDelete}\r\n        deleteDialog={true}\r\n      />\r\n      <ProductDialog\r\n        product={selectedProduct}\r\n        open={productDialog}\r\n        onClose={() => {\r\n          setProductDialog(false)\r\n          setSelectedProduct(null)\r\n        }}\r\n      />\r\n      <Dialog\r\n        open={offerDialog}\r\n        onClose={() => setOfferDialog(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        dir=\"rtl\"\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          color=\"black\"\r\n          style={{ width: '300px', textAlign: 'center', fontSize: '22px' }}\r\n        >\r\n          أضف نسبة خصم\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"col\" style={{ textAlign: '' }}>\r\n            <CFormInput value={discount} onChange={(e) => setDiscount(e.target.value)} />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions className=\"flex justify-content-center\">\r\n          <CButton\r\n            onClick={()=>updateOffer(offerId, false)}\r\n            style={{ backgroundColor: Theme.primary1, borderColor: Theme.primary1 }}\r\n          >\r\n            نعم بالتأكيد\r\n          </CButton>\r\n          <CButton\r\n            onClick={() => setOfferDialog(false)}\r\n            style={{ backgroundColor: Theme.primaryRed, margin: '0.5rem', color: Theme.white }}\r\n          >\r\n            إلغاء\r\n          </CButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف جميع المنتجات التي تم تحديدها ؟\"\r\n        open={showDeleteDialog}\r\n        onClose={cancelDeleteMarked}\r\n        actionCancel={cancelDeleteMarked}\r\n        actionExecute={executeDeleteMarked}\r\n        deleteDialog={true}\r\n      />\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Products\r\n","import { useState, useEffect } from 'react'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { useDelete } from '../general/useDelete'\r\nimport { useDeleteMarked } from '../general/useDeleteMarked'\r\n\r\nexport const useBrands = () => {\r\n  const [brands, setBrands] = useState([])\r\n  const [filterValue, setFilterValue] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n\r\n  const getBrands = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await fetch(`${API_ROUTE}/brands`)\r\n      const data = await response.json()\r\n      setBrands(data.brands)\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const getFilteredBrands = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await fetch(`${API_ROUTE}/search_category/${searchQuery}`)\r\n      const data = await response.json()\r\n      setBrands(data['categories'])\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const {\r\n    showDeleteDialog,\r\n    markedItems,\r\n    setMarkedItems,\r\n    toggleMarkedItem,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n  } = useDeleteMarked(brands, 'brands', getBrands)\r\n\r\n  const { showDialog, confirmDelete, executeDelete, cancelDelete } = useDelete('brands', getBrands)\r\n\r\n  useEffect(() => {\r\n    getBrands()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (searchQuery.trim() == '') {\r\n      getBrands()\r\n    } else {\r\n      getFilteredBrands()\r\n    }\r\n  }, [searchQuery])\r\n\r\n  const handleOnDragEnd = (result) => {\r\n    if (!result.destination) return\r\n    const items = Array.from(brands)\r\n    const [reorderedItem] = items.splice(result.source.index, 1)\r\n    items.splice(result.destination.index, 0, reorderedItem)\r\n    console.log(result)\r\n    // const updatedItems = items.map((item, index) => ({\r\n    //   ...item,\r\n    //   order_number: index,\r\n    // }))\r\n\r\n    setBrands(items)\r\n\r\n    // const request = updatedItems.forEach(async (item) => {\r\n    //   const formData = new FormData()\r\n    //   try{\r\n    //     await axios.put(`${API_ROUTE}/products/${item.id}/order-number`, {order_number: item.order_number})\r\n    //     console.log(item.id, ' updated to ', item.order_number)\r\n    //   }catch(error){\r\n    //     console.error(error)\r\n    //   }\r\n    // })\r\n  }\r\n  return {\r\n    brands,\r\n    loading,\r\n    showDialog,\r\n    confirmDelete,\r\n    executeDelete,\r\n    cancelDelete,\r\n    setFilterValue,\r\n    markedItems,\r\n    setMarkedItems,\r\n    showDeleteDialog,\r\n    toggleMarkedItem,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n    searchQuery,\r\n    setSearchQuery,\r\n    handleOnDragEnd,\r\n  }\r\n}\r\n","/* eslint-disable react/prop-types */\r\n\r\nimport React from 'react'\r\nimport { CProgress, CProgressBar } from '@coreui/react'\r\n\r\nconst ProgressBar = ({ progress }) => {\r\n  return (\r\n    <CProgress color=\"success\" variant=\"striped\" animated value={progress}>\r\n      <CProgressBar>{progress}%</CProgressBar>\r\n    </CProgress>\r\n  )\r\n}\r\n\r\nexport default ProgressBar\r\n","export const useCurrency = () => {\r\n  const isNIS = JSON.parse(localStorage.getItem('isNIS'))\r\n  const isUSD = JSON.parse(localStorage.getItem('isUSD'))\r\n  const isJUD = JSON.parse(localStorage.getItem('isJOD'))\r\n\r\n  const setNIS = (value) => {\r\n    localStorage.setItem('isNIS', JSON.stringify(value))\r\n  }\r\n\r\n  const setUSD = (value) => {\r\n    localStorage.setItem('isUSD', JSON.stringify(value))\r\n  }\r\n\r\n  const setJUD = (value) => {\r\n    localStorage.setItem('isJOD', JSON.stringify(value))\r\n  }\r\n\r\n  return {\r\n    isNIS,\r\n    isUSD,\r\n    isJUD,\r\n    setNIS,\r\n    setUSD,\r\n    setJUD,\r\n  }\r\n}\r\n","/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable prettier/prettier */\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormInput,\r\n  CFormTextarea,\r\n  CFormSelect,\r\n  CFormCheck,\r\n  CAlert,\r\n} from '@coreui/react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { NotePencil, PlusCircle, Trash, X } from 'phosphor-react'\r\nimport { useProductAdding } from 'src/hooks/products/useProductAdding'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport AppCard from 'src/components/AppCard'\r\nimport ProgressBar from 'src/components/AppProgressBar'\r\nimport AppTooltip from 'src/components/Tooltip'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport '../../components/test.css'\r\nimport { Chrome } from '@uiw/react-color'\r\nimport { useCurrency } from 'src/hooks/general/useCurrency'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\n\r\nconst AddProduct = () => {\r\n  const {\r\n    productNameAr,\r\n    setProductNameAr,\r\n    loading,\r\n    images,\r\n    setImages,\r\n    descriptionAr,\r\n    setDescriptionAr,\r\n    categories,\r\n    sizes,\r\n    isMultipleSize,\r\n    setIsMultipleSize,\r\n    handleSizeChange,\r\n    addSize,\r\n    handleSubmit,\r\n    validated,\r\n    visible,\r\n    setVisible,\r\n    deleteSize,\r\n    productNameEng,\r\n    setProductNameEng,\r\n    productNameHeb,\r\n    setProductNameHeb,\r\n    descriptionEng,\r\n    setDescriptionEng,\r\n    descriptionHeb,\r\n    setDescriptionHeb,\r\n    categoryID,\r\n    setCategoryID,\r\n    isMultipleColor,\r\n    setIsMultipleColor,\r\n    colors,\r\n    hex,\r\n    setHex,\r\n    colorImage,\r\n    setColorImage,\r\n    addColor,\r\n    deleteColor,\r\n    editColor,\r\n    editedColor,\r\n    setEditedColor,\r\n    productPriceJOD,\r\n    productPriceNIS,\r\n    productPriceUSD,\r\n    setProductPriceJOD,\r\n    setProductPriceNIS,\r\n    setProductPriceUSD,\r\n    handleFileChange,\r\n    uploadProgress,\r\n    productVideo,\r\n    setSizes,\r\n    checkValidated,\r\n    setCheckValidated,\r\n    brands,\r\n    brandId,\r\n    setBrandId,\r\n    isOffer,\r\n    setIsOffer,\r\n    discountPercentage,\r\n    setDiscountPercentage,\r\n    colorCode,\r\n    setColorCode,\r\n  } = useProductAdding()\r\n  const { width } = useWidth()\r\n\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  const { isJUD, isNIS, isUSD } = useCurrency()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"منتج جديد\" icon={<PlusCircle size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <CForm\r\n                    className=\"row g-3 needs-validation\"\r\n                    noValidate\r\n                    validated={validated}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    {isArabic === 'true' && (\r\n                      <CCol sm={width < 768 ? 12 : null}>\r\n                        <CFormInput\r\n                          className=\"multilanguage-input\"\r\n                          type=\"text\"\r\n                          id=\"productNameAr\"\r\n                          label=\"اسم المنتج باللغة العربية\"\r\n                          feedbackInvalid=\"اسم المنتج باللغة العربية مطلوب\"\r\n                          placeholder=\"اسم المنتج باللغة العربية\"\r\n                          value={productNameAr}\r\n                          required\r\n                          onChange={(e) => {\r\n                            setProductNameAr(e.target.value)\r\n                          }}\r\n                        />\r\n                      </CCol>\r\n                    )}\r\n                    {isEnglish === 'true' && (\r\n                      <CCol sm={width < 768 ? 12 : null}>\r\n                        <CFormInput\r\n                          type=\"text\"\r\n                          id=\"productNameEng\"\r\n                          label=\"اسم المنتج باللغة الإنجليزية\"\r\n                          feedbackInvalid=\"اسم المنتج باللغة الإنجليزية مطلوب\"\r\n                          placeholder=\"اسم المنتج باللغة الإنجليزية\"\r\n                          value={productNameEng}\r\n                          required\r\n                          onChange={(e) => {\r\n                            setProductNameEng(e.target.value)\r\n                          }}\r\n                        />\r\n                      </CCol>\r\n                    )}\r\n                    {isHebrew === 'true' && (\r\n                      <CCol sm={width < 768 ? 12 : null}>\r\n                        <CFormInput\r\n                          type=\"text\"\r\n                          id=\"productNameHeb\"\r\n                          label=\"اسم المنتج باللغة العبرية\"\r\n                          feedbackInvalid=\"اسم المنتج باللغة العبرية مطلوب\"\r\n                          placeholder=\"اسم المنتج باللغة العبرية\"\r\n                          value={productNameHeb}\r\n                          required\r\n                          onChange={(e) => {\r\n                            setProductNameHeb(e.target.value)\r\n                          }}\r\n                        />\r\n                      </CCol>\r\n                    )}\r\n                    <div className=\"mt-3 d-flex \">\r\n                      {isNIS === 'true' && (\r\n                        <CCol sm={width < 768 ? 12 : null} style={{ marginLeft: '1rem' }}>\r\n                          <CFormInput\r\n                            type=\"text\"\r\n                            id=\"productPrice\"\r\n                            label=\"سعر المنتج بالشيكل \"\r\n                            feedbackInvalid=\"سعر المنتج بالشيكل مطلوب\"\r\n                            placeholder=\"سعر المنتج بالشيكل\"\r\n                            value={productPriceNIS}\r\n                            required\r\n                            onChange={(e) => {\r\n                              setProductPriceNIS(e.target.value)\r\n                            }}\r\n                          />\r\n                        </CCol>\r\n                      )}\r\n                      {isUSD === 'true' && (\r\n                        <CCol sm={width < 768 ? 12 : null} style={{ marginLeft: '1rem' }}>\r\n                          <CFormInput\r\n                            type=\"text\"\r\n                            id=\"productPrice\"\r\n                            label=\"سعر المنتج بالدولار \"\r\n                            feedbackInvalid=\"سعر المنتج بالدولار مطلوب\"\r\n                            placeholder=\"سعر المنتج بالدولار\"\r\n                            value={productPriceUSD}\r\n                            required\r\n                            onChange={(e) => {\r\n                              setProductPriceUSD(e.target.value)\r\n                            }}\r\n                          />\r\n                        </CCol>\r\n                      )}\r\n                      {isJUD === 'true' && (\r\n                        <CCol sm={width < 768 ? 12 : null}>\r\n                          <CFormInput\r\n                            type=\"text\"\r\n                            id=\"productPrice\"\r\n                            label=\"سعر المنتج بالدينار \"\r\n                            feedbackInvalid=\"سعر المنتج بالدينار مطلوب\"\r\n                            placeholder=\"سعر المنتج بالدينار\"\r\n                            value={productPriceJOD}\r\n                            required\r\n                            onChange={(e) => {\r\n                              setProductPriceJOD(e.target.value)\r\n                            }}\r\n                          />\r\n                        </CCol>\r\n                      )}\r\n                    </div>\r\n\r\n                    {isArabic === 'true' && (\r\n                      <CCol sm={width < 768 ? 12 : null}>\r\n                        <div className=\"mb-3\">\r\n                          <CFormTextarea\r\n                            id=\"productDescriptionAr\"\r\n                            label=\"الوصف باللغة العربية\"\r\n                            placeholder=\" الوصف باللغة العربية\"\r\n                            value={descriptionAr}\r\n                            onChange={(e) => setDescriptionAr(e.target.value)}\r\n                          ></CFormTextarea>\r\n                        </div>\r\n                      </CCol>\r\n                    )}\r\n                    {isEnglish === 'true' && (\r\n                      <CCol sm={width < 768 ? 12 : null}>\r\n                        <div className=\"mb-3\">\r\n                          <CFormTextarea\r\n                            id=\"productDescriptionEng\"\r\n                            label=\"الوصف باللغة الانجليزية\"\r\n                            placeholder=\" الوصف باللغة الانجليزية\"\r\n                            value={descriptionEng}\r\n                            onChange={(e) => setDescriptionEng(e.target.value)}\r\n                          ></CFormTextarea>\r\n                        </div>\r\n                      </CCol>\r\n                    )}\r\n                    {isHebrew === 'true' && (\r\n                      <CCol sm={width < 768 ? 12 : null}>\r\n                        <div className=\"mb-3\">\r\n                          <CFormTextarea\r\n                            id=\"productDescriptionHeb\"\r\n                            label=\"الوصف باللغة العبرية\"\r\n                            placeholder=\" الوصف باللغة العبرية\"\r\n                            value={descriptionHeb}\r\n                            onChange={(e) => setDescriptionHeb(e.target.value)}\r\n                          ></CFormTextarea>\r\n                        </div>\r\n                      </CCol>\r\n                    )}\r\n                    <CCol md={12}>\r\n                      <CFormSelect\r\n                        id=\"productCategory\"\r\n                        label=\"تصنيف المنتج\"\r\n                        feedbackInvalid=\"تصنيف المنتج مطلوب\"\r\n                        value={categoryID}\r\n                        onChange={(e) => setCategoryID(e.target.value)}\r\n                        required\r\n                      >\r\n                        <option selected=\"\" value=\"\">\r\n                          {' '}\r\n                          اختر تصنيف المنتج\r\n                        </option>\r\n                        {categories.map((item) => (\r\n                          <option value={item.id} key={item.id}>\r\n                            {item.name_ar}\r\n                          </option>\r\n                        ))}\r\n                      </CFormSelect>\r\n                    </CCol>\r\n                    <CCol md={12}>\r\n                      <CFormSelect\r\n                        id=\"productCategory\"\r\n                        label=\"العلامة التجارية -اختياري-\"\r\n                        value={brandId}\r\n                        onChange={(e) => setBrandId(e.target.value)}\r\n                      >\r\n                        <option selected value=\"0\">\r\n                          {' '}\r\n                          اختر العلامة التجارية للمنتج -اختياري-\r\n                        </option>\r\n                        {brands.map((item) => (\r\n                          <option value={item.id} key={item.id}>\r\n                            {item.name}\r\n                          </option>\r\n                        ))}\r\n                      </CFormSelect>\r\n                    </CCol>\r\n                    <CCol md={12}>\r\n                      <div className=\"mb-3\">\r\n                        <CFormInput\r\n                          label=\"صورة المنتج\"\r\n                          type=\"file\"\r\n                          id=\"productPic\"\r\n                          feedbackInvalid=\"صورة المنتج مطلوبة\"\r\n                          required\r\n                          multiple\r\n                          onChange={(e) => {\r\n                            setImages((prevImages) => [\r\n                              ...prevImages,\r\n                              ...Array.from(e.target.files),\r\n                            ])\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </CCol>\r\n\r\n                    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                      {images.map((img, index) => (\r\n                        // eslint-disable-next-line react/jsx-key\r\n                        <div className=\"m-1\" style={{ position: 'relative' }}>\r\n                          <X\r\n                            size={15}\r\n                            style={{\r\n                              position: 'absolute',\r\n                              top: 15,\r\n                              right: 5,\r\n                              color: 'white',\r\n                              backgroundColor: '#ff3a31',\r\n                              borderRadius: '80%',\r\n                              cursor: 'pointer',\r\n                            }}\r\n                            onClick={() => setImages(images.filter((_, i) => i !== index))}\r\n                          />\r\n                          <img\r\n                            key={index}\r\n                            src={URL.createObjectURL(img)}\r\n                            height=\"200\"\r\n                            alt={`images ${index}`}\r\n                            style={{ margin: '10px' }}\r\n                          />\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    <CCol md={12}>\r\n                      <div className=\"mb-3\">\r\n                        <CFormInput\r\n                          label=\"فيديو المنتج(اختياري)\"\r\n                          type=\"file\"\r\n                          aria-label=\"الفيديو الخاص بالمنتج\"\r\n                          id=\"productVid\"\r\n                          multiple\r\n                          onChange={handleFileChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"m-1\" style={{ position: 'relative', width: '255px' }}>\r\n                        {productVideo && (\r\n                          <video width=\"250\" height=\"200\" controls>\r\n                            <source src={URL.createObjectURL(productVideo)} type=\"video/mp4\" />\r\n                          </video>\r\n                        )}\r\n\r\n                        {uploadProgress?.visible && (\r\n                          <ProgressBar progress={uploadProgress?.progress || 0} />\r\n                        )}\r\n                        {uploadProgress?.status === 'success' && (\r\n                          <div style={{ color: 'green', marginTop: '10px' }}>\r\n                            Upload successful!\r\n                          </div>\r\n                        )}\r\n                        {uploadProgress?.status === 'failure' && (\r\n                          <div style={{ color: 'red', marginTop: '10px' }}>Upload failed!</div>\r\n                        )}\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol sm={width < 768 ? 12 : null}>\r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        id=\"productPrice\"\r\n                        label=\"نسبة الخصم\"\r\n                        placeholder=\"نسبة الخصم\"\r\n                        value={discountPercentage}\r\n                        onChange={(e) => {\r\n                          setDiscountPercentage(e.target.value)\r\n                        }}\r\n                      />\r\n                    </CCol>\r\n                    <CCol md={12}>\r\n                      <CFormCheck\r\n                        className=\"customCheckbox\"\r\n                        type=\"checkbox\"\r\n                        id=\"isOffer\"\r\n                        reverse\r\n                        label=\"إضافة المنتج الى العروض\"\r\n                        checked={isOffer}\r\n                        onChange={() => {\r\n                          setIsOffer(!isOffer)\r\n                          if (isOffer === true) {\r\n                            setIsOffer(false)\r\n                          } else {\r\n                            setIsOffer(true)\r\n                          }\r\n                        }}\r\n                      />\r\n                    </CCol>\r\n                    <CCol md={12}>\r\n                      <CFormCheck\r\n                        className=\"customCheckbox\"\r\n                        type=\"checkbox\"\r\n                        id=\"multiColor\"\r\n                        reverse\r\n                        feedbackInvalid=\"يجب اضافة لون واحد على الاقل\"\r\n                        label=\"هل المنتج متعدد الألوان؟\"\r\n                        checked={isMultipleColor}\r\n                        onChange={() => {\r\n                          setIsMultipleColor(!isMultipleColor)\r\n                          if (isMultipleColor === false && colors.length < 1) {\r\n                            setCheckValidated(false)\r\n                          } else {\r\n                            setCheckValidated(true)\r\n                          }\r\n                        }}\r\n                        invalid={!checkValidated}\r\n                      />\r\n                    </CCol>\r\n                    {isMultipleColor && (\r\n                      <>\r\n                        <Chrome\r\n                          style={{ marginLeft: 20 }}\r\n                          color={hex}\r\n                          onChange={(color) => {\r\n                            setHex(color.hex)\r\n                          }}\r\n                        />\r\n                        <CCol md={6}>\r\n                          <div className=\"mb-3\">\r\n                            <CFormInput\r\n                              label=\"صورة اللون\"\r\n                              type=\"file\"\r\n                              id=\"productPic\"\r\n                              onChange={(e) => {\r\n                                setColorImage(e.target.files[0])\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          {colorImage && (\r\n                            <div className=\"m-1\" style={{ position: 'relative', width: '255px' }}>\r\n                              <X\r\n                                size={15}\r\n                                style={{\r\n                                  position: 'absolute',\r\n                                  top: 15,\r\n                                  left: 0,\r\n                                  color: 'white',\r\n                                  backgroundColor: '#ff3a31',\r\n                                  borderRadius: '80%',\r\n                                  cursor: 'pointer',\r\n                                }}\r\n                                onClick={() => {\r\n                                  setColorImage(undefined)\r\n                                }}\r\n                              />\r\n                              <img\r\n                                src={colorImage ? URL.createObjectURL(colorImage) : ''}\r\n                                height=\"200\"\r\n                                alt={`colorImage`}\r\n                                style={{ margin: '10px' }}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                          {editedColor === null ? (\r\n                            <CButton\r\n                              onClick={addColor}\r\n                              disabled={colorImage === undefined || hex === '' || colorCode === ''}\r\n                              style={{\r\n                                width: '200px',\r\n                                backgroundColor: Theme.primaryLight,\r\n                                border: 'none',\r\n                              }}\r\n                            >\r\n                              أضف اللون\r\n                            </CButton>\r\n                          ) : (\r\n                            <CButton\r\n                              onClick={() => editColor(editedColor)}\r\n                              style={{\r\n                                width: '200px',\r\n                                backgroundColor: Theme.primaryBlue,\r\n                                border: 'none',\r\n                              }}\r\n                            >\r\n                              تعديل اللون\r\n                            </CButton>\r\n                          )}\r\n                        </CCol>\r\n                        <CCol md={3}>\r\n                          <CFormInput\r\n                            type=\"text\"\r\n                            label=\"رمز اللون\"\r\n                            placeholder=\"رمز اللون\"\r\n                            value={colorCode}\r\n                            onChange={(event) => setColorCode(event.target.value)}\r\n                          />\r\n                        </CCol>\r\n                        <div\r\n                          style={{\r\n                            width: '100%',\r\n                            padding: 5,\r\n                          }}\r\n                          className=\"d-flex flex-wrap\"\r\n                        >\r\n                          {colors.map((color, index) => (\r\n                            <div\r\n                              key={index}\r\n                              style={{\r\n                                width: 75,\r\n                                height: 130,\r\n                                borderRadius: 5,\r\n                                boxShadow: '0px 2px 3px #c8c8c8',\r\n                                padding: 5,\r\n                                marginLeft: 5,\r\n                              }}\r\n                            >\r\n                              {color.image ? (\r\n                                <img\r\n                                  src={URL.createObjectURL(color.image)}\r\n                                  width=\"50\"\r\n                                  height=\"50\"\r\n                                  alt={`colorImage`}\r\n                                  style={{ margin: '10px' }}\r\n                                />\r\n                              ) : (\r\n                                <div\r\n                                  style={{\r\n                                    width: 50,\r\n                                    height: 50,\r\n                                    backgroundColor: color.color,\r\n                                    margin: 10,\r\n                                    borderRadius: 5,\r\n                                  }}\r\n                                />\r\n                              )}\r\n                              <p style={{ textAlign: 'center', margin: 0 }}>{color.code}</p>\r\n                              <div className=\"d-flex flex-row justify-content-around align-items-center mt-1\">\r\n                                <Trash\r\n                                  size={20}\r\n                                  color={Theme.primaryRed}\r\n                                  cursor=\"pointer\"\r\n                                  onClick={() => deleteColor(index)}\r\n                                />\r\n                                <NotePencil\r\n                                  size={20}\r\n                                  color={Theme.primaryBlue}\r\n                                  cursor=\"pointer\"\r\n                                  onClick={() => {\r\n                                    setHex(color.color)\r\n                                    setColorImage(color.image ? color.image : '')\r\n                                    setEditedColor(index)\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                    <CCol md={12}>\r\n                      <CFormCheck\r\n                        className=\"customCheckbox\"\r\n                        type=\"checkbox\"\r\n                        id=\"multiSize\"\r\n                        reverse\r\n                        label=\"هل المنتج متعدد الأحجام؟\"\r\n                        checked={isMultipleSize}\r\n                        onChange={() => {\r\n                          setIsMultipleSize(!isMultipleSize)\r\n                          if (!isMultipleSize) addSize()\r\n                          else setSizes([])\r\n                        }}\r\n                      />\r\n                    </CCol>\r\n                    {isMultipleSize && (\r\n                      <AppCard>\r\n                        <CCardBody>\r\n                          <div style={{ marginTop: '15px' }}>\r\n                            {sizes.map((size, index) => (\r\n                              <CRow\r\n                                key={index}\r\n                                style={{\r\n                                  borderRadius: '5px',\r\n                                  padding: '10px',\r\n                                  marginBottom: '10px',\r\n                                  display: 'flex',\r\n                                  alignItems: 'center',\r\n                                  boxShadow: '0px 2px 3px #c8c8c8',\r\n                                }}\r\n                              >\r\n                                <CCol style={{ marginLeft: '0.5rem' }} sm={width < 768 ? 12 : 5}>\r\n                                  <CFormInput\r\n                                    type=\"text\"\r\n                                    feedbackInvalid=\"الحجم مطلوب\"\r\n                                    label={index === 0 ? 'الحجم' : null}\r\n                                    placeholder=\"الحجم\"\r\n                                    value={size.size}\r\n                                    required\r\n                                    onChange={(event) => handleSizeChange(index, 'size', event)}\r\n                                  />\r\n                                </CCol>\r\n                                {isNIS === 'true' && (\r\n                                  <CCol\r\n                                    style={{ marginLeft: '0.5rem' }}\r\n                                    sm={width < 768 ? 12 : null}\r\n                                  >\r\n                                    <CFormInput\r\n                                      type=\"text\"\r\n                                      label={index === 0 ? 'السعر بالشيكل' : null}\r\n                                      feedbackInvalid=\"السعر بالشيكل مطلوب\"\r\n                                      placeholder=\"السعر بالشيكل\"\r\n                                      value={size.priceNIS}\r\n                                      required\r\n                                      onChange={(event) =>\r\n                                        handleSizeChange(index, 'priceNIS', event)\r\n                                      }\r\n                                    />\r\n                                  </CCol>\r\n                                )}\r\n                                {isUSD === 'true' && (\r\n                                  <CCol\r\n                                    style={{ marginLeft: '0.5rem' }}\r\n                                    sm={width < 768 ? 12 : null}\r\n                                  >\r\n                                    <CFormInput\r\n                                      type=\"text\"\r\n                                      label={index === 0 ? 'السعر بالدولار' : null}\r\n                                      feedbackInvalid=\"السعر بالدولار مطلوب\"\r\n                                      placeholder=\"السعر بالدولار\"\r\n                                      value={size.priceUSD}\r\n                                      required\r\n                                      onChange={(event) =>\r\n                                        handleSizeChange(index, 'priceUSD', event)\r\n                                      }\r\n                                    />\r\n                                  </CCol>\r\n                                )}\r\n                                {isJUD === 'true' && (\r\n                                  <CCol sm={width < 768 ? 12 : null}>\r\n                                    <CFormInput\r\n                                      type=\"text\"\r\n                                      label={index === 0 ? 'السعر بالدينار' : null}\r\n                                      feedbackInvalid=\"السعر بالدينار مطلوب\"\r\n                                      placeholder=\"السعر بالدينار\"\r\n                                      value={size.priceJUD}\r\n                                      required\r\n                                      onChange={(event) =>\r\n                                        handleSizeChange(index, 'priceJOD', event)\r\n                                      }\r\n                                    />\r\n                                  </CCol>\r\n                                )}\r\n                                <CCol>\r\n                                  <div className=\"d-grid gap-2 col-4 mx-auto m-1\">\r\n                                    {index === 0 ? <br /> : null}\r\n                                    <AppTooltip type=\"delete\" onClick={() => deleteSize(index)} />\r\n                                  </div>\r\n                                </CCol>\r\n                              </CRow>\r\n                            ))}\r\n                            <CButton\r\n                              onClick={addSize}\r\n                              style={{\r\n                                width: '200px',\r\n                                backgroundColor: Theme.primaryLight,\r\n                                border: 'none',\r\n                                marginTop: 10,\r\n                              }}\r\n                            >\r\n                              أضف حجم جديد\r\n                            </CButton>\r\n                          </div>\r\n                        </CCardBody>\r\n                      </AppCard>\r\n                    )}\r\n                    <CCardBody>\r\n                      {loading ? (\r\n                        <Spinner animation=\"border\" role=\"status\" style={{ margin: '10px' }}>\r\n                          <span className=\"visually-hidden\">Loading...</span>\r\n                        </Spinner>\r\n                      ) : (\r\n                        <CButton\r\n                          style={{\r\n                            width: '200px',\r\n                            backgroundColor: Theme.primary1,\r\n                            border: 'none',\r\n                          }}\r\n                          type=\"submit\"\r\n                        >\r\n                          <span style={{ fontWeight: 'bolder' }}>اضافه منتج</span>\r\n                        </CButton>\r\n                      )}\r\n                      <CAlert\r\n                        color=\"danger\"\r\n                        dismissible\r\n                        visible={visible}\r\n                        onClose={() => setVisible(false)}\r\n                      >\r\n                        حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n                      </CAlert>\r\n                    </CCardBody>\r\n                  </CForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\nexport default AddProduct\r\n","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyAdd } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useCategories } from '../categories/useCategories'\r\nimport { useFormValidation } from '../general/useFormValidation'\r\nimport { useLanguage } from '../general/useLanguage'\r\nimport { useBrands } from '../brands/useBrands'\r\n\r\nexport const useProductAdding = () => {\r\n  const navigate = useNavigate()\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  const [productNameAr, setProductNameAr] = useState('')\r\n  const [productNameEng, setProductNameEng] = useState('')\r\n  const [productNameHeb, setProductNameHeb] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [productPriceNIS, setProductPriceNIS] = useState('0')\r\n  const [productPriceUSD, setProductPriceUSD] = useState('0')\r\n  const [productPriceJOD, setProductPriceJOD] = useState('0')\r\n  const [images, setImages] = useState([])\r\n  const [productVideo, setProductVideo] = useState(null)\r\n  const [descriptionAr, setDescriptionAr] = useState('')\r\n  const [descriptionEng, setDescriptionEng] = useState('')\r\n  const [descriptionHeb, setDescriptionHeb] = useState('')\r\n  const [categoryID, setCategoryID] = useState('')\r\n  const [sizes, setSizes] = useState([])\r\n  const [colors, setColors] = useState([])\r\n  const [isMultipleSize, setIsMultipleSize] = useState(false)\r\n  const [isMultipleColor, setIsMultipleColor] = useState(false)\r\n  const { categories } = useCategories()\r\n  const { brands } = useBrands()\r\n  const [brandId, setBrandId] = useState('')\r\n  const [visible, setVisible] = useState(false)\r\n  const [hex, setHex] = useState('')\r\n  const [colorImage, setColorImage] = useState()\r\n  const [colorCode, setColorCode] = useState()\r\n  const [editedColor, setEditedColor] = useState(null)\r\n  const [isOffer, setIsOffer] = useState(false)\r\n  const [discountPercentage, setDiscountPercentage] = useState(0)\r\n  const [uploadProgress, setUploadProgress] = useState({\r\n    file: null,\r\n    progress: 0,\r\n    visible: false,\r\n    status: null,\r\n  })\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0]\r\n    setProductVideo(file)\r\n    if (file.type.startsWith('video/')) {\r\n      const reader = new FileReader()\r\n      reader.onloadstart = () => {\r\n        setUploadProgress({ file, progress: 0, visible: true, status: null })\r\n      }\r\n      reader.onprogress = (event) => {\r\n        if (event.lengthComputable) {\r\n          const progress = Math.round((event.loaded * 100) / event.total)\r\n          setUploadProgress((prevProgress) => ({\r\n            ...prevProgress,\r\n            progress,\r\n          }))\r\n        }\r\n      }\r\n      reader.onloadend = () => {\r\n        setUploadProgress((prevProgress) => ({\r\n          ...prevProgress,\r\n          progress: 100,\r\n          status: 'success',\r\n        }))\r\n        setTimeout(() => {\r\n          setUploadProgress((prevProgress) => ({\r\n            ...prevProgress,\r\n            visible: false,\r\n          }))\r\n        }, 1000)\r\n      }\r\n      reader.onerror = () => {\r\n        setUploadProgress((prevProgress) => ({\r\n          ...prevProgress,\r\n          visible: false,\r\n          status: 'failure',\r\n        }))\r\n      }\r\n      reader.readAsDataURL(file)\r\n    } else {\r\n      setUploadProgress({ file, progress: 100, visible: false, status: 'success' })\r\n    }\r\n  }\r\n\r\n  const addProduct = async () => {\r\n    setLoading(true)\r\n\r\n    let formData = new FormData()\r\n    console.log('start filling form', colors)\r\n    images.forEach((image, index) => {\r\n      formData.append(`image[${index}]`, image)\r\n      if (index === images.length - 1 && productVideo !== null) {\r\n        formData.append(`image[${index + 1}]`, productVideo)\r\n      }\r\n    })\r\n\r\n    if (sizes.length > 0) {\r\n      sizes.forEach((size, index) => {\r\n        formData.append(`size[${index}]`, size.size)\r\n        formData.append(`size_price_nis[${index}]`, size.priceNIS)\r\n        formData.append(`size_price_usd[${index}]`, size.priceUSD)\r\n      })\r\n    }\r\n    if (colors.length > 0) {\r\n      colors.forEach((color, index) => {\r\n        formData.append(`color[${index}]`, color.color)\r\n        formData.append(`color_image[${index}]`, color.image)\r\n        formData.append(`color_code[${index}]`, color.code)\r\n      })\r\n    }\r\n\r\n    isArabic === 'true'\r\n      ? formData.append('name_ar', productNameAr)\r\n      : formData.append('name_ar', 'empty')\r\n    isEnglish === 'true'\r\n      ? formData.append('name_en', productNameEng)\r\n      : formData.append('name_en', 'empty')\r\n    isHebrew === 'true'\r\n      ? formData.append('name_he', productNameHeb)\r\n      : formData.append('name_he', 'empty')\r\n    isArabic === 'true'\r\n      ? formData.append('description_ar', descriptionAr)\r\n      : formData.append('description_ar', 'empty')\r\n    isEnglish === 'true'\r\n      ? formData.append('description_en', descriptionEng)\r\n      : formData.append('description_en', 'empty')\r\n    isHebrew === 'true'\r\n      ? formData.append('description_he', descriptionHeb)\r\n      : formData.append('description_he', 'empty')\r\n    formData.append('price_nis', productPriceNIS)\r\n    formData.append('price_usd', productPriceUSD)\r\n    formData.append('price_jod', productPriceJOD)\r\n    formData.append('category_id', categoryID)\r\n    formData.append('available', true)\r\n    formData.append('is_offer', isOffer)\r\n    formData.append('discount_percentage', discountPercentage)\r\n    formData.append('brand_id', brandId)\r\n    console.log(formData.getAll('name_ar'))\r\n    const resGet = await axios\r\n      .post(`${API_ROUTE}/products`, formData)\r\n      .then((response) => {\r\n        setLoading(false)\r\n        notifyAdd()\r\n        setTimeout(() => {\r\n          navigate('/products')\r\n        }, 500)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        setLoading(false)\r\n        setVisible(true)\r\n      })\r\n    setLoading(false)\r\n  }\r\n\r\n  const { handleSubmit, validated, checkValidated, setCheckValidated } =\r\n    useFormValidation(addProduct)\r\n  useEffect(() => {\r\n    if (colors.length < 1 && isMultipleColor) {\r\n      setCheckValidated(false)\r\n    } else {\r\n      setCheckValidated(true)\r\n    }\r\n  }, [isMultipleColor, colors])\r\n\r\n  const handleSizeChange = (index, field, event) => {\r\n    const newSize = [...sizes]\r\n    newSize[index][field] = event.target.value\r\n    setSizes(newSize)\r\n  }\r\n  const addSize = () => {\r\n    setSizes([...sizes, { size: '', priceNIS: '0', priceUSD: '0', priceJOD: '0' }])\r\n  }\r\n\r\n  const deleteSize = (index) => {\r\n    const newSize = sizes.filter((size, sizeIndex) => sizeIndex !== index)\r\n    setSizes(newSize)\r\n  }\r\n\r\n  const addColor = () => {\r\n    setColors([...colors, { color: hex, image: colorImage, code: colorCode }])\r\n    setHex('')\r\n    setColorCode('')\r\n    setColorImage(undefined)\r\n    console.log(colors)\r\n  }\r\n\r\n  const deleteColor = (index) => {\r\n    const newColors = colors.filter((color, colorIndex) => colorIndex !== index)\r\n    setColors(newColors)\r\n  }\r\n\r\n  const editColor = (index) => {\r\n    const newColors = [...colors]\r\n    newColors[index] = { color: hex, image: colorImage, code: colorCode }\r\n    setColors(newColors)\r\n    setEditedColor(null)\r\n    setHex('')\r\n    setColorCode('')\r\n    setColorImage(undefined)\r\n  }\r\n  return {\r\n    productNameAr,\r\n    setProductNameAr,\r\n    loading,\r\n    images,\r\n    setImages,\r\n    descriptionAr,\r\n    setDescriptionAr,\r\n    categoryID,\r\n    setCategoryID,\r\n    categories,\r\n    sizes,\r\n    setSizes,\r\n    isMultipleSize,\r\n    setIsMultipleSize,\r\n    addProduct,\r\n    handleSizeChange,\r\n    addSize,\r\n    handleSubmit,\r\n    validated,\r\n    visible,\r\n    setVisible,\r\n    deleteSize,\r\n    productNameEng,\r\n    setProductNameEng,\r\n    productNameHeb,\r\n    setProductNameHeb,\r\n    descriptionEng,\r\n    setDescriptionEng,\r\n    descriptionHeb,\r\n    setDescriptionHeb,\r\n    isMultipleColor,\r\n    setIsMultipleColor,\r\n    colors,\r\n    setColors,\r\n    hex,\r\n    setHex,\r\n    colorImage,\r\n    setColorImage,\r\n    addColor,\r\n    deleteColor,\r\n    editColor,\r\n    editedColor,\r\n    setEditedColor,\r\n    productPriceJOD,\r\n    productPriceNIS,\r\n    productPriceUSD,\r\n    setProductPriceJOD,\r\n    setProductPriceNIS,\r\n    setProductPriceUSD,\r\n    handleFileChange,\r\n    uploadProgress,\r\n    productVideo,\r\n    setProductVideo,\r\n    checkValidated,\r\n    setCheckValidated,\r\n    brands,\r\n    brandId,\r\n    setBrandId,\r\n    isOffer,\r\n    setIsOffer,\r\n    discountPercentage,\r\n    setDiscountPercentage,\r\n    colorCode,\r\n    setColorCode,\r\n  }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormInput,\r\n  CFormSwitch,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { NotePencil, Trash, X } from 'phosphor-react'\r\nimport { Switch } from '@mui/material'\r\nimport { useProductEditing } from 'src/hooks/products/useProductEditing'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useCurrency } from 'src/hooks/general/useCurrency'\r\nimport AppTooltip from 'src/components/Tooltip'\r\nimport broken_image from '../../assets/images/image.png'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\nimport { Chrome } from '@uiw/react-color'\r\nimport AppDialog from 'src/components/AppDialog'\r\n\r\nconst EditProduct = () => {\r\n  const params = useParams()\r\n  const { state } = useLocation()\r\n  const item = state?.item\r\n  const {\r\n    productNameAr,\r\n    productNameEng,\r\n    productNameHeb,\r\n    productPriceNIS,\r\n    setProductPriceNIS,\r\n    productPriceUSD,\r\n    productPriceJOD,\r\n    setProductPriceJOD,\r\n    setProductPriceUSD,\r\n    categories,\r\n    categoryID,\r\n    descriptionAr,\r\n    descriptionEng,\r\n    descriptionHeb,\r\n    image,\r\n    loading,\r\n    isChecked,\r\n    update,\r\n    setProductNameAr,\r\n    setProductNameEng,\r\n    setProductNameHeb,\r\n    setImage,\r\n    setCategoryID,\r\n    setDescriptionAr,\r\n    setDescriptionEng,\r\n    setDescriptionHeb,\r\n    setIsChecked,\r\n    visible,\r\n    setVisible,\r\n    sizes,\r\n    handleSizeChange,\r\n    addSize,\r\n    deleteSize,\r\n    colors,\r\n    hex,\r\n    setHex,\r\n    colorImage,\r\n    setColorImage,\r\n    addColor,\r\n    deleteColor,\r\n    ProductVideoEdited,\r\n    setProductVideoEdited,\r\n    showDeleteImageDialog,\r\n    setShowDeleteImageDialog,\r\n    DeleteProductImage,\r\n    cancelDeleteImage,\r\n    startDelete,\r\n    isVideoEdited,\r\n    setIsVideoEdited,\r\n    isMultipleSizes,\r\n    isMultipleColors,\r\n    setIsMultipleColors,\r\n    setIsMultipleSizes,\r\n    showColorDialog,\r\n    setShowColorDialog,\r\n    startDeleteColor,\r\n    cancelDeleteColor,\r\n    deleteProductColor,\r\n    saveAndExit,\r\n    brands,\r\n    brandId,\r\n    setBrandId,\r\n    discountPercentage,\r\n    setDiscountPercentage,\r\n    isOffer,\r\n    setIsOffer,\r\n    saveAndStay,\r\n    colorCode,\r\n    setColorCode,\r\n  } = useProductEditing(params.id, item)\r\n\r\n  const { width } = useWidth()\r\n\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  const { isJUD, isNIS, isUSD } = useCurrency()\r\n\r\n  if (!item) {\r\n    return <div>Product not found</div>\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"تعديل المنتج\" icon={<NotePencil size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody style={{ position: 'relative' }}>\r\n            <div\r\n              className=\"col-12 flex-row d-flex align-items-center\"\r\n              style={{ marginTop: '15px', position: 'absolute', top: -10, right: 0 }}\r\n            >\r\n              <CFormSwitch\r\n                size=\"lg\"\r\n                id=\"activeApp\"\r\n                checked={isChecked === 'true'}\r\n                label=\"هل المنتج متوفر؟\"\r\n                reverse\r\n                style={\r\n                  isChecked === 'true'\r\n                    ? {\r\n                        boxShadow: 'none',\r\n                        backgroundColor: Theme.primary1,\r\n                        borderColor: Theme.primary1,\r\n                        marginLeft: 5,\r\n                      }\r\n                    : { boxShadow: 'none' }\r\n                }\r\n                onChange={() => {\r\n                  isChecked === 'true' ? setIsChecked('false') : setIsChecked('true')\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"column\">\r\n              <div className=\"row pt-5\">\r\n                {isArabic === 'true' && (\r\n                  <CCol sm={width < 768 ? 12 : null}>\r\n                    <label className=\"form-label\">اسم المنتج باللغة العربية</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"اسم المنتج باللغة العربية \"\r\n                      aria-label=\"First name\"\r\n                      name=\"product_name\"\r\n                      value={productNameAr}\r\n                      onChange={(e) => setProductNameAr(e.target.value)}\r\n                    />\r\n                  </CCol>\r\n                )}\r\n                {isEnglish === 'true' && (\r\n                  <CCol sm={width < 768 ? 12 : null}>\r\n                    <label className=\"form-label\">اسم المنتج باللغة الانجليزية</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"اسم المنتج باللغة الانجليزية \"\r\n                      aria-label=\"First name\"\r\n                      name=\"product_name\"\r\n                      value={productNameEng}\r\n                      onChange={(e) => setProductNameEng(e.target.value)}\r\n                    />\r\n                  </CCol>\r\n                )}\r\n                {isHebrew === 'true' && (\r\n                  <CCol sm={width < 768 ? 12 : null}>\r\n                    <label className=\"form-label\">اسم المنتج باللغة العبرية</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"اسم المنتج باللغة العبرية \"\r\n                      aria-label=\"First name\"\r\n                      name=\"product_name\"\r\n                      value={productNameHeb}\r\n                      onChange={(e) => setProductNameHeb(e.target.value)}\r\n                    />\r\n                  </CCol>\r\n                )}\r\n                <div className=\"my-3 d-flex \">\r\n                  {isNIS === 'true' && (\r\n                    <CCol sm={width < 768 ? 12 : null} style={{ marginLeft: '1rem' }}>\r\n                      <label className=\"form-label\">سعر المنتج بالشيكل</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"سعر المنتج بالشيكل \"\r\n                        aria-label=\"First name\"\r\n                        name=\"product_price\"\r\n                        value={productPriceNIS}\r\n                        onChange={(e) => setProductPriceNIS(e.target.value)}\r\n                      />\r\n                    </CCol>\r\n                  )}\r\n                  {isUSD === 'true' && (\r\n                    <CCol sm={width < 768 ? 12 : null} style={{ marginLeft: '1rem' }}>\r\n                      <label className=\"form-label\">سعر المنتج بالدولار</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"سعر المنتج بالدولار \"\r\n                        aria-label=\"First name\"\r\n                        name=\"product_price\"\r\n                        value={productPriceUSD}\r\n                        onChange={(e) => setProductPriceUSD(e.target.value)}\r\n                      />\r\n                    </CCol>\r\n                  )}\r\n                  {isJUD === 'true' && (\r\n                    <CCol sm={width < 768 ? 12 : null}>\r\n                      <label className=\"form-label\">سعر المنتج بالدينار</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"سعر المنتج بالدينار \"\r\n                        aria-label=\"First name\"\r\n                        name=\"product_price\"\r\n                        value={productPriceJOD}\r\n                        onChange={(e) => setProductPriceJOD(e.target.value)}\r\n                      />\r\n                    </CCol>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                {isArabic === 'true' && (\r\n                  <CCol sm={width < 768 ? 12 : null}>\r\n                    <label className=\"form-label\"> الوصف باللغة العربية</label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\" الوصف باللغة العربية \"\r\n                      aria-label=\"First name\"\r\n                      name=\"product_price\"\r\n                      value={descriptionAr}\r\n                      onChange={(e) => setDescriptionAr(e.target.value)}\r\n                    />\r\n                  </CCol>\r\n                )}\r\n                {isEnglish === 'true' && (\r\n                  <CCol sm={width < 768 ? 12 : null}>\r\n                    <label className=\"form-label\"> الوصف باللغة الإنجليزية</label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\" الوصف باللغة الإنجليزية \"\r\n                      aria-label=\"First name\"\r\n                      name=\"product_price\"\r\n                      value={descriptionEng}\r\n                      onChange={(e) => setDescriptionEng(e.target.value)}\r\n                    />\r\n                  </CCol>\r\n                )}\r\n                {isHebrew === 'true' && (\r\n                  <CCol sm={width < 768 ? 12 : null}>\r\n                    <label className=\"form-label\"> الوصف باللغة العبرية</label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\" الوصف باللغة العبرية \"\r\n                      aria-label=\"First name\"\r\n                      name=\"product_price\"\r\n                      value={descriptionHeb}\r\n                      onChange={(e) => setDescriptionHeb(e.target.value)}\r\n                    />\r\n                  </CCol>\r\n                )}\r\n              </div>\r\n              <div className=\"col\">\r\n                <label className=\"form-label\"> قسم المنتج</label>\r\n                <select\r\n                  className=\"form-select form-select-sm\"\r\n                  value={categoryID}\r\n                  onChange={(e) => setCategoryID(e.target.value)}\r\n                >\r\n                  {categories.map((item, index) => (\r\n                    <option value={item.id} key={item.id}>\r\n                      {item.name_ar}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"col\">\r\n                <label className=\"form-label\"> العلامة التجارية للمنتج</label>\r\n                <select\r\n                  className=\"form-select form-select-sm\"\r\n                  value={brandId}\r\n                  onChange={(e) => setBrandId(e.target.value)}\r\n                >\r\n                  <option value=\"\">اختر علامة تجارية ...</option>\r\n                  {brands.map((item, index) => (\r\n                    <option value={item.id} key={item.id}>\r\n                      {item.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" style={{ marginTop: '15px' }}>\r\n              <div className=\"col-12\">\r\n                <label className=\"form-label\">صورة المنتج</label>\r\n                <input\r\n                  className=\"form-control form-control-sm\"\r\n                  id=\"formFileSm\"\r\n                  type=\"file\"\r\n                  name=\"product_pic\"\r\n                  onChange={(e) => {\r\n                    setImage((prevImages) => [...prevImages, ...Array.from(e.target.files)])\r\n                  }}\r\n                  multiple\r\n                />\r\n                {image && image.length > 0 ? (\r\n                  <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                    {image.map((item, index) => (\r\n                      <div className=\"m-1\" style={{ position: 'relative' }} key={index}>\r\n                        {typeof item.url === 'string' && !item.url.endsWith('.mp4') ? (\r\n                          <div>\r\n                            <X\r\n                              size={15}\r\n                              style={{\r\n                                position: 'absolute',\r\n                                top: 15,\r\n                                right: 5,\r\n                                color: 'white',\r\n                                backgroundColor: '#ff3a31',\r\n                                borderRadius: '80%',\r\n                                cursor: 'pointer',\r\n                              }}\r\n                              onClick={() => startDelete(item.id, index)}\r\n                            />\r\n                            <img\r\n                              src={item.url}\r\n                              onError={(e) => {\r\n                                e.target.onError = null\r\n                                e.target.src = broken_image\r\n                              }}\r\n                              alt=\"product\"\r\n                              height=\"200\"\r\n                              style={{ margin: '10px' }}\r\n                            />\r\n                          </div>\r\n                        ) : typeof item.url !== 'string' ? (\r\n                          <div>\r\n                            <X\r\n                              size={15}\r\n                              style={{\r\n                                position: 'absolute',\r\n                                top: 15,\r\n                                right: 5,\r\n                                color: 'white',\r\n                                backgroundColor: '#ff3a31',\r\n                                borderRadius: '80%',\r\n                                cursor: 'pointer',\r\n                              }}\r\n                              onClick={() => setImage(image.filter((_, i) => i !== index))}\r\n                            />\r\n                            <img\r\n                              src={URL.createObjectURL(item)}\r\n                              onError={(e) => {\r\n                                e.target.onError = null\r\n                                e.target.src = broken_image\r\n                              }}\r\n                              alt=\"product\"\r\n                              height=\"200\"\r\n                              style={{ margin: '10px' }}\r\n                            />\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <label className=\"form-label\">فيديو المنتج</label>\r\n                <input\r\n                  className=\"form-control form-control-sm\"\r\n                  id=\"formFileSm\"\r\n                  type=\"file\"\r\n                  name=\"product_pic\"\r\n                  onChange={(e) => {\r\n                    setProductVideoEdited(e.target.files[0])\r\n                    setIsVideoEdited(true)\r\n                  }}\r\n                  multiple\r\n                />\r\n                {ProductVideoEdited && (\r\n                  <video width=\"250\" height=\"200\" controls>\r\n                    <source src={URL.createObjectURL(ProductVideoEdited)} type=\"video/mp4\" />\r\n                  </video>\r\n                )}\r\n                <>\r\n                  {image?.map((item, index) => (\r\n                    <div className=\"m-1\" style={{ position: 'relative' }} key={index}>\r\n                      {typeof item.url === 'string' && item.url.endsWith('.mp4') && (\r\n                        <div>\r\n                          <X\r\n                            size={15}\r\n                            style={{\r\n                              position: 'absolute',\r\n                              top: 5,\r\n                              right: -15,\r\n                              color: 'white',\r\n                              backgroundColor: '#ff3a31',\r\n                              borderRadius: '80%',\r\n                              cursor: 'pointer',\r\n                            }}\r\n                            onClick={() => startDelete(item.id, index)}\r\n                          />\r\n                          <video width=\"250\" height=\"200\" controls>\r\n                            <source src={item.url} type=\"video/mp4\" />\r\n                          </video>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </>\r\n              </div>\r\n              <CCol sm={width < 768 ? 12 : null}>\r\n                <label className=\"form-label\">نسبة الخصم</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"نسبة الخصم\"\r\n                  aria-label=\"First name\"\r\n                  name=\"product_price\"\r\n                  value={discountPercentage}\r\n                  onChange={(e) => setDiscountPercentage(e.target.value)}\r\n                />\r\n              </CCol>\r\n              <CCol md={12}>\r\n                <CFormCheck\r\n                  className=\"customCheckbox\"\r\n                  type=\"checkbox\"\r\n                  id=\"isOffer\"\r\n                  reverse\r\n                  label=\"إضافة المنتج الى العروض\"\r\n                  checked={isOffer === 'true'}\r\n                  onChange={() => {\r\n                    console.log(!isOffer)\r\n                    if (isOffer === 'true') setIsOffer('false')\r\n                    else setIsOffer('true')\r\n                  }}\r\n                />\r\n              </CCol>\r\n              <>\r\n                {colors.length < 1 ? (\r\n                  <CCol md={12}>\r\n                    <CFormCheck\r\n                      className=\"customCheckbox\"\r\n                      type=\"checkbox\"\r\n                      id=\"multiSize\"\r\n                      reverse\r\n                      label=\"هل المنتج متعدد الألوان؟\"\r\n                      checked={isMultipleColors}\r\n                      onChange={() => {\r\n                        setIsMultipleColors(!isMultipleColors)\r\n                      }}\r\n                    />\r\n                  </CCol>\r\n                ) : null}\r\n              </>\r\n              {isMultipleColors || colors.length > 0 ? (\r\n                <>\r\n                  <Chrome\r\n                    style={{ marginLeft: 20 }}\r\n                    color={hex}\r\n                    onChange={(color) => {\r\n                      setHex(color.hex)\r\n                    }}\r\n                  />\r\n                  <CCol md={6}>\r\n                    <div className=\"mb-3\">\r\n                      <CFormInput\r\n                        label=\"صورة اللون\"\r\n                        type=\"file\"\r\n                        id=\"productPic\"\r\n                        onChange={(e) => {\r\n                          setColorImage(e.target.files[0])\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    {colorImage && (\r\n                      <div className=\"m-1\" style={{ position: 'relative', width: '255px' }}>\r\n                        <X\r\n                          size={15}\r\n                          style={{\r\n                            position: 'absolute',\r\n                            top: 15,\r\n                            left: 0,\r\n                            color: 'white',\r\n                            backgroundColor: '#ff3a31',\r\n                            borderRadius: '80%',\r\n                            cursor: 'pointer',\r\n                          }}\r\n                          onClick={() => {\r\n                            setColorImage('')\r\n                          }}\r\n                        />\r\n                        <img\r\n                          src={colorImage ? URL.createObjectURL(colorImage) : ''}\r\n                          // width=\"250\"\r\n                          height=\"200\"\r\n                          alt={`colorImage`}\r\n                          style={{ margin: '10px' }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <CButton\r\n                      onClick={addColor}\r\n                      disabled={colorImage === undefined || hex === ''}\r\n                      style={{\r\n                        width: '200px',\r\n                        backgroundColor: Theme.primaryLight,\r\n                        border: 'none',\r\n                      }}\r\n                    >\r\n                      أضف اللون\r\n                    </CButton>\r\n                  </CCol>\r\n                  <CCol md={3}>\r\n                    <label className=\"form-label\">رمز اللون</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"رمز اللون\"\r\n                      aria-label=\"color code\"\r\n                      name=\"color_code\"\r\n                      value={colorCode}\r\n                      onChange={(e) => setColorCode(e.target.value)}\r\n                    />\r\n                  </CCol>\r\n                  <div\r\n                    style={{\r\n                      width: '100%',\r\n                      padding: 5,\r\n                    }}\r\n                    className=\"d-flex flex-wrap\"\r\n                  >\r\n                    {colors.map((color, index) => (\r\n                      <div\r\n                        key={index}\r\n                        style={{\r\n                          width: 75,\r\n                          height: 130,\r\n                          borderRadius: 5,\r\n                          boxShadow: '0px 2px 3px #c8c8c8',\r\n                          padding: 5,\r\n                          marginLeft: 5,\r\n                        }}\r\n                      >\r\n                        {color.color_image ? (\r\n                          <img\r\n                            src={\r\n                              typeof color.color_image === 'string'\r\n                                ? color.color_image\r\n                                : URL.createObjectURL(color.color_image)\r\n                            }\r\n                            onError={(e) => {\r\n                              e.target.onError = null\r\n                              e.target.src = broken_image\r\n                            }}\r\n                            width=\"50\"\r\n                            height=\"50\"\r\n                            alt={`colorImage`}\r\n                            style={{ margin: '10px' }}\r\n                          />\r\n                        ) : (\r\n                          <div\r\n                            style={{\r\n                              width: 50,\r\n                              height: 50,\r\n                              backgroundColor: color.color,\r\n                              margin: 10,\r\n                              borderRadius: 5,\r\n                            }}\r\n                          />\r\n                        )}\r\n                        <p style={{ textAlign: 'center', margin: 0 }}>{color.color_code}</p>\r\n                        <div className=\"d-flex flex-row justify-content-around align-items-center mt-1\">\r\n                          <Trash\r\n                            size={20}\r\n                            color={Theme.primaryRed}\r\n                            cursor=\"pointer\"\r\n                            onClick={() => {\r\n                              if (typeof color.color_image === 'string') {\r\n                                startDeleteColor(color.id, index)\r\n                              } else {\r\n                                deleteColor(index)\r\n                              }\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              ) : null}\r\n              <AppCard>\r\n                <CCardBody>\r\n                  <div style={{ marginTop: '15px' }}>\r\n                    {sizes.map((size, index) => (\r\n                      <CRow\r\n                        key={index}\r\n                        style={{\r\n                          borderRadius: '5px',\r\n                          padding: '10px',\r\n                          marginBottom: '10px',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          boxShadow: '0px 2px 3px #c8c8c8',\r\n                        }}\r\n                      >\r\n                        <CCol style={{ marginLeft: '0.5rem' }} sm={width < 768 ? 12 : 5}>\r\n                          <CFormInput\r\n                            type=\"text\"\r\n                            label=\"الحجم\"\r\n                            feedbackInvalid=\"الحجم مطلوب\"\r\n                            placeholder=\"الحجم\"\r\n                            value={size.size}\r\n                            required\r\n                            onChange={(event) => handleSizeChange(index, 'size', event)}\r\n                          />\r\n                        </CCol>\r\n                        {isNIS === 'true' && (\r\n                          <CCol style={{ marginLeft: '0.5rem' }} sm={width < 768 ? 12 : null}>\r\n                            <CFormInput\r\n                              type=\"text\"\r\n                              label=\"السعر بالشيكل\"\r\n                              feedbackInvalid=\"السعر بالشيكل مطلوب\"\r\n                              placeholder=\"السعر بالشيكل\"\r\n                              value={size.size_price_nis}\r\n                              required\r\n                              onChange={(event) => handleSizeChange(index, 'size_price_nis', event)}\r\n                            />\r\n                          </CCol>\r\n                        )}\r\n                        {isUSD === 'true' && (\r\n                          <CCol style={{ marginLeft: '0.5rem' }} sm={width < 768 ? 12 : null}>\r\n                            <CFormInput\r\n                              type=\"text\"\r\n                              label=\"السعر بالدولار\"\r\n                              feedbackInvalid=\"السعر بالدولار مطلوب\"\r\n                              placeholder=\"السعر بالدولار\"\r\n                              value={size.size_price_usd}\r\n                              required\r\n                              onChange={(event) => handleSizeChange(index, 'size_price_usd', event)}\r\n                            />\r\n                          </CCol>\r\n                        )}\r\n                        <CCol>\r\n                          <div className=\"d-grid gap-2 col-4 mx-auto\">\r\n                            <br />\r\n                            <AppTooltip type=\"delete\" onClick={() => deleteSize(index)} />\r\n                          </div>\r\n                        </CCol>\r\n                      </CRow>\r\n                    ))}\r\n                    <CButton\r\n                      onClick={addSize}\r\n                      style={{\r\n                        width: '200px',\r\n                        backgroundColor: Theme.primaryLight,\r\n                        border: 'none',\r\n                        marginTop: 10,\r\n                      }}\r\n                    >\r\n                      أضف الحجم\r\n                    </CButton>\r\n                  </div>\r\n                </CCardBody>\r\n              </AppCard>\r\n            </div>\r\n\r\n            {loading ? (\r\n              <Spinner animation=\"border\" role=\"status\" style={{ margin: '10px' }}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            ) : (\r\n              <div className=\"d-flex gap-2\">\r\n                <CButton\r\n                  style={{\r\n                    width: '200px',\r\n                    marginTop: '30px',\r\n                    backgroundColor: Theme.primary1,\r\n                    border: 'none',\r\n                  }}\r\n                  type=\"submit\"\r\n                  onClick={saveAndStay}\r\n                >\r\n                  <span style={{ fontWeight: 'bolder' }}>حفظ</span>\r\n                </CButton>\r\n                <CButton\r\n                  style={{\r\n                    width: '200px',\r\n                    marginTop: '30px',\r\n                    backgroundColor: Theme.primary1,\r\n                    border: 'none',\r\n                  }}\r\n                  type=\"submit\"\r\n                  onClick={saveAndExit}\r\n                >\r\n                  <span style={{ fontWeight: 'bolder' }}>حفظ وخروج</span>\r\n                </CButton>\r\n              </div>\r\n            )}\r\n            <CAlert color=\"danger\" dismissible visible={visible} onClose={() => setVisible(false)}>\r\n              حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n            </CAlert>\r\n            <AppDialog\r\n              title=\"هل أنت متأكد من رغبتك بحذف صورة المنتج التي تم تحديدها ؟\"\r\n              open={showDeleteImageDialog}\r\n              onClose={cancelDeleteImage}\r\n              actionCancel={cancelDeleteImage}\r\n              actionExecute={DeleteProductImage}\r\n              deleteDialog={true}\r\n            />\r\n            <AppDialog\r\n              title=\"هل أنت متأكد من رغبتك بحذف لون المنتج الذي تم تحديده ؟\"\r\n              open={showColorDialog}\r\n              onClose={cancelDeleteColor}\r\n              actionCancel={cancelDeleteColor}\r\n              actionExecute={deleteProductColor}\r\n              deleteDialog={true}\r\n            />\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default EditProduct\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyDelete, notifyEdit, notifyFailed } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useCategories } from '../categories/useCategories'\r\nimport { useLanguage } from '../general/useLanguage'\r\nimport { useBrands } from '../brands/useBrands'\r\n\r\nexport const useProductEditing = (productId, item) => {\r\n  const {\r\n    name_ar,\r\n    name_en,\r\n    name_he,\r\n    category_id,\r\n    description_ar,\r\n    description_en,\r\n    description_he,\r\n    price_nis,\r\n    price_usd,\r\n    price_jod,\r\n    images,\r\n    product_sizes,\r\n    product_colors,\r\n    available,\r\n    brand_id,\r\n    is_offer,\r\n    discount_percentage,\r\n  } = item\r\n  const [productNameAr, setProductNameAr] = useState('')\r\n  const [productNameEng, setProductNameEng] = useState('')\r\n  const [productNameHeb, setProductNameHeb] = useState('')\r\n  const [productPriceNIS, setProductPriceNIS] = useState('0')\r\n  const [productPriceUSD, setProductPriceUSD] = useState('0')\r\n  const [productPriceJOD, setProductPriceJOD] = useState('0')\r\n  const [categoryID, setCategoryID] = useState('')\r\n  const [descriptionAr, setDescriptionAr] = useState('')\r\n  const [descriptionEng, setDescriptionEng] = useState('')\r\n  const [descriptionHeb, setDescriptionHeb] = useState('')\r\n  const [image, setImage] = useState([])\r\n  const [imagesURL, setImagesURL] = useState(images)\r\n  const [loading, setLoading] = useState(false)\r\n  const [isAvailable, setIsAvailable] = useState('')\r\n  const { categories } = useCategories()\r\n  const { brands } = useBrands()\r\n  const [brandId, setBrandId] = useState(0)\r\n  const [visible, setVisible] = useState(false)\r\n  const [sizes, setSizes] = useState([])\r\n  const [colors, setColors] = useState([])\r\n  const [hex, setHex] = useState('')\r\n  const [colorImage, setColorImage] = useState()\r\n  const [colorCode, setColorCode] = useState()\r\n  const [ProductVideoEdited, setProductVideoEdited] = useState()\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  const [showDeleteImageDialog, setShowDeleteImageDialog] = useState(false)\r\n  const [deletedImageId, setDeletedImageId] = useState()\r\n  const [deletedImageIndex, setDeletedImageIndex] = useState()\r\n  const [isVideoEdited, setIsVideoEdited] = useState(false)\r\n  const [isMultipleSizes, setIsMultipleSizes] = useState(false)\r\n  const [isMultipleColors, setIsMultipleColors] = useState(false)\r\n  const [showColorDialog, setShowColorDialog] = useState(false)\r\n  const [deletedColorId, setDeletedColorId] = useState()\r\n  const [deletedColorIndex, setDeletedColorIndex] = useState()\r\n  const [newColors, setNewColors] = useState([])\r\n  const [isOffer, setIsOffer] = useState('false')\r\n  const [discountPercentage, setDiscountPercentage] = useState(0)\r\n\r\n  const navigate = useNavigate()\r\n  const getProduct = async () => {\r\n    const url = `${API_ROUTE}/products/${productId}`\r\n    const response = await fetch(url)\r\n    const item = await response.json()\r\n    setProductNameAr(item['product']['name_ar'])\r\n    setProductNameEng(item['product']['name_en'])\r\n    setProductNameHeb(item['product']['name_he'])\r\n    setProductPriceNIS(item['product']['price_nis'])\r\n    setProductPriceUSD(item['product']['price_usd'])\r\n    setProductPriceJOD(item['product']['price_jod'])\r\n    setImage(item['product']['images'])\r\n    setCategoryID(item['product']['category_id'])\r\n    setDescriptionAr(item['product']['description_ar'])\r\n    setDescriptionEng(item['product']['description_en'])\r\n    setDescriptionHeb(item['product']['description_he'])\r\n    setSizes(item['product']['product_sizes'])\r\n    setColors(item['product']['product_colors'])\r\n    setIsAvailable(item['product']['available'])\r\n    setBrandId(item['product']['brand_id'] || 0)\r\n    setIsOffer(item['product']['is_offer'])\r\n    setDiscountPercentage(item['product']['discount_percentage'])\r\n    if (colors.length > 0) {\r\n      setIsMultipleColors(true)\r\n    }\r\n    if (sizes.length > 0) {\r\n      setIsMultipleSizes(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProduct()\r\n  }, [])\r\n\r\n  const startDelete = (id, index) => {\r\n    setShowDeleteImageDialog(true)\r\n    setDeletedImageIndex(index)\r\n    setDeletedImageId(id)\r\n  }\r\n\r\n  const cancelDeleteImage = () => {\r\n    setShowDeleteImageDialog(false)\r\n    setDeletedImageIndex(null)\r\n    setDeletedImageId(null)\r\n  }\r\n\r\n  const DeleteProductImage = async () => {\r\n    try {\r\n      await axios.delete(`${API_ROUTE}/product-image/${deletedImageId}`)\r\n      notifyDelete()\r\n    } catch (error) {\r\n      console.error(error)\r\n      // notifyFailed()\r\n    } finally {\r\n      setShowDeleteImageDialog(false)\r\n      setImage(image.filter((item, index) => index !== deletedImageIndex))\r\n    }\r\n  }\r\n\r\n  const startDeleteColor = (id, index) => {\r\n    setShowColorDialog(true)\r\n    setDeletedColorId(id)\r\n    setDeletedColorIndex(index)\r\n  }\r\n\r\n  const cancelDeleteColor = () => {\r\n    setShowColorDialog(false)\r\n    setDeletedColorId(null)\r\n    setDeletedColorIndex(null)\r\n  }\r\n\r\n  const deleteProductColor = async () => {\r\n    try {\r\n      await axios.delete(`${API_ROUTE}/product-color/${deletedColorId}`)\r\n      notifyDelete()\r\n    } catch (error) {\r\n      console.error(error)\r\n      // notifyFailed()\r\n    } finally {\r\n      setShowColorDialog(false)\r\n      const colorsAfterDelete = colors.filter(\r\n        (color, colorIndex) => colorIndex !== deletedColorIndex,\r\n      )\r\n      setColors(colorsAfterDelete)\r\n    }\r\n  }\r\n\r\n  const update = () => {\r\n    setLoading(true)\r\n    const formData = new FormData()\r\n    {\r\n      isArabic === 'true'\r\n        ? formData.append('name_ar', productNameAr)\r\n        : formData.append('name_ar', 'empty')\r\n    }\r\n    {\r\n      isEnglish === 'true'\r\n        ? formData.append('name_en', productNameEng)\r\n        : formData.append('name_en', 'empty')\r\n    }\r\n    {\r\n      isHebrew === 'true'\r\n        ? formData.append('name_he', productNameHeb)\r\n        : formData.append('name_he', 'empty')\r\n    }\r\n    {\r\n      isArabic === 'true'\r\n        ? formData.append('description_ar', descriptionAr)\r\n        : formData.append('description_ar', 'empty')\r\n    }\r\n    {\r\n      isEnglish === 'true'\r\n        ? formData.append('description_en', descriptionEng)\r\n        : formData.append('description_en', 'empty')\r\n    }\r\n    {\r\n      isHebrew === 'true'\r\n        ? formData.append('description_he', descriptionHeb)\r\n        : formData.append('description_he', 'empty')\r\n    }\r\n    formData.append('price_nis', productPriceNIS)\r\n    formData.append('price_usd', productPriceUSD)\r\n    formData.append('price_jod', productPriceJOD)\r\n    formData.append('category_id', categoryID)\r\n    formData.append('available', isAvailable)\r\n    formData.append('brand_id', brandId)\r\n    formData.append('is_offer', isOffer)\r\n    formData.append('discount_percentage', discountPercentage)\r\n    if (sizes.length > 0) {\r\n      sizes.forEach((size, index) => {\r\n        formData.append(`size[${index}]`, size.size)\r\n        formData.append(`size_price_nis[${index}]`, size.size_price_nis)\r\n        formData.append(`size_price_usd[${index}]`, size.size_price_usd)\r\n        // formData.append(`size_price_jod[${index}]`. size.size_price_jod)\r\n      })\r\n    }\r\n    // console.log(image)\r\n    image.forEach((img, index) => {\r\n      if (isVideoEdited && img.type === 'video') {\r\n      } else {\r\n        formData.append(`image[${index}]`, img)\r\n        if (index === image.length - 1 && isVideoEdited) {\r\n          formData.append(`image[${index + 1}]`, ProductVideoEdited)\r\n        }\r\n      }\r\n    })\r\n    console.log(colors)\r\n    if (newColors.length > 0) {\r\n      newColors.forEach((color, index) => {\r\n        formData.append(`color[${index}]`, color.color)\r\n        formData.append(`color_image[${index}]`, color.color_image)\r\n        formData.append(`color_code[${index}]`, color.color_code)\r\n      })\r\n    }\r\n    axios\r\n      .post(`${API_ROUTE}/products/${productId}?_method=PUT`, formData)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        notifyEdit()\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        setLoading(false)\r\n        setVisible(true)\r\n      })\r\n  }\r\n\r\n  const saveAndExit = () => {\r\n    update()\r\n    setTimeout(() => {\r\n      navigate('/products')\r\n    }, 500)\r\n  }\r\n\r\n  const saveAndStay = () => {\r\n    update()\r\n    setTimeout(() => {\r\n      getProduct()\r\n    }, 500)\r\n  }\r\n\r\n  const handleSizeChange = (index, field, event) => {\r\n    const newSize = [...sizes]\r\n    newSize[index][field] = event.target.value\r\n    setSizes(newSize)\r\n  }\r\n  const addSize = () => {\r\n    setSizes([...sizes, { size: '', priceNIS: '' }])\r\n  }\r\n\r\n  const deleteSize = (index) => {\r\n    const newSize = sizes.filter((size, sizeIndex) => sizeIndex !== index)\r\n    setSizes(newSize)\r\n  }\r\n\r\n  const addColor = () => {\r\n    setColors([...colors, { color: hex, color_image: colorImage, color_code: colorCode }])\r\n    setNewColors([...newColors, { color: hex, color_image: colorImage, color_code: colorCode }])\r\n    setHex('')\r\n    setColorCode('')\r\n    setColorImage('')\r\n    console.log(colors)\r\n    console.log('newColors', newColors)\r\n  }\r\n\r\n  const deleteColor = (index) => {\r\n    const colorsAfterDelete = newColors.filter((color, colorIndex) => colorIndex !== index)\r\n    setColors(colorsAfterDelete)\r\n    setNewColors(colorsAfterDelete)\r\n  }\r\n  return {\r\n    productNameAr,\r\n    productNameEng,\r\n    productNameHeb,\r\n    productPriceNIS,\r\n    setProductPriceNIS,\r\n    productPriceUSD,\r\n    productPriceJOD,\r\n    setProductPriceJOD,\r\n    setProductPriceUSD,\r\n    categories,\r\n    categoryID,\r\n    descriptionAr,\r\n    descriptionEng,\r\n    descriptionHeb,\r\n    image,\r\n    loading,\r\n    isChecked: isAvailable,\r\n    update,\r\n    setProductNameAr,\r\n    setProductNameEng,\r\n    setProductNameHeb,\r\n    setImage,\r\n    setCategoryID,\r\n    setDescriptionAr,\r\n    setDescriptionEng,\r\n    setDescriptionHeb,\r\n    setIsChecked: setIsAvailable,\r\n    visible,\r\n    setVisible,\r\n    sizes,\r\n    handleSizeChange,\r\n    addSize,\r\n    deleteSize,\r\n    colors,\r\n    hex,\r\n    setHex,\r\n    colorImage,\r\n    setColorImage,\r\n    colorCode,\r\n    setColorCode,\r\n    addColor,\r\n    deleteColor,\r\n    imagesURL,\r\n    setImagesURL,\r\n    ProductVideoEdited,\r\n    setProductVideoEdited,\r\n    showDeleteImageDialog,\r\n    setShowDeleteImageDialog,\r\n    DeleteProductImage,\r\n    cancelDeleteImage,\r\n    startDelete,\r\n    isVideoEdited,\r\n    setIsVideoEdited,\r\n    isMultipleSizes,\r\n    isMultipleColors,\r\n    setIsMultipleColors,\r\n    setIsMultipleSizes,\r\n    showColorDialog,\r\n    setShowColorDialog,\r\n    startDeleteColor,\r\n    cancelDeleteColor,\r\n    deleteProductColor,\r\n    saveAndExit,\r\n    brands,\r\n    brandId,\r\n    setBrandId,\r\n    discountPercentage,\r\n    setDiscountPercentage,\r\n    isOffer,\r\n    setIsOffer,\r\n    saveAndStay,\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCarousel,\r\n  CCarouselItem,\r\n  CCol,\r\n  CImage,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CRow,\r\n  CTooltip,\r\n} from '@coreui/react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { Theme } from 'src/constants/colors'\r\nimport image from '../../assets/images/image.png'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport { useCurrency } from 'src/hooks/general/useCurrency'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { useCategories } from 'src/hooks/categories/useCategories'\r\n\r\nconst ViewProduct = () => {\r\n  const { state } = useLocation()\r\n  const item = state?.item\r\n\r\n  const {\r\n    name_ar,\r\n    name_en,\r\n    name_he,\r\n    description_ar,\r\n    description_en,\r\n    description_he,\r\n    price_nis,\r\n    price_usd,\r\n    price_jod,\r\n    images,\r\n    product_sizes,\r\n    product_colors,\r\n    category_id,\r\n  } = item\r\n\r\n  const { categories } = useCategories()\r\n\r\n  const category = categories.find((category) => category.id === category_id)\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  const { isJUD, isNIS, isUSD } = useCurrency()\r\n  const [selectedLang, setSelectedLang] = useState('ar')\r\n  const { width } = useWidth()\r\n\r\n  if (!item) {\r\n    return <div>Product not found</div>\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"تفاصيل المنتج\" />\r\n        <AppBreadcrumb />\r\n        <CNav variant=\"underline\" className=\"justify-content-center m-3\">\r\n          {isArabic === 'true' && (\r\n            <CNavItem>\r\n              <CNavLink\r\n                style={\r\n                  isArabic === 'false'\r\n                    ? null\r\n                    : selectedLang === 'ar'\r\n                    ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                    : { color: Theme.primaryLight }\r\n                }\r\n                active={selectedLang === 'ar'}\r\n                disabled={isArabic === 'false'}\r\n                onClick={() => {\r\n                  setSelectedLang('ar')\r\n                }}\r\n              >\r\n                باللغة العربية\r\n              </CNavLink>\r\n            </CNavItem>\r\n          )}\r\n          {isEnglish === 'true' && (\r\n            <CNavItem>\r\n              <CNavLink\r\n                style={\r\n                  isEnglish === 'false'\r\n                    ? null\r\n                    : selectedLang === 'en'\r\n                    ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                    : { color: Theme.primaryLight }\r\n                }\r\n                active={selectedLang === 'en'}\r\n                disabled={isEnglish === 'false'}\r\n                onClick={() => {\r\n                  setSelectedLang('en')\r\n                }}\r\n              >\r\n                {' '}\r\n                باللغة الانجليزية\r\n              </CNavLink>\r\n            </CNavItem>\r\n          )}\r\n          {isHebrew === 'true' && (\r\n            <CNavItem>\r\n              <CNavLink\r\n                style={\r\n                  isHebrew === 'false'\r\n                    ? null\r\n                    : selectedLang === 'he'\r\n                    ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                    : { color: Theme.primaryLight }\r\n                }\r\n                active={selectedLang === 'he'}\r\n                disabled={isHebrew === 'false'}\r\n                onClick={() => {\r\n                  setSelectedLang('he')\r\n                }}\r\n              >\r\n                {' '}\r\n                باللغة العبرية\r\n              </CNavLink>\r\n            </CNavItem>\r\n          )}\r\n        </CNav>\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"row\" style={{ marginTop: '15px' }}>\r\n              <CCol sm={width < 768 ? 12 : 6}>\r\n                <CCarousel\r\n                  controls\r\n                  indicators\r\n                  dark\r\n                  style={{\r\n                    height: '80%',\r\n                    width: '100%',\r\n                    backgroundColor: Theme.base,\r\n                    boxShadow: '0px 2px 3px #c8c8c8',\r\n                    paddingTop: '5rem',\r\n                    paddingBottom: '5rem',\r\n                  }}\r\n                  className=\"d-flex align-items-center rounded\"\r\n                >\r\n                  {images?.map((img, index) => (\r\n                    <CCarouselItem key={index}>\r\n                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                        <CImage\r\n                          className=\"d-block w-75 h-75\"\r\n                          src={img.url || image}\r\n                          onError={(e) => {\r\n                            e.target.onError = null\r\n                            e.target.src = image\r\n                          }}\r\n                          style={{ borderRadius: 5 }}\r\n                        />\r\n                      </div>\r\n                    </CCarouselItem>\r\n                  ))}\r\n                </CCarousel>\r\n              </CCol>\r\n              <CCol sm={width < 768 ? 12 : 6}>\r\n                {category && (\r\n                  <div className=\"float-sm-start\">\r\n                    <CBadge color=\"light\" shape=\"rounded-pill\">\r\n                      <span\r\n                        style={{\r\n                          display: 'flex',\r\n                          justifyContent: 'center',\r\n                          alignItems: 'center',\r\n                          color: 'black',\r\n                        }}\r\n                      >\r\n                        <CImage\r\n                          className=\"d-block\"\r\n                          src={category.image}\r\n                          style={{ borderRadius: 5, width: 25, height: 25, display: 'inline' }}\r\n                        />\r\n                        {category.name_ar}\r\n                      </span>\r\n                    </CBadge>\r\n                  </div>\r\n                )}\r\n\r\n                {selectedLang === 'ar' && (\r\n                  <h2 style={{ color: Theme.primary1, fontWeight: 'bold' }}>{name_ar}</h2>\r\n                )}\r\n                {selectedLang === 'en' && (\r\n                  <h2 style={{ color: Theme.primary1, fontWeight: 'bold' }}>{name_en}</h2>\r\n                )}\r\n                {selectedLang === 'he' && (\r\n                  <h2 style={{ color: Theme.primary1, fontWeight: 'bold' }}>{name_he}</h2>\r\n                )}\r\n                <div className=\"d-flex\">\r\n                  {isNIS === 'true' && (\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: Theme.base,\r\n                        borderRadius: 5,\r\n                        padding: '0.5rem',\r\n                        margin: 5,\r\n                        boxShadow: '0px 1px 2px #c8c8c8',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                      }}\r\n                    >\r\n                      <h4 style={{ margin: 0 }}> {price_nis} ₪</h4>\r\n                    </div>\r\n                  )}\r\n                  {isUSD === 'true' && (\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: Theme.base,\r\n                        borderRadius: 5,\r\n                        padding: '0.5rem',\r\n                        margin: 5,\r\n                        boxShadow: '0px 1px 2px #c8c8c8',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                      }}\r\n                    >\r\n                      <h4 style={{ margin: 0 }}> {price_usd} $</h4>\r\n                    </div>\r\n                  )}\r\n                  {isJUD === 'true' && (\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: Theme.base,\r\n                        borderRadius: 5,\r\n                        padding: '0.5rem',\r\n                        margin: 5,\r\n                        boxShadow: '0px 1px 2px #c8c8c8',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                      }}\r\n                    >\r\n                      <h4 style={{ margin: 0 }}> {price_jod} د.أ</h4>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {selectedLang === 'ar' && <p>{description_ar}</p>}\r\n                {selectedLang === 'en' && <p>{description_en}</p>}\r\n                {selectedLang === 'he' && <p>{description_he}</p>}\r\n                {product_sizes?.length > 0 && (\r\n                  <CCard className=\"mb-4\">\r\n                    <CCardBody>\r\n                      <div style={{ marginTop: '15px' }}>\r\n                        <p>الأحجام</p>\r\n                        {product_sizes.map((size, index) => (\r\n                          <CTooltip content={size.size_price_nis} trigger={['hover']} key={index}>\r\n                            <span className=\"d-inline-block\" tabIndex={0}>\r\n                              <CButton\r\n                                color=\"secondary\"\r\n                                shape=\"rounded-pill\"\r\n                                style={{ marginLeft: 3 }}\r\n                              >\r\n                                {size.size}\r\n                              </CButton>\r\n                            </span>\r\n                          </CTooltip>\r\n                        ))}\r\n                      </div>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                )}\r\n\r\n                {product_colors?.length > 0 && (\r\n                  <CCard className=\"mb-4\">\r\n                    <CCardBody>\r\n                      <p>الألوان</p>\r\n                      <div style={{ marginTop: '15px' }} className=\"d-flex\">\r\n                        {product_colors.map((color, index) => (\r\n                          <>\r\n                            {color.color_image ? (\r\n                              <img\r\n                                src={color.color_image ? color.color_image : ''}\r\n                                onError={(e) => {\r\n                                  e.target.onError = null\r\n                                  e.target.src = image\r\n                                }}\r\n                                width=\"50\"\r\n                                height=\"50\"\r\n                                alt={`colorImage`}\r\n                                style={{ margin: '10px' }}\r\n                              />\r\n                            ) : (\r\n                              <div\r\n                                key={index}\r\n                                style={{\r\n                                  width: 50,\r\n                                  height: 50,\r\n                                  backgroundColor: color.color,\r\n                                  margin: 10,\r\n                                  borderRadius: 5,\r\n                                  border: '1px solid gray',\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </>\r\n                        ))}\r\n                      </div>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                )}\r\n              </CCol>\r\n            </div>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default ViewProduct\r\n","import { useState, useEffect } from 'react'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { useDelete } from '../general/useDelete'\r\n\r\nexport const useSocials = () => {\r\n  const [socials, setSocials] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const getSocials = async () => {\r\n    const response = await fetch(`${API_ROUTE}/socials`)\r\n    const data = await response.json()\r\n    // eslint-disable-next-line dot-notation\r\n    setSocials(data['socials'])\r\n    setLoading(false)\r\n  }\r\n\r\n  const { showDialog, confirmDelete, executeDelete, cancelDelete } = useDelete(\r\n    'socials',\r\n    getSocials,\r\n  )\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getSocials()\r\n  }, [])\r\n\r\n  return {\r\n    socials,\r\n    loading,\r\n    showDialog,\r\n    executeDelete,\r\n    confirmDelete,\r\n    cancelDelete,\r\n  }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport {\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { FacebookLogo } from 'phosphor-react'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useSocials } from 'src/hooks/Socials/useSocials'\r\nimport AppDialog from 'src/components/AppDialog'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport AppTooltip from 'src/components/Tooltip'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport EmptyPage from 'src/components/EmptyPage'\r\n\r\nconst Socials = () => {\r\n  const navigate = useNavigate()\r\n  const { socials, loading, showDialog, executeDelete, confirmDelete, cancelDelete } = useSocials()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"مواقع التواصل الاجتماعي\" icon={<FacebookLogo size={25} />} />\r\n        <AppBreadcrumb />\r\n        <div>\r\n          {loading ? (\r\n            <div className=\"h-100 w-100 d-flex justify-content-center align-items-center py-5 my-5\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {socials.length > 0 ? (\r\n                <div\r\n                  className=\"rounded my-3\"\r\n                  style={{ backgroundColor: Theme.white, boxShadow: '0px 2px 3px #c8c8c8' }}\r\n                >\r\n                  <CTable align=\"middle\" className=\"mb-3\" hover responsive striped>\r\n                    <CTableHead color=\"light\">\r\n                      <CTableRow>\r\n                        <CTableHeaderCell className=\"text-center\">الاسم</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">الرابط</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\"> الإجراءات </CTableHeaderCell>\r\n                      </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                      {socials.map((item, index) => (\r\n                        <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>{item.name}</div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>{item.url}</div>\r\n                          </CTableDataCell>\r\n\r\n                          <CTableDataCell>\r\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                              <AppTooltip type=\"delete\" onClick={() => confirmDelete(item.id)} />\r\n                              <AppTooltip\r\n                                type=\"edit\"\r\n                                onClick={() =>\r\n                                  navigate(`/edit_social/${item.id}`, { state: { item } })\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </CTableDataCell>\r\n                        </CTableRow>\r\n                      ))}\r\n                    </CTableBody>\r\n                  </CTable>\r\n                </div>\r\n              ) : (\r\n                <EmptyPage emptyItems=\"مواقع تواصل اجتماعي\" />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CCol>\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف هذا الموقع ؟\"\r\n        open={showDialog}\r\n        onClose={cancelDelete}\r\n        actionCancel={cancelDelete}\r\n        actionExecute={executeDelete}\r\n        deleteDialog={true}\r\n      />\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Socials\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyEdit } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport const useSocialEditing = (socialId, item) => {\r\n  const { name, url } = item\r\n  const [socialName, setName] = useState('')\r\n  const [sotionUrl, setUrl] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const navigate = useNavigate()\r\n  const getSocail = async () => {\r\n    setName(name)\r\n    setUrl(url)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSocail()\r\n  }, [])\r\n\r\n  const update = () => {\r\n    setLoading(true)\r\n\r\n    const formData = new FormData()\r\n    formData.append('name', socialName)\r\n    formData.append('url', sotionUrl)\r\n\r\n    axios\r\n      .post(`${API_ROUTE}/socials/${socialId}?_method=PUT`, formData)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        notifyEdit()\r\n        setTimeout(() => {\r\n          navigate('/socials')\r\n        }, 500)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        setLoading(false)\r\n        setVisible(true)\r\n      })\r\n  }\r\n  return {\r\n    name: socialName,\r\n    setName,\r\n    url: sotionUrl,\r\n    setUrl,\r\n    loading,\r\n    update,\r\n    visible,\r\n    setVisible,\r\n  }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React, {  } from 'react'\r\nimport { CAlert, CButton, CCardBody, CCol, CRow } from '@coreui/react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useSocialEditing } from 'src/hooks/Socials/useSocialEditing'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { NotePencil } from 'phosphor-react'\r\nimport { Theme } from 'src/constants/colors'\r\nconst EditSocial = () => {\r\n  const params = useParams()\r\n  const { state } = useLocation()\r\n  const item = state?.item\r\n  const {\r\n    name,\r\n    setName,\r\n    url,\r\n    setUrl,\r\n    loading,\r\n    update,\r\n    visible,\r\n    setVisible\r\n  } = useSocialEditing(params.id, item)\r\n  if (!item) {\r\n    return <div>Product not found</div>\r\n  }\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n      <PageTitle title='تعديل مواقع التواصل الاجتماعي' icon={<NotePencil size={25} />}/>\r\n      <AppBreadcrumb/>\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label className=\"form-label\"> اسم الموقع</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"اسم الموقع \"\r\n                    aria-label=\"First name\"\r\n                    name=\"user_name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label className=\"form-label\"> رابط الموقع</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"الرابط\"\r\n                    aria-label=\"First name\"\r\n                    name=\"address\"\r\n                    value={url}\r\n                    onChange={(e) => setUrl(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {loading ? (\r\n              <Spinner animation=\"border\" role=\"status\" style={{ margin: '10px' }}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            ) : (\r\n              <CButton\r\n                style={{\r\n                  width: '200px',\r\n                  marginTop: '30px',\r\n                  backgroundColor: Theme.primary1,\r\n                  border: 'none',\r\n                }}\r\n                type=\"submit\"\r\n                onClick={update}\r\n              >\r\n                <span style={{ fontWeight: 'bolder' }}>حفظ</span>\r\n              </CButton>\r\n            )}\r\n            <CAlert color=\"danger\" dismissible visible={visible} onClose={() => setVisible(false)}>\r\n              حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n            </CAlert>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default EditSocial\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CFormCheck,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CPagination,\r\n  CPaginationItem,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { CheckSquare, ShoppingCartSimple } from 'phosphor-react'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport { useOrders } from 'src/hooks/orders/useOrder'\r\nimport AppDialog from 'src/components/AppDialog'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport EmptyPage from 'src/components/EmptyPage'\r\nimport AppTooltip from 'src/components/Tooltip'\r\nimport Excel from 'exceljs'\r\nimport { saveAs } from 'file-saver'\r\n\r\nconst columns = [\r\n  {\r\n    header: 'الرقم التسلسلي',\r\n    key: 'id',\r\n  },\r\n  { header: 'اسم الزبون', key: 'customer_name' },\r\n  {\r\n    header: 'المدينة',\r\n    key: 'city',\r\n  },\r\n  {\r\n    header: 'المنطقة',\r\n    key: 'area',\r\n  },\r\n  {\r\n    header: 'بالقرب من',\r\n    key: 'near',\r\n  },\r\n  {\r\n    header: 'رقم الهاتف',\r\n    key: 'phone',\r\n  },\r\n  {\r\n    header: 'سعر التوصيل',\r\n    key: 'delivery_price',\r\n  },\r\n  {\r\n    header: 'الاجمالي',\r\n    key: 'total',\r\n  },\r\n  {\r\n    header: 'حالة الطلبية',\r\n    key: 'status',\r\n  },\r\n]\r\n\r\nconst workSheetName = 'cubra-orders'\r\nconst workBookName = 'cubraworkbook'\r\nconst Orders = () => {\r\n  const navigate = useNavigate()\r\n  const {\r\n    orders,\r\n    loading,\r\n    showDialog,\r\n    dialogStatus,\r\n    status,\r\n    orderID,\r\n    confirmDelete,\r\n    cancelDelete,\r\n    executeDelete,\r\n    updateStatus,\r\n    setDialogStatus,\r\n    setOrderID,\r\n    setStatus,\r\n    toggleMarkedItem,\r\n    markedItems,\r\n    showDeleteDialog,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n    links,\r\n    handlePageClick,\r\n    getOrdersByStatus,\r\n    selectedStatus,\r\n    setSelectedStatus,\r\n    editMarked,\r\n    executeEditMarked,\r\n    editMarkedDialog,\r\n    setEditMarkedDialog,\r\n    markedStatus,\r\n    setMarkedStatus,\r\n  } = useOrders()\r\n\r\n  const workbook = new Excel.Workbook()\r\n\r\n  const saveExcel = async () => {\r\n    try {\r\n      const fileName = workBookName\r\n\r\n      const worksheet = workbook.addWorksheet(workSheetName)\r\n\r\n      worksheet.columns = columns\r\n\r\n      worksheet.getRow(1).font = { bold: true }\r\n\r\n      worksheet.columns.forEach((column) => {\r\n        column.width = column.header.length + 5\r\n        column.alignment = { horizontal: 'center' }\r\n      })\r\n\r\n      orders.forEach((singleOrder) => {\r\n        worksheet.addRow(singleOrder)\r\n      })\r\n\r\n      worksheet.eachRow({ includeEmpty: false }, (row) => {\r\n        const currentCell = row._cells\r\n\r\n        currentCell.forEach((singleCell) => {\r\n          const cellAddress = singleCell._address\r\n\r\n          worksheet.getCell(cellAddress).border = {\r\n            top: { style: 'thin' },\r\n            left: { style: 'thin' },\r\n            bottom: { style: 'thin' },\r\n            right: { style: 'thin' },\r\n          }\r\n        })\r\n      })\r\n\r\n      const buf = await workbook.xlsx.writeBuffer()\r\n\r\n      saveAs(new Blob([buf]), `${fileName}.xlsx`)\r\n    } catch (error) {\r\n      console.error('<<<ERRROR>>>', error)\r\n      console.error('Something Went Wrong', error.message)\r\n    } finally {\r\n      workbook.removeWorksheet(workSheetName)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle\r\n          title=\"الطلبيات\"\r\n          icon={<ShoppingCartSimple size={25} />}\r\n          mark={true}\r\n          deleteMarked={deleteMarked}\r\n          markedItems={markedItems}\r\n          editItems={true}\r\n          editMarked={editMarked}\r\n          isExportable={true}\r\n          saveExcel={saveExcel}\r\n          loadingOrders={false}\r\n        />\r\n        <AppBreadcrumb />\r\n        <div className=\"mb-3\">\r\n          <br />\r\n          {loading ? (\r\n            <div className=\"h-100 w-100 d-flex justify-content-center align-items-center py-5 my-5\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div\r\n                className=\"rounded\"\r\n                style={{ backgroundColor: Theme.white, boxShadow: '0px 2px 3px #c8c8c8' }}\r\n              >\r\n                <CNav variant=\"tabs\" className=\"justify-content-center\" layout=\"fill\">\r\n                  <CNavItem>\r\n                    <CNavLink\r\n                      style={\r\n                        selectedStatus === 'all'\r\n                          ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                          : {\r\n                              color: Theme.primaryLight,\r\n                              backgroundColor: Theme.base,\r\n                              borderBottom: '#d8dbe0',\r\n                            }\r\n                      }\r\n                      active={selectedStatus === 'all'}\r\n                      onClick={() => {\r\n                        setSelectedStatus('all')\r\n                      }}\r\n                    >\r\n                      الكل\r\n                    </CNavLink>\r\n                  </CNavItem>\r\n                  <CNavItem>\r\n                    <CNavLink\r\n                      style={\r\n                        selectedStatus === 'pending'\r\n                          ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                          : {\r\n                              color: Theme.primaryLight,\r\n                              backgroundColor: Theme.base,\r\n                              borderBottom: '#d8dbe0',\r\n                            }\r\n                      }\r\n                      active={selectedStatus === 'pending'}\r\n                      onClick={() => {\r\n                        setSelectedStatus('pending')\r\n                      }}\r\n                    >\r\n                      معلق\r\n                    </CNavLink>\r\n                  </CNavItem>\r\n                  <CNavItem>\r\n                    <CNavLink\r\n                      style={\r\n                        selectedStatus === 'in_progress'\r\n                          ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                          : {\r\n                              color: Theme.primaryLight,\r\n                              backgroundColor: Theme.base,\r\n                              borderBottom: '#d8dbe0',\r\n                            }\r\n                      }\r\n                      active={selectedStatus === 'in_progress'}\r\n                      onClick={() => {\r\n                        setSelectedStatus('in_progress')\r\n                      }}\r\n                    >\r\n                      في التوصيل\r\n                    </CNavLink>\r\n                  </CNavItem>\r\n                  <CNavItem>\r\n                    <CNavLink\r\n                      style={\r\n                        selectedStatus === 'done'\r\n                          ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                          : {\r\n                              color: Theme.primaryLight,\r\n                              backgroundColor: Theme.base,\r\n                              borderBottom: '#d8dbe0',\r\n                            }\r\n                      }\r\n                      active={selectedStatus === 'done'}\r\n                      onClick={() => {\r\n                        setSelectedStatus('done')\r\n                      }}\r\n                    >\r\n                      عالق\r\n                    </CNavLink>\r\n                  </CNavItem>\r\n                  <CNavItem>\r\n                    <CNavLink\r\n                      style={\r\n                        selectedStatus === 'delivered'\r\n                          ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                          : {\r\n                              color: Theme.primaryLight,\r\n                              backgroundColor: Theme.base,\r\n                              borderBottom: '#d8dbe0',\r\n                            }\r\n                      }\r\n                      active={selectedStatus === 'delivered'}\r\n                      onClick={() => {\r\n                        setSelectedStatus('delivered')\r\n                      }}\r\n                    >\r\n                      تم الاستلام\r\n                    </CNavLink>\r\n                  </CNavItem>\r\n                  <CNavItem active={selectedStatus === 'cancelled'}>\r\n                    <CNavLink\r\n                      style={\r\n                        selectedStatus === 'cancelled'\r\n                          ? { fontWeight: 'bold', color: Theme.grayDark }\r\n                          : {\r\n                              color: Theme.primaryLight,\r\n                              backgroundColor: Theme.base,\r\n                              borderBottom: '#d8dbe0',\r\n                            }\r\n                      }\r\n                      active={selectedStatus === 'cancelled'}\r\n                      onClick={() => {\r\n                        setSelectedStatus('cancelled')\r\n                      }}\r\n                    >\r\n                      ملغي\r\n                    </CNavLink>\r\n                  </CNavItem>\r\n                </CNav>\r\n                {orders && orders.length > 0 ? (\r\n                  <CTable align=\"middle\" className=\"mb-3\" hover responsive striped>\r\n                    <CTableHead color=\"light\">\r\n                      <CTableRow>\r\n                        <CTableHeaderCell className=\"text-center\" style={{ width: 100 }}>\r\n                          <CButton\r\n                            style={{\r\n                              backgroundColor: Theme.primary1,\r\n                              border: 'none',\r\n                            }}\r\n                            onClick={markAll}\r\n                          >\r\n                            <CheckSquare size={20} /> الكل\r\n                          </CButton>\r\n                        </CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">أسم الزبون</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">المدينة</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">المنطقة</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">بالقرب من </CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">رقم الهاتف</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\"> المجموع</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\"> سعر التوصيل</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\"> الاجمالي</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">حالة الطلبية </CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">الإجراءات</CTableHeaderCell>\r\n                      </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                      {orders.map((item, index) => (\r\n                        <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                          <CTableDataCell className=\"text-center fw-medium\">\r\n                            <div className=\"d-flex justify-content-center align-items-center\">\r\n                              <CFormCheck\r\n                                id=\"index\"\r\n                                className=\"customCheckbox\"\r\n                                label=\" \"\r\n                                reverse\r\n                                checked={markedItems.find((id) => id === item.id)}\r\n                                onChange={() => {\r\n                                  toggleMarkedItem(item.id)\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <button\r\n                              className=\"hovarableText\"\r\n                              onClick={() => navigate(`/view_order/${item.id}`)}\r\n                            >\r\n                              {item.customer_name}\r\n                            </button>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>{item.city}</div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>{item.area}</div>\r\n                          </CTableDataCell>{' '}\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>{item.near}</div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>{item.phone}</div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>₪{item.total}</div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>₪{item.delivery_price}</div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>₪{item.total}</div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>\r\n                              {status[item.id] === 'pending'\r\n                                ? 'معلق'\r\n                                : status[item.id] === 'in_progress'\r\n                                ? 'في التوصيل'\r\n                                : status[item.id] === 'done'\r\n                                ? 'عالق'\r\n                                : status[item.id] === 'delivered'\r\n                                ? 'تم الاستلام'\r\n                                : status[item.id] === 'cancelled'\r\n                                ? 'ملغي'\r\n                                : item.status === 'pending'\r\n                                ? 'معلق'\r\n                                : item.status === 'in_progress'\r\n                                ? 'في التوصيل'\r\n                                : item.status === 'done'\r\n                                ? 'عالق'\r\n                                : item.status === 'delivered'\r\n                                ? 'تم الاستلام'\r\n                                : item.status === 'cancelled'\r\n                                ? 'ملغي'\r\n                                : ''}\r\n                            </div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell>\r\n                            <AppTooltip type=\"delete\" onClick={() => confirmDelete(item.id)} />\r\n                            <AppTooltip\r\n                              type=\"edit\"\r\n                              onClick={() => {\r\n                                setDialogStatus(true)\r\n                                setOrderID(item.id)\r\n                              }}\r\n                            />\r\n                            <AppTooltip\r\n                              type=\"view\"\r\n                              onClick={() => navigate(`/view_order/${item.id}`)}\r\n                            />\r\n                          </CTableDataCell>\r\n                        </CTableRow>\r\n                      ))}\r\n                    </CTableBody>\r\n                  </CTable>\r\n                ) : (\r\n                  <EmptyPage emptyItems=\"طلبيات\" />\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {selectedStatus === 'all' && (\r\n          <CPagination align=\"center\">\r\n            {links &&\r\n              links.map((item, index) => (\r\n                <CPaginationItem\r\n                  active={item.active}\r\n                  key={index}\r\n                  onClick={() => {\r\n                    if (item.url) {\r\n                      const page = new URL(item.url).searchParams.get('page')\r\n                      handlePageClick(Number(page))\r\n                    }\r\n                  }}\r\n                  disabled={item.url == null}\r\n                >\r\n                  {item.label === 'Next &raquo;' ? (\r\n                    <>&raquo;</>\r\n                  ) : item.label === '&laquo; Previous' ? (\r\n                    <>&laquo;</>\r\n                  ) : (\r\n                    <>{item.label}</>\r\n                  )}\r\n                </CPaginationItem>\r\n              ))}\r\n          </CPagination>\r\n        )}\r\n      </CCol>\r\n      <ToastContainer />\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف هذه الطلبية ؟\"\r\n        open={showDialog}\r\n        onClose={cancelDelete}\r\n        actionCancel={cancelDelete}\r\n        actionExecute={executeDelete}\r\n        deleteDialog={true}\r\n      />\r\n\r\n      <Dialog\r\n        open={dialogStatus}\r\n        onClose={() => setDialogStatus(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        dir=\"rtl\"\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          color=\"black\"\r\n          style={{ width: '300px', textAlign: 'center', fontSize: '22px' }}\r\n        >\r\n          تعديل حالة الطلبية\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"col\" style={{ textAlign: '' }}>\r\n            <select\r\n              className=\"form-select form-select-sm \"\r\n              value={status[orderID]}\r\n              onChange={(e) => setStatus({ ...status, [orderID]: e.target.value })}\r\n            >\r\n              <option>اختر حالة </option>\r\n              <option value=\"pending\">معلق</option>\r\n              <option value=\"in_progress\">في التوصيل</option>\r\n              <option value=\"delivered\"> تم الاستلام</option>\r\n              <option value=\"done\">عالق</option>\r\n              <option value=\"cancelled\">ملغي</option>\r\n            </select>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions className=\"flex justify-content-center\">\r\n          <CButton\r\n            onClick={updateStatus}\r\n            style={{ backgroundColor: Theme.primary1, borderColor: Theme.primary1 }}\r\n          >\r\n            نعم بالتأكيد\r\n          </CButton>\r\n          <Button\r\n            onClick={() => setDialogStatus(false)}\r\n            style={{ backgroundColor: Theme.primaryRed, margin: '0.5rem', color: Theme.white }}\r\n          >\r\n            إلغاء\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={editMarkedDialog}\r\n        onClose={() => setEditMarkedDialog(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        dir=\"rtl\"\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          color=\"black\"\r\n          style={{ width: '300px', textAlign: 'center', fontSize: '22px' }}\r\n        >\r\n          تعديل حالة الطلبيات المحددة\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"col\" style={{ textAlign: '' }}>\r\n            <select\r\n              className=\"form-select form-select-sm \"\r\n              value={markedStatus}\r\n              onChange={(e) => setMarkedStatus(e.target.value)}\r\n            >\r\n              <option>اختر حالة </option>\r\n              <option value=\"pending\">معلق</option>\r\n              <option value=\"in_progress\">في التوصيل</option>\r\n              <option value=\"delivered\"> تم الاستلام</option>\r\n              <option value=\"done\">عالق</option>\r\n              <option value=\"cancelled\">ملغي</option>\r\n            </select>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions className=\"flex justify-content-center\">\r\n          <CButton\r\n            onClick={executeEditMarked}\r\n            style={{ backgroundColor: Theme.primary1, borderColor: Theme.primary1 }}\r\n          >\r\n            نعم بالتأكيد\r\n          </CButton>\r\n          <Button\r\n            onClick={() => setEditMarkedDialog(false)}\r\n            style={{ backgroundColor: Theme.primaryRed, margin: '0.5rem', color: Theme.white }}\r\n          >\r\n            إلغاء\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف جميع الطلبيات التي تم تحديدها ؟\"\r\n        open={showDeleteDialog}\r\n        onClose={cancelDeleteMarked}\r\n        actionCancel={cancelDeleteMarked}\r\n        actionExecute={executeDeleteMarked}\r\n        deleteDialog={true}\r\n      />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Orders\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { useDelete } from '../general/useDelete'\r\nimport { notifyEdit } from 'src/utils/util'\r\nimport { useDeleteMarked } from '../general/useDeleteMarked'\r\n\r\nexport const useOrders = () => {\r\n  const [orders, setOrders] = useState([])\r\n  const [links, setLinks] = useState([])\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [loading, setLoading] = useState(false)\r\n  const [dialogStatus, setDialogStatus] = useState(false)\r\n  const [status, setStatus] = useState({})\r\n  const [orderID, setOrderID] = useState('')\r\n  const [selectedStatus, setSelectedStatus] = useState('all')\r\n  const [editMarkedDialog, setEditMarkedDialog] = useState(false)\r\n  const [markedStatus, setMarkedStatus] = useState()\r\n\r\n  const getOrders = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await fetch(`${API_ROUTE}/orders?page=${currentPage}`)\r\n      const data = await response.json()\r\n      setOrders(data['data'])\r\n      setLinks(data['links'])\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const getOrdersByStatus = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await fetch(`${API_ROUTE}/filter_orders/${selectedStatus}`)\r\n      const data = await response.json()\r\n      setOrders(data['orders'])\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const { showDialog, confirmDelete, executeDelete, cancelDelete } = useDelete('orders', getOrders)\r\n\r\n  const {\r\n    showDeleteDialog,\r\n    markedItems,\r\n    setMarkedItems,\r\n    toggleMarkedItem,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n  } = useDeleteMarked(orders, 'orders', getOrders)\r\n\r\n  const editMarked = () => {\r\n    setEditMarkedDialog(true)\r\n  }\r\n\r\n  const executeEditMarked = async () => {\r\n    setLoading(true)\r\n    try {\r\n      markedItems.forEach(async (id) => {\r\n        const formData = new FormData()\r\n        formData.append('status', markedStatus)\r\n        formData.append('order_id', id)\r\n        try {\r\n          await axios.post(`${API_ROUTE}/update_order_status`, formData)\r\n        } catch (error) {\r\n          console.error(error)\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setEditMarkedDialog(false)\r\n      notifyEdit()\r\n      setMarkedItems([])\r\n      setTimeout(() => {\r\n        getOrders()\r\n        setLoading(false)\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  const updateStatus = async () => {\r\n    const formData = new FormData()\r\n    formData.append('status', status[orderID])\r\n    formData.append('order_id', orderID)\r\n    try {\r\n      await axios.post(`${API_ROUTE}/update_order_status`, formData)\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setDialogStatus(false)\r\n      getOrders()\r\n      notifyEdit()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getOrders()\r\n  }, [currentPage])\r\n\r\n  useEffect(() => {\r\n    if (selectedStatus === 'all') {\r\n      getOrders(currentPage)\r\n    } else {\r\n      getOrdersByStatus(selectedStatus)\r\n    }\r\n    console.log(selectedStatus)\r\n  }, [selectedStatus])\r\n\r\n  const handlePageClick = (page) => {\r\n    setCurrentPage(page)\r\n  }\r\n\r\n  return {\r\n    orders,\r\n    loading,\r\n    showDialog,\r\n    dialogStatus,\r\n    status,\r\n    orderID,\r\n    confirmDelete,\r\n    cancelDelete,\r\n    executeDelete,\r\n    updateStatus,\r\n    setDialogStatus,\r\n    setOrderID,\r\n    setStatus,\r\n    toggleMarkedItem,\r\n    markedItems,\r\n    showDeleteDialog,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n    links,\r\n    handlePageClick,\r\n    getOrdersByStatus,\r\n    selectedStatus,\r\n    setSelectedStatus,\r\n    editMarked,\r\n    executeEditMarked,\r\n    editMarkedDialog,\r\n    setEditMarkedDialog,\r\n    markedStatus,\r\n    setMarkedStatus,\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { useDelete } from '../general/useDelete'\r\nimport { notifyDelete, notifyFailed } from 'src/utils/util'\r\nimport axios from 'axios'\r\n\r\nexport const useFeedbacks = () => {\r\n  const [feedbacks, setFeedbacks] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [itemOffset, setItemOffset] = useState(0)\r\n  const itemsPerPage = 10\r\n  const [markedFeedbacks, setMarkedFeedbacks] = useState([])\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false)\r\n\r\n  const getFeedbacks = async () => {\r\n    const response = await fetch(`${API_ROUTE}/feedbacks`)\r\n    const data = await response.json()\r\n    // eslint-disable-next-line dot-notation\r\n    setFeedbacks(data['feedbacks'])\r\n    setLoading(false)\r\n    setItemOffset(0)\r\n  }\r\n\r\n  const toggleMarkedFeedback = (id) => {\r\n    if (markedFeedbacks.find((itemId) => itemId == id)) {\r\n      const newFeedbacks = markedFeedbacks.filter((itemId) => itemId !== id)\r\n      setMarkedFeedbacks([...newFeedbacks])\r\n    } else {\r\n      const newFeedbacks = [...markedFeedbacks, id]\r\n      setMarkedFeedbacks([...newFeedbacks])\r\n    }\r\n  }\r\n\r\n  const markAll = () => {\r\n    if (markedFeedbacks.length == feedbacks.length) {\r\n      setMarkedFeedbacks([])\r\n    } else {\r\n      const newFeedbacks = feedbacks.map((item) => item.id)\r\n      setMarkedFeedbacks([...newFeedbacks])\r\n    }\r\n  }\r\n\r\n  const deleteMarked = () => {\r\n    setShowDeleteDialog(true)\r\n  }\r\n\r\n  const cancelDeleteMarked = () => {\r\n    setShowDeleteDialog(false)\r\n  }\r\n\r\n  const executeDeleteMarked = () => {\r\n    try {\r\n      const newFeedbacks = markedFeedbacks.map(async (item) => {\r\n        try {\r\n          await axios.delete(`${API_ROUTE}/feedbacks/${item}`)\r\n        } catch (error) {\r\n          console.error(error)\r\n          notifyFailed()\r\n        } finally {\r\n          getFeedbacks()\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error)\r\n      notifyFailed()\r\n    } finally {\r\n      setShowDeleteDialog(false)\r\n      getFeedbacks()\r\n      notifyDelete()\r\n      setMarkedFeedbacks([])\r\n    }\r\n  }\r\n\r\n  const { showDialog, confirmDelete, executeDelete, cancelDelete } = useDelete(\r\n    'feedbacks',\r\n    getFeedbacks,\r\n  )\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getFeedbacks()\r\n  }, [])\r\n\r\n  const handlePageClick = (event) => {\r\n    const newOffset = event.selected * itemsPerPage\r\n    setItemOffset(newOffset)\r\n  }\r\n\r\n  return {\r\n    feedbacks,\r\n    loading,\r\n    showDialog,\r\n    itemOffset,\r\n    confirmDelete,\r\n    executeDelete,\r\n    cancelDelete,\r\n    toggleMarkedFeedback,\r\n    markedFeedbacks,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n    showDeleteDialog,\r\n  }\r\n}\r\n","/* eslint-disable react/jsx-key */\r\n/* eslint-disable jsx-a11y/img-redundant-alt */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CFormCheck,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { ChatsCircle, CheckSquare } from 'phosphor-react'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useFeedbacks } from 'src/hooks/feedbacks/useFeedbacks'\r\nimport AppDialog from 'src/components/AppDialog'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport AppTooltip from 'src/components/Tooltip'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport EmptyPage from 'src/components/EmptyPage'\r\n\r\nconst Feedbacks = () => {\r\n  const navigate = useNavigate()\r\n  const {\r\n    feedbacks,\r\n    loading,\r\n    showDialog,\r\n    confirmDelete,\r\n    executeDelete,\r\n    cancelDelete,\r\n    toggleMarkedFeedback,\r\n    markedFeedbacks,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n    showDeleteDialog,\r\n  } = useFeedbacks()\r\n\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle\r\n          title=\"ملاحظات العملاء\"\r\n          icon={<ChatsCircle size={25} />}\r\n          addPath=\"add_feedback\"\r\n          addText=\"إضافة ملاحظة\"\r\n          addItem={true}\r\n          mark={true}\r\n          deleteMarked={deleteMarked}\r\n          markedItems={markedFeedbacks}\r\n        />\r\n        <AppBreadcrumb />\r\n        <div>\r\n          {loading ? (\r\n            <div className=\"h-100 w-100 d-flex justify-content-center align-items-center py-5 my-5\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {feedbacks.length > 0 ? (\r\n                <div\r\n                  className=\"rounded my-3\"\r\n                  style={{ backgroundColor: Theme.white, boxShadow: '0px 2px 3px #c8c8c8' }}\r\n                >\r\n                  <CTable align=\"middle\" className=\"mb-3\" hover responsive striped>\r\n                    <CTableHead color=\"light\">\r\n                      <CTableRow>\r\n                        <CTableHeaderCell className=\"text-center\" style={{ width: 100 }}>\r\n                          <CButton\r\n                            style={{\r\n                              backgroundColor: Theme.primary1,\r\n                              border: 'none',\r\n                            }}\r\n                            onClick={markAll}\r\n                          >\r\n                            <CheckSquare size={20} /> الكل\r\n                          </CButton>\r\n                        </CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">الاسم</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">الصورة</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">المحتوى</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\"> الإجراءات </CTableHeaderCell>\r\n                      </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                      {feedbacks.map((item, index) => (\r\n                        <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                          <CTableDataCell className=\"text-center fw-medium\">\r\n                            <CFormCheck\r\n                              id=\"index\"\r\n                              className=\"customCheckbox\"\r\n                              checked={markedFeedbacks.find((id) => id === item.id)}\r\n                              onChange={() => {\r\n                                toggleMarkedFeedback(item.id)\r\n                              }}\r\n                            />\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            {item.customer_name}\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div className=\"d-flex flex-column h-100 align-items-center\">\r\n                              <div style={{ display: 'flex', gap: '10px' }}>\r\n                                <img\r\n                                  src={item.image}\r\n                                  alt=\"customer_feedback\"\r\n                                  width=\"100\"\r\n                                  height=\"100\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </CTableDataCell>\r\n                            <CTableDataCell className=\"text-center\">{item.body}</CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                              <AppTooltip type=\"delete\" onClick={() => confirmDelete(item.id)} />\r\n                              <AppTooltip\r\n                                type=\"edit\"\r\n                                onClick={() => navigate(`/edit_feedback/${item.id}`)}\r\n                              />\r\n                            </div>\r\n                          </CTableDataCell>\r\n                        </CTableRow>\r\n                      ))}\r\n                    </CTableBody>\r\n                  </CTable>\r\n                </div>\r\n              ) : (\r\n                <EmptyPage emptyItems=\"ملاحظات\" />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CCol>\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف هذه الملاحظة ؟\"\r\n        open={showDialog}\r\n        onClose={cancelDelete}\r\n        actionCancel={cancelDelete}\r\n        actionExecute={executeDelete}\r\n        deleteDialog={true}\r\n      />\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف جميع المنتجات التي تم تحديدها ؟\"\r\n        open={showDeleteDialog}\r\n        onClose={cancelDeleteMarked}\r\n        actionCancel={cancelDeleteMarked}\r\n        actionExecute={executeDeleteMarked}\r\n        deleteDialog={true}\r\n      />\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Feedbacks\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable prettier/prettier */\r\nimport { CAlert, CButton, CCardBody, CCol, CForm, CFormInput, CRow } from '@coreui/react'\r\nimport { Spinner } from 'react-bootstrap'\r\n// import '../../scss/style.scss'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useFeedbackAdding } from 'src/hooks/feedbacks/useFeedbackAdding'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { PlusCircle } from 'phosphor-react'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\nconst AddFeedback = () => {\r\n  const {\r\n    customerName,\r\n    setCustomerName,\r\n    body,\r\n    setBody,\r\n    image,\r\n    setImage,\r\n    loading,\r\n    handleSubmit,\r\n    validated,\r\n    visible,\r\n    setVisible,\r\n  } = useFeedbackAdding()\r\n  const { width } = useWidth()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"ملاحظة جديدة\" icon={<PlusCircle size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <CForm\r\n                    className=\"row g-3 needs-validation\"\r\n                    noValidate\r\n                    validated={validated}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    <CCol sm={width < 768 ? 12 : null}>\r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        placeholder=\"اسم العميل\"\r\n                        feedbackInvalid=\"اسم العميل مطلوب\"\r\n                        id=\"categoryNameAr\"\r\n                        label=\"اسم العميل\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setCustomerName(e.target.value)\r\n                        }}\r\n                        value={customerName}\r\n                      />\r\n                    </CCol>\r\n                    <div className=\"mb-3\">\r\n                      <CFormInput\r\n                        label=\"صورة\"\r\n                        type=\"file\"\r\n                        id=\"categoryPic\"\r\n                        feedbackInvalid=\"الصورة مطلوبة\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setImage(e.target.files[0])\r\n                        }}\r\n                      />\r\n                      {image && (\r\n                        <img\r\n                          src={image ? URL.createObjectURL(image) : ''}\r\n                          style={{ margin: '10px' }}\r\n                          width={300}\r\n                          height={300}\r\n                        />\r\n                      )}\r\n                    </div>\r\n\r\n                    <CCol sm={width < 768 ? 12 : null}>\r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        placeholder=\"المحتوى\"\r\n                        feedbackInvalid=\" المحتوى مطلوب\"\r\n                        id=\"bodyAr\"\r\n                        label=\"المحتوى\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setBody(e.target.value)\r\n                        }}\r\n                        value={body}\r\n                      />\r\n                    </CCol>\r\n                    <CRow>\r\n                      {loading && customerName !== '' ? (\r\n                        <Spinner animation=\"border\" role=\"status\" style={{ margin: '10px' }}>\r\n                          <span className=\"visually-hidden\">Loading...</span>\r\n                        </Spinner>\r\n                      ) : (\r\n                        <CButton\r\n                          style={{\r\n                            width: '200px',\r\n                            marginTop: '30px',\r\n                            backgroundColor: Theme.primary1,\r\n                            border: 'none',\r\n                          }}\r\n                          type=\"submit\"\r\n                        >\r\n                          <span style={{ fontWeight: 'bolder' }}>اضافه ملاحظة</span>\r\n                        </CButton>\r\n                      )}\r\n                    </CRow>\r\n\r\n                    <CAlert\r\n                      color=\"danger\"\r\n                      dismissible\r\n                      visible={visible}\r\n                      onClose={() => setVisible(false)}\r\n                    >\r\n                      حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n                    </CAlert>\r\n                  </CForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\nexport default AddFeedback\r\n","import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyAdd } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useFormValidation } from '../general/useFormValidation'\r\n\r\nexport const useFeedbackAdding = () => {\r\n  const [customerName, setCustomerName] = useState('')\r\n  const [body, setBody] = useState('')\r\n  const [image, setImage] = useState('')\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const navigate = useNavigate()\r\n  const addFeedback = async () => {\r\n    setLoading(true)\r\n    let formData = new FormData()\r\n    formData.append('image', image)\r\n    formData.append('customer_name', customerName)\r\n    formData.append('body', body)\r\n\r\n    try {\r\n      await axios.post(`${API_ROUTE}/feedbacks`, formData)\r\n      setLoading(false)\r\n      notifyAdd()\r\n      setTimeout(() => {\r\n        navigate('/feedbacks')\r\n      }, 500)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setLoading(false)\r\n      setVisible(true)\r\n    }\r\n  }\r\n\r\n  const { handleSubmit, validated } = useFormValidation(addFeedback)\r\n\r\n  return {\r\n    customerName,\r\n    setCustomerName,\r\n    body,\r\n    setBody,\r\n    image,\r\n    setImage,\r\n    loading,\r\n    addFeedback,\r\n    handleSubmit,\r\n    validated,\r\n    visible,\r\n    setVisible,\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyEdit } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport const useFeedbackEditing = (feedbackId) => {\r\n  const navigate = useNavigate()\r\n  const [customerNameAr, setCustomerNameAr] = useState('')\r\n  const [customerNameEng, setCustomerNameEng] = useState('')\r\n  const [customerNameHeb, setCustomerNameHeb] = useState('')\r\n  const [image, setImage] = useState('')\r\n  const [body_ar, setBody_ar] = useState('')\r\n  const [body_en, setBody_en] = useState('')\r\n  const [body_heb, setBody_heb] = useState('')\r\n  const [updatedImage, setUpdatedImage] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const getFeedback = async () => {\r\n    const url = `${API_ROUTE}/feedbacks/${feedbackId}`\r\n    const response = await fetch(url)\r\n    const item = await response.json()\r\n    setImage(item['feedback']?.['image'])\r\n    setCustomerNameAr(item['feedback']?.['customer_name'])\r\n    setBody_ar(item['feedback']?.['body_ar'])\r\n    setBody_en(item['feedback']?.['body_en'])\r\n  }\r\n\r\n  useEffect(() => {\r\n    getFeedback()\r\n  }, [])\r\n\r\n  const update = () => {\r\n    setLoading(true)\r\n    const formData = new FormData()\r\n    formData.append('customer_name', customerNameAr)\r\n    formData.append('image', updatedImage)\r\n    formData.append('body_ar', body_ar)\r\n    formData.append('body_en', body_en)\r\n\r\n    axios\r\n      .post(`${API_ROUTE}/feedbacks/${feedbackId}?_method=PUT`, formData)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        notifyEdit()\r\n        setTimeout(() => {\r\n          navigate('/feedbacks')\r\n        }, 500)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        setLoading(false)\r\n        setVisible(true)\r\n      })\r\n  }\r\n  return {\r\n    loading,\r\n    customerNameAr,\r\n    customerNameEng,\r\n    customerNameHeb,\r\n    image,\r\n    body_ar,\r\n    body_en,\r\n    body_heb,\r\n    updatedImage,\r\n    setCustomerNameAr,\r\n    setCustomerNameEng,\r\n    setCustomerNameHeb,\r\n    setBody_ar,\r\n    setBody_en,\r\n    setBody_heb,\r\n    setUpdatedImage,\r\n    update,\r\n    visible,\r\n    setVisible,\r\n  }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { CAlert, CButton, CCardBody, CCol, CRow } from '@coreui/react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useFeedbackEditing } from 'src/hooks/feedbacks/useFeedbackEditing'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { NotePencil } from 'phosphor-react'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\nconst EditFeedback = () => {\r\n  const params = useParams()\r\n  const {\r\n    loading,\r\n    customerNameAr,\r\n    customerNameEng,\r\n    customerNameHeb,\r\n    image,\r\n    body_ar,\r\n    body_en,\r\n    body_heb,\r\n    updatedImage,\r\n    setCustomerNameAr,\r\n    setCustomerNameEng,\r\n    setCustomerNameHeb,\r\n    setBody_ar,\r\n    setBody_en,\r\n    setBody_heb,\r\n    setUpdatedImage,\r\n    update,\r\n    visible,\r\n    setVisible\r\n} = useFeedbackEditing(params.id)\r\nconst {width} = useWidth()\r\n\r\n\r\nconst {isArabic, isEnglish, isHebrew} = useLanguage()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n      <PageTitle title='تعديل الملاحظة' icon={<NotePencil size={25} />}/>\r\n      <AppBreadcrumb/>\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              <div className=\"row\" style={{ marginTop: '15px' }}>\r\n              {isArabic === 'true' && <CCol sm={width < 768 ? 12 : null}>\r\n                  <label className=\"form-label\"> الاسم باللغة العربية </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\" الاسم باللغة العربية\"\r\n                    aria-label=\"First name\"\r\n                    name=\"address\"\r\n                    value={customerNameAr}\r\n                    onChange={(e) => setCustomerNameAr(e.target.value)}\r\n                  />\r\n                </CCol>}\r\n              {isEnglish === 'true' && <CCol sm={width < 768 ? 12 : null}>\r\n                  <label className=\"form-label\"> الاسم باللغة الانجليزية </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\" الاسم باللغة الانجليزية\"\r\n                    aria-label=\"First name\"\r\n                    name=\"address\"\r\n                    value={customerNameEng}\r\n                    onChange={(e) => setCustomerNameEng(e.target.value)}\r\n                  />\r\n                </CCol>}\r\n              {isHebrew === 'true' && <CCol sm={width < 768 ? 12 : null}>\r\n                  <label className=\"form-label\"> الاسم باللغة العبرية </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\" الاسم باللغة العبرية\"\r\n                    aria-label=\"First name\"\r\n                    name=\"address\"\r\n                    value={customerNameHeb}\r\n                    onChange={(e) => setCustomerNameHeb(e.target.value)}\r\n                  />\r\n                </CCol>}\r\n              <div className=\"col-md-12\">\r\n                  <label className=\"form-label\">الصورة </label>\r\n                  <input\r\n                    className=\"form-control form-control-sm\"\r\n                    id=\"formFileSm\"\r\n                    type=\"file\"\r\n                    name=\"product_pic\"\r\n                    onChange={(e) => setUpdatedImage(e.target.files[0])}\r\n                  />\r\n                  {updatedImage ? (\r\n                    <img\r\n                      src={updatedImage ? URL.createObjectURL(updatedImage) : ''}\r\n                      alt=\"picture\"\r\n                      width={300}\r\n                      height={300}\r\n                      style={{ margin: '10px' }}\r\n                    />\r\n                  ) : (\r\n                    <img src={image} width={300} height={300} style={{ margin: '10px' }} />\r\n                  )}\r\n                </div>\r\n                \r\n                {isArabic === 'true' && <CCol sm={width < 768 ? 12 : null}>\r\n                  <label className=\"form-label\"> المحتوى بالعربية</label>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"المحتوى بالعربية\"\r\n                    aria-label=\"First name\"\r\n                    name=\"address\"\r\n                    value={body_ar}\r\n                    onChange={(e) => setBody_ar(e.target.value)}\r\n                  />\r\n                </CCol>}\r\n                {isEnglish === 'true' && <CCol sm={width < 768 ? 12 : null}>\r\n                  <label className=\"form-label\"> المحتوى بالانجليزية </label>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"المحتوى بالانجليزية\"\r\n                    aria-label=\"First name\"\r\n                    name=\"address\"\r\n                    value={body_en}\r\n                    onChange={(e) => setBody_en(e.target.value)}\r\n                  />\r\n                </CCol>}\r\n                {isHebrew === 'true' && <CCol sm={width < 768 ? 12 : null}>\r\n                  <label className=\"form-label\"> المحتوى بالعبرية </label>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"المحتوى بالعبرية\"\r\n                    aria-label=\"First name\"\r\n                    name=\"address\"\r\n                    value={body_heb}\r\n                    onChange={(e) => setBody_heb(e.target.value)}\r\n                  />\r\n                </CCol>}\r\n              </div>\r\n            </div>\r\n            {loading ? (\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            ) : (\r\n              <CButton\r\n                style={{\r\n                  width: '200px',\r\n                  marginTop: '30px',\r\n                  backgroundColor: Theme.primary1,\r\n                  border: 'none',\r\n                }}\r\n                type=\"submit\"\r\n                onClick={update}\r\n              >\r\n                <span style={{ fontWeight: 'bolder' }}>حفظ</span>\r\n              </CButton>\r\n            )}\r\n            <CAlert color=\"danger\" dismissible visible={visible} onClose={() => setVisible(false)}>\r\n              حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n            </CAlert>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default EditFeedback\r\n","import { useState, useEffect } from 'react'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { useDelete } from '../general/useDelete'\r\n\r\nexport const useCopons = () => {\r\n  const [copons, setCopons] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const getCopons = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await fetch(`${API_ROUTE}/copons`)\r\n      const data = await response.json()\r\n      setCopons(data['copons'])\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const { showDialog, confirmDelete, executeDelete, cancelDelete } = useDelete('copons', getCopons)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getCopons()\r\n  }, [])\r\n\r\n  return {\r\n    copons,\r\n    loading,\r\n    showDialog,\r\n    confirmDelete,\r\n    executeDelete,\r\n    cancelDelete,\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/img-redundant-alt */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React, {  } from 'react'\r\nimport {\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { Gift } from 'phosphor-react'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useCopons } from 'src/hooks/copons/useCopons'\r\nimport AppDialog from 'src/components/AppDialog'\r\nimport { Theme } from 'src/constants/colors'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport AppTooltip from 'src/components/Tooltip'\r\nimport EmptyPage from 'src/components/EmptyPage'\r\n\r\nconst Copons = () => {\r\n  const navigate = useNavigate()\r\n  const { copons, loading, showDialog, confirmDelete, executeDelete, cancelDelete } = useCopons()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle\r\n          title=\"الكوبونات\"\r\n          icon={<Gift size={25} />}\r\n          addItem={true}\r\n          addText=\"إضافة كوبون\"\r\n          addPath=\"add_coupon\"\r\n        />\r\n        <AppBreadcrumb />\r\n        <div>\r\n          {loading ? (\r\n            <div className=\"h-100 w-100 d-flex justify-content-center align-items-center py-5 my-5\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {copons.length > 0 ? (\r\n                <div\r\n                  className=\"rounded\"\r\n                  style={{ backgroundColor: Theme.white, boxShadow: '0px 2px 3px #c8c8c8' }}\r\n                >\r\n                  <CTable align=\"middle\" className=\"mb-3\" hover responsive striped>\r\n                    <CTableHead color=\"light\">\r\n                      <CTableRow>\r\n                        <CTableHeaderCell className=\"text-center\">الاسم</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">الكود</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">القيمة</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">تاريخ الانتهاء</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\"> الإجراءات </CTableHeaderCell>\r\n                      </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                      {copons.map((item, index) => (\r\n                        <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>{item.name}</div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>{item.code}</div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>₪{item.value}</div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>{item.end_date}</div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell>\r\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                              <AppTooltip type=\"delete\" onClick={() => confirmDelete(item.id)} />\r\n                              <AppTooltip\r\n                                type=\"edit\"\r\n                                onClick={() => navigate(`/edit_coupon/${item.id}`, {state: {item}})}\r\n                              />\r\n                            </div>\r\n                          </CTableDataCell>\r\n                        </CTableRow>\r\n                      ))}\r\n                    </CTableBody>\r\n                  </CTable>\r\n                </div>\r\n              ) : (\r\n                <EmptyPage emptyItems='كوبونات'/>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CCol>\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف هذا الكوبون ؟\"\r\n        open={showDialog}\r\n        onClose={cancelDelete}\r\n        actionCancel={cancelDelete}\r\n        actionExecute={executeDelete}\r\n        deleteDialog={true}\r\n      />\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Copons\r\n","/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable prettier/prettier */\r\nimport { CAlert, CButton, CCardBody, CCol, CForm, CFormInput, CRow } from '@coreui/react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useCoponAdding } from 'src/hooks/copons/useCoponAdding'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { PlusCircle } from 'phosphor-react'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useCurrency } from 'src/hooks/general/useCurrency'\r\n\r\nconst AddCopon = () => {\r\n  const {\r\n    code,\r\n    setCode,\r\n    loading,\r\n    visible,\r\n    setVisible,\r\n    valueNIS,\r\n    setValueNIS,\r\n    handleSubmit,\r\n    validated,\r\n    name,\r\n    setName,\r\n    endDate,\r\n    setEndDate,\r\n    // valueJUD,\r\n    // valueUSD,\r\n    // setValueUSD,\r\n    // setValueJUD,\r\n  } = useCoponAdding()\r\n  const { isNIS, isJUD, isUSD } = useCurrency()\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"كوبون جديد\" icon={<PlusCircle size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <CForm\r\n                    className=\"row g-3 needs-validation\"\r\n                    noValidate\r\n                    validated={validated}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    <CCol md={12}>\r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        placeholder=\"الاسم\"\r\n                        feedbackInvalid=\"الاسم مطلوب\"\r\n                        id=\"categoryNameAr\"\r\n                        label=\"الاسم\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setName(e.target.value)\r\n                        }}\r\n                        value={name}\r\n                      />\r\n                    </CCol>\r\n                    <CCol md={6}>\r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        placeholder=\"الكود\"\r\n                        feedbackInvalid=\"الكود مطلوب\"\r\n                        id=\"categoryNameAr\"\r\n                        label=\"الكود\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setCode(e.target.value)\r\n                        }}\r\n                        value={code}\r\n                      />\r\n                    </CCol>\r\n                    <CCol md={6}>\r\n                      <CFormInput\r\n                        type=\"date\"\r\n                        placeholder=\"تاريخ الانتهاء\"\r\n                        feedbackInvalid=\"تاريخ الانتهاء مطلوب\"\r\n                        id=\"categoryNameAr\"\r\n                        label=\"تاريخ الانتهاء\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setEndDate(e.target.value)\r\n                        }}\r\n                        value={endDate}\r\n                      />\r\n                    </CCol>\r\n                    {isNIS === 'true' && (\r\n                      <CCol>\r\n                        <CFormInput\r\n                          type=\"text\"\r\n                          placeholder=\"القيمة بالشيكل\"\r\n                          feedbackInvalid=\"قيمة الكوبون بالشيكل مطلوبة\"\r\n                          id=\"categoryNameAr\"\r\n                          label=\"القيمة بالشيكل\"\r\n                          required\r\n                          onChange={(e) => {\r\n                            setValueNIS(e.target.value)\r\n                          }}\r\n                          value={valueNIS}\r\n                        />\r\n                      </CCol>\r\n                    )}\r\n                    {/* {isUSD === 'true' && (\r\n                      <CCol>\r\n                        <CFormInput\r\n                          type=\"text\"\r\n                          placeholder=\"القيمة بالدولار\"\r\n                          feedbackInvalid=\"قيمة الكوبون بالدولار مطلوبة\"\r\n                          id=\"categoryNameAr\"\r\n                          label=\"القيمة بالدولار\"\r\n                          required\r\n                          onChange={(e) => {\r\n                            setValueUSD(e.target.value)\r\n                          }}\r\n                          value={valueUSD}\r\n                        />\r\n                      </CCol>\r\n                    )} */}\r\n                    {/* {isJUD === 'true' && (\r\n                      <CCol>\r\n                        <CFormInput\r\n                          type=\"text\"\r\n                          placeholder=\"القيمة بالدينار\"\r\n                          feedbackInvalid=\"قيمة الكوبون بالدينار مطلوبة\"\r\n                          id=\"categoryNameAr\"\r\n                          label=\"القيمة بالدينار\"\r\n                          required\r\n                          onChange={(e) => {\r\n                            setValueJUD(e.target.value)\r\n                          }}\r\n                          value={valueJUD}\r\n                        />\r\n                      </CCol>\r\n                    )} */}\r\n\r\n                   \r\n                    <div>\r\n                      {loading ? (\r\n                        <Spinner animation=\"border\" role=\"status\" style={{ margin: '10px' }}>\r\n                          <span className=\"visually-hidden\">Loading...</span>\r\n                        </Spinner>\r\n                      ) : (\r\n                        <CButton\r\n                          style={{\r\n                            width: '200px',\r\n                            marginTop: '30px',\r\n                            backgroundColor: Theme.primary1,\r\n                            border: 'none',\r\n                          }}\r\n                          type=\"submit\"\r\n                        >\r\n                          <span style={{ fontWeight: 'bolder' }}>اضافه كوبون</span>\r\n                        </CButton>\r\n                      )}\r\n                    </div>\r\n                    <CAlert\r\n                      color=\"danger\"\r\n                      dismissible\r\n                      visible={visible}\r\n                      onClose={() => setVisible(false)}\r\n                    >\r\n                      حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n                    </CAlert>\r\n                  </CForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\nexport default AddCopon\r\n","import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyAdd } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useFormValidation } from '../general/useFormValidation'\r\n\r\nexport const useCoponAdding = () => {\r\n  const [code, setCode] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [valueNIS, setValueNIS] = useState('')\r\n  const [endDate, setEndDate] = useState('')\r\n  // const [valueUSD, setValueUSD] = useState('')\r\n  // const [valueJUD, setValueJUD] = useState('')\r\n  const navigate = useNavigate()\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const addCopon = async () => {\r\n    setLoading(true)\r\n    let formData = new FormData()\r\n\r\n    formData.append('code', code)\r\n    formData.append('value', valueNIS)\r\n    formData.append('name', name)\r\n    formData.append('end_date', endDate)\r\n\r\n    const resGet = await axios\r\n      .post(`${API_ROUTE}/copons`, formData)\r\n      .then((response) => {\r\n        setLoading(false)\r\n        notifyAdd()\r\n        setTimeout(() => {\r\n          navigate('/coupons')\r\n        }, 500)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        setLoading(false)\r\n        setVisible(true)\r\n      })\r\n    setLoading(false)\r\n  }\r\n\r\n  const { handleSubmit, validated } = useFormValidation(addCopon)\r\n\r\n  return {\r\n    code,\r\n    setCode,\r\n    loading,\r\n    addCopon,\r\n    visible,\r\n    setVisible,\r\n    valueNIS,\r\n    setValueNIS,\r\n    // valueJUD,\r\n    // valueUSD,\r\n    // setValueUSD,\r\n    // setValueJUD,\r\n    handleSubmit,\r\n    validated,\r\n    name,\r\n    setName,\r\n    endDate,\r\n    setEndDate,\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyEdit } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport const useCoponEditing = (coponId, item) => {\r\n  const { code, value, name, end_date } = item\r\n  const navigate = useNavigate()\r\n  const [coponCode, setCode] = useState('')\r\n  const [coponValue, setValue] = useState('')\r\n  const [coponName, setName] = useState('')\r\n  const [endDate, setEndDate] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const getCopon = async () => {\r\n    setCode(code)\r\n    setValue(value)\r\n    setName(name)\r\n    setEndDate(end_date)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCopon()\r\n  }, [])\r\n\r\n  const update = () => {\r\n    setLoading(true)\r\n    const formData = new FormData()\r\n    formData.append('code', coponCode)\r\n    formData.append('value', coponValue)\r\n    formData.append('name', coponName)\r\n    formData.append('end_date', endDate)\r\n    axios\r\n      .post(`${API_ROUTE}/copons/${coponId}?_method=PUT`, formData)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        notifyEdit()\r\n        setTimeout(() => {\r\n          navigate('/coupons')\r\n        }, 500)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        setLoading(false)\r\n        setVisible(true)\r\n      })\r\n  }\r\n  return {\r\n    code: coponCode,\r\n    value: coponValue,\r\n    name: coponName,\r\n    endDate,\r\n    setName,\r\n    setValue,\r\n    setCode,\r\n    setEndDate,\r\n    loading,\r\n    update,\r\n    visible,\r\n    setVisible,\r\n  }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport { CAlert, CButton, CCard, CCardBody, CCol, CRow } from '@coreui/react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useCoponEditing } from 'src/hooks/copons/useCoponEditing'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { NotePencil } from 'phosphor-react'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { Theme } from 'src/constants/colors'\r\nconst EditCopon = () => {\r\n  const params = useParams()\r\n  const { state } = useLocation()\r\n  const item = state?.item\r\n  const {\r\n    code,\r\n    value,\r\n    name,\r\n    endDate,\r\n    setName,\r\n    setValue,\r\n    setCode,\r\n    setEndDate,\r\n    loading,\r\n    update,\r\n    visible,\r\n    setVisible,\r\n  } = useCoponEditing(params.id, item)\r\n\r\n  if (!item) {\r\n    return <div>Product not found</div>\r\n  }\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"تعديل الكوبون\" icon={<NotePencil size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              <CCol md={12}>\r\n                <label className=\"form-label\"> الاسم</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"formFileSm\"\r\n                  type=\"text\"\r\n                  name=\"product_pic\"\r\n                  placeholder=\"الاسم\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  value={name}\r\n                />\r\n              </CCol>\r\n              <CRow>\r\n                <CCol md={6}>\r\n                  <label className=\"form-label\"> الكود</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    id=\"formFileSm\"\r\n                    type=\"text\"\r\n                    name=\"product_pic\"\r\n                    placeholder=\"الكود\"\r\n                    onChange={(e) => setCode(e.target.value)}\r\n                    value={code}\r\n                  />\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <label className=\"form-label\"> تاريخ الانتهاء</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    id=\"formFileSm\"\r\n                    type=\"date\"\r\n                    name=\"product_pic\"\r\n                    placeholder=\"تاريخ الانتهاء\"\r\n                    onChange={(e) => setEndDate(e.target.value)}\r\n                    value={endDate}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n              <CCol md={12}>\r\n                <label className=\"form-label\"> القيمة</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"formFileSm\"\r\n                  type=\"text\"\r\n                  name=\"product_pic\"\r\n                  placeholder=\"القيمة\"\r\n                  onChange={(e) => setValue(e.target.value)}\r\n                  value={value}\r\n                />\r\n              </CCol>\r\n            </div>\r\n\r\n            {loading ? (\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            ) : (\r\n              <CButton\r\n                style={{\r\n                  width: '200px',\r\n                  marginTop: '30px',\r\n                  backgroundColor: Theme.primary1,\r\n                  border: 'none',\r\n                }}\r\n                type=\"submit\"\r\n                onClick={update}\r\n              >\r\n                <span style={{ fontWeight: 'bolder' }}>حفظ</span>\r\n              </CButton>\r\n            )}\r\n            <CAlert color=\"danger\" dismissible visible={visible} onClose={() => setVisible(false)}>\r\n              حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n            </CAlert>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default EditCopon\r\n","import { useEffect, useState } from 'react'\r\nimport { API_ROUTE } from 'src/routes'\r\n\r\nexport const useDashboard = () => {\r\n  const [dashboard, setDashboard] = useState()\r\n  const [sliders, setSliders] = useState()\r\n  const [categories, setCategories] = useState()\r\n  const [products, setProducts] = useState()\r\n  const [orders, setOrders] = useState()\r\n  const [bestSellingProducts, setBestSellingProducts] = useState([])\r\n  const [bestUsers, setBestUsers] = useState()\r\n  const [loading, setLoading] = useState()\r\n\r\n  const getDashboard = async () => {\r\n    setLoading(true)\r\n    console.log('inside use dashboard')\r\n    const response = await fetch(`${API_ROUTE}/dashboard`)\r\n    const data = await response.json()\r\n    setDashboard(data)\r\n    setSliders(data.sliders)\r\n    setCategories(data.categories)\r\n    setProducts(data.products)\r\n    setOrders(data.orders)\r\n    setBestSellingProducts(data.best_sellers_products)\r\n    setBestUsers(data.best_users)\r\n    setLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDashboard()\r\n  }, [])\r\n\r\n  return {\r\n    orders,\r\n    products,\r\n    sliders,\r\n    categories,\r\n    dashboard,\r\n    bestSellingProducts,\r\n    bestUsers,\r\n    loading,\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CRow } from '@coreui/react'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useDashboard } from 'src/hooks/dashboard/useDashboard'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\nimport { CirclesThreePlus } from 'phosphor-react'\r\n\r\nconst WidgetsDropdown = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [dashboard, setDashboard] = useState('')\r\n  const { orders, products, categories, sliders } = useDashboard()\r\n  const { width } = useWidth()\r\n  console.log(orders, products, categories, sliders)\r\n  const stats = [\r\n    {\r\n      title: 'الطلبيات',\r\n      stats: orders,\r\n      icon: <CirclesThreePlus size={25} weight=\"duotone\" />,\r\n      change: 'decrease',\r\n    },\r\n    { title: 'المنتجات', stats: products, icon: '11.2%', change: 'increase' },\r\n    { title: 'الأقسام الرئيسية', stats: categories, icon: '40%', change: 'increase' },\r\n    { title: 'الشرائح', stats: sliders, icon: '40%', change: 'increase' },\r\n  ]\r\n  const getDashboard = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await fetch('https://shammarket.ps/admin/api/dashboard')\r\n      const data = await response.json()\r\n      setDashboard(data)\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getDashboard()\r\n  }, [])\r\n  return (\r\n    <CRow className=\"gap-3 m-1 mt-3\">\r\n      {stats.map((item, index) => (\r\n        <div\r\n          key={index}\r\n          style={\r\n            width < 768\r\n              ? {\r\n                  backgroundColor: Theme.primaryLight,\r\n                  borderRadius: 5,\r\n                  color: Theme.white,\r\n                  boxShadow: '0px 2px 3px #c8c8c8',\r\n                  padding: '1rem',\r\n                  paddingBottom: 0,\r\n                  width: '47%',\r\n                  rowGap: 5,\r\n                  marginBottom: '0.5rem',\r\n                }\r\n              : {\r\n                  backgroundColor: Theme.primaryLight,\r\n                  borderRadius: 5,\r\n                  color: Theme.white,\r\n                  boxShadow: '0px 2px 3px #c8c8c8',\r\n                  padding: '1rem',\r\n                  paddingBottom: 0,\r\n                  width: '24%',\r\n                  rowGap: 5,\r\n                }\r\n          }\r\n          className=\"d-flex justify-content-center align-items-center flex-column\"\r\n        >\r\n          <h5 style={{ fontWeight: 'bold' }}>{item.title}</h5>\r\n          <p>{item.stats}</p>\r\n        </div>\r\n      ))}\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default WidgetsDropdown\r\n","/* eslint-disable react/prop-types */\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Theme } from 'src/constants/colors'\r\nimport './test.css'\r\nimport React from 'react'\r\n\r\nconst NavigationCard = ({ path, title, icon, color = Theme.white }) => {\r\n  return (\r\n    <div\r\n      className=\"col md-2 navigationCard\"\r\n      style={{\r\n        border: 'none',\r\n        boxShadow: '0px 2px 3px #c8c8c8',\r\n        width: '20%',\r\n        borderRadius: 5,\r\n        marginLeft: 5,\r\n        marginBottom: 5,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        backgroundColor: color,\r\n      }}\r\n      onClick={() => {}}\r\n    >\r\n      <NavLink\r\n        style={{\r\n          textDecoration: 'none',\r\n          color: 'black',\r\n          display: 'flex',\r\n          width: '100%',\r\n          height: '100%',\r\n          padding: '1rem 0.5rem',\r\n        }}\r\n        exact\r\n        to={path}\r\n      >\r\n        {icon}\r\n        <h5 className=\"mx-1\">{title}</h5>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavigationCard\r\n","import {\r\n  Cards,\r\n  ChatsCircle,\r\n  CirclesThreePlus,\r\n  FacebookLogo,\r\n  Gift,\r\n  Question,\r\n  ShoppingCartSimple,\r\n  SidebarSimple,\r\n  Tag,\r\n  UserCircle,\r\n} from 'phosphor-react'\r\nimport NavigationCard from './NavigationCard'\r\nimport React from 'react'\r\n\r\nconst NavigationButtons = () => {\r\n  return (\r\n    <div className=\"my-3\">\r\n      <div className=\"d-flex\">\r\n        <NavigationCard\r\n          icon={<CirclesThreePlus size={25} />}\r\n          title=\"الأقسام الرئيسية\"\r\n          path=\"/categories\"\r\n          color=\"#ffff66\"\r\n        />\r\n        <NavigationCard\r\n          icon={<Tag size={25} />}\r\n          title=\"المنتجات\"\r\n          path=\"/products\"\r\n          color=\"#c29aff\"\r\n        />\r\n        <NavigationCard\r\n          icon={<ShoppingCartSimple size={25} />}\r\n          title=\"الطلبيات\"\r\n          path=\"/orders\"\r\n          color=\"#fdaa48\"\r\n        />\r\n        <NavigationCard\r\n          icon={<SidebarSimple size={25} />}\r\n          title=\"الشرائح\"\r\n          path=\"/sliders\"\r\n          color=\"#99cccc\"\r\n        />\r\n        <NavigationCard\r\n          icon={<Cards size={25} />}\r\n          title=\"البنرات\"\r\n          path=\"/banners\"\r\n          color=\"#e1aab0\"\r\n        />\r\n      </div>\r\n      <div className=\"d-flex\">\r\n        <NavigationCard icon={<UserCircle size={25} />} title=\"المستخدمين\" path=\"/users\" />\r\n        <NavigationCard icon={<Gift size={25} />} title=\"الكوبونات\" path=\"/coupons\" />\r\n        <NavigationCard\r\n          icon={<FacebookLogo size={25} />}\r\n          title=\"مواقع التواصل الاجتماعي\"\r\n          path=\"/socials\"\r\n        />\r\n        <NavigationCard icon={<Question size={25} />} title=\"من نحن\" path=\"/about_us\" />\r\n        <NavigationCard\r\n          icon={<ChatsCircle size={25} />}\r\n          title=\"ملاحظات العملاء\"\r\n          path=\"/feedBacks\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavigationButtons\r\n","import { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { notifyEdit } from 'src/utils/util'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport axios from 'axios'\r\nimport { useLanguage } from '../general/useLanguage'\r\nimport { useCurrency } from '../general/useCurrency'\r\n\r\nexport const useSettings = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  const { isJUD, isNIS, isUSD } = useCurrency()\r\n  const [isArabicTemp, setIsArabicTemp] = useState(isArabic)\r\n  const [isEnglishTemp, setIsEnglishTemp] = useState(isEnglish)\r\n  const [isHebrewTemp, setIsHebrewTemp] = useState(isHebrew)\r\n  const [isNISTemp, setIsNISTemp] = useState(isNIS)\r\n  const [isUSDTemp, setIsUSDTemp] = useState(isUSD)\r\n  const [isJODTemp, setIsJODTemp] = useState(isJUD)\r\n  const [settings, setSettings] = useState([])\r\n\r\n  const getSettings = async () => {\r\n    console.log('getSettings called')\r\n    setLoading(true)\r\n    try {\r\n      const url = `${API_ROUTE}/settings`\r\n      const response = await fetch(url)\r\n      const item = await response.json()\r\n      setSettings(item['settings'])\r\n      item['settings'].forEach((element) => {\r\n        switch (element.name) {\r\n          case 'is_arabic':\r\n            setIsArabicTemp(element.value)\r\n            localStorage.setItem('isArabic', JSON.stringify(element.value))\r\n            break\r\n          case 'is_english':\r\n            setIsEnglishTemp(element.value)\r\n            localStorage.setItem('isEnglish', JSON.stringify(element.value))\r\n            break\r\n          case 'is_hebrow':\r\n            setIsHebrewTemp(element.value)\r\n            localStorage.setItem('isHebrew', JSON.stringify(element.value))\r\n            break\r\n          case 'is_nis':\r\n            setIsNISTemp(element.value)\r\n            localStorage.setItem('isNIS', JSON.stringify(element.value))\r\n            break\r\n          case 'is_jod':\r\n            setIsJODTemp(element.value)\r\n            localStorage.setItem('isJOD', JSON.stringify(element.value))\r\n            break\r\n          default:\r\n            break\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSettings()\r\n  }, [])\r\n\r\n  const navigate = useNavigate()\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const saveChanges = async () => {\r\n    setLoading(true)\r\n    try {\r\n      if (\r\n        (isArabicTemp === 'true' || isEnglishTemp === 'true' || isHebrewTemp === 'true') &&\r\n        (isNISTemp === 'true' || isJODTemp === 'true' || isUSDTemp === 'true')\r\n      ) {\r\n        const formData = new FormData()\r\n        formData.append('is_arabic', isArabicTemp)\r\n        formData.append('is_english', isEnglishTemp)\r\n        formData.append('is_hebrow', isHebrewTemp)\r\n        formData.append('is_nis', isNISTemp)\r\n        formData.append('is_jod', isJODTemp)\r\n        axios\r\n          .post(`${API_ROUTE}/update-settings`, formData)\r\n          .then((res) => {\r\n            // Update local storage values here\r\n            localStorage.setItem('isArabic', JSON.stringify(isArabicTemp))\r\n            localStorage.setItem('isEnglish', JSON.stringify(isEnglishTemp))\r\n            localStorage.setItem('isHebrew', JSON.stringify(isHebrewTemp))\r\n            localStorage.setItem('isNIS', JSON.stringify(isNISTemp))\r\n            localStorage.setItem('isJOD', JSON.stringify(isJODTemp))\r\n            localStorage.setItem('isUSD', JSON.stringify(isUSDTemp))\r\n\r\n            setLoading(false)\r\n            notifyEdit()\r\n            setTimeout(() => {\r\n              navigate('/dashboard')\r\n            }, 500)\r\n          })\r\n          .catch((err) => {\r\n            console.log(err)\r\n            setLoading(false)\r\n          })\r\n      } else {\r\n        setVisible(true)\r\n        setLoading(false)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return {\r\n    loading,\r\n    setLoading,\r\n    saveChanges,\r\n    visible,\r\n    setVisible,\r\n    isEnglishTemp,\r\n    isArabicTemp,\r\n    isHebrewTemp,\r\n    isNISTemp,\r\n    isJODTemp,\r\n    isUSDTemp,\r\n    setIsArabicTemp,\r\n    setIsEnglishTemp,\r\n    setIsHebrewTemp,\r\n    setIsNISTemp,\r\n    setIsJODTemp,\r\n    setIsUSDTemp,\r\n    getSettings,\r\n  }\r\n}\r\n","import { CButton, CCard, CCardBody, CCol } from '@coreui/react'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useDashboard } from 'src/hooks/dashboard/useDashboard'\r\nimport image from '../assets/images/image.png'\r\nimport React from 'react'\r\nimport { CaretCircleLeft, CrownSimple, NumberOne, NumberThree, NumberTwo } from 'phosphor-react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\n\r\nexport const BestProductsList = () => {\r\n  const navigate = useNavigate()\r\n  const { bestSellingProducts, loading } = useDashboard()\r\n  const { width } = useWidth()\r\n  console.log(bestSellingProducts)\r\n  return (\r\n    <CCol sm={width > 768 ? 6 : 12} lg={width > 768 ? 6 : 12}>\r\n      <CCard\r\n        style={{\r\n          height: '325px',\r\n          backgroundColor: Theme.white,\r\n          boxShadow: '0.5px 2px 3px #c8c8c8',\r\n          border: 'none',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <CButton\r\n          style={{\r\n            position: 'absolute',\r\n            border: 'none',\r\n            backgroundColor: 'transparent',\r\n            color: Theme.primary1,\r\n            bottom: 0,\r\n            left: 0,\r\n          }}\r\n          onClick={() => navigate('/products')}\r\n        >\r\n          ...جميع المنتجات <CaretCircleLeft size={20} />\r\n        </CButton>\r\n        <CCardBody\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <h4 style={{ fontWeight: 'bold' }}>المنتجات الأعلى مبيعا في الشهر</h4>\r\n          {loading ? (\r\n            <div className=\"h-100 w-100 d-flex justify-content-center align-items-center py-5 my-5\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {bestSellingProducts?.map((item, index) => (\r\n                <div\r\n                  key={index}\r\n                  style={\r\n                    index === 2\r\n                      ? {\r\n                          width: '100%',\r\n                          height: '75px',\r\n                          padding: '0.5rem',\r\n                          border: 'none',\r\n                          backgroundColor: Theme.white,\r\n                          display: 'flex',\r\n                          flexDirection: 'row',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'space-between',\r\n                        }\r\n                      : {\r\n                          width: '100%',\r\n                          height: '75px',\r\n                          padding: '0.5rem',\r\n                          border: 'none',\r\n                          borderBottom: '1px solid #c8c8c8',\r\n                          backgroundColor: Theme.white,\r\n                          display: 'flex',\r\n                          flexDirection: 'row',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'space-between',\r\n                        }\r\n                  }\r\n                >\r\n                  <div\r\n                    key={index}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '75px',\r\n                      padding: '0.5rem',\r\n                      border: 'none',\r\n                      display: 'flex',\r\n                      flexDirection: 'row',\r\n                      alignItems: 'center',\r\n                    }}\r\n                  >\r\n                    <h4\r\n                      style={{\r\n                        padding: '1rem',\r\n                        margin: 0,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      {index === 0 ? <CrownSimple size={20} color=\"#ffdf00\" weight=\"fill\" /> : null}\r\n                      {index === 0 ? <NumberOne size={20} color=\"#ffdf00\" weight=\"bold\" /> : null}\r\n                      {index === 1 ? <NumberTwo size={20} color=\"gray\" weight=\"bold\" /> : null}\r\n                      {index === 2 ? <NumberThree size={20} color=\"#ce8946\" weight=\"bold\" /> : null}\r\n                    </h4>\r\n                    <img\r\n                      src={item.images[0] ? item.images[0].url : image}\r\n                      onError={(e) => {\r\n                        e.target.onError = null\r\n                        e.target.src = image\r\n                      }}\r\n                      alt={`image-${item.images[0].id}`}\r\n                      width=\"15%\"\r\n                      height=\"100%\"\r\n                      style={{\r\n                        boxShadow: '0px 2px 3px #c8c8c8',\r\n                        borderRadius: 5,\r\n                      }}\r\n                    />\r\n                    <h5 style={{ padding: '1rem' }}>{item.name_ar}</h5>\r\n                  </div>\r\n                  <h5 style={{ width: '15%' }}>{item.ordered_number} مباع</h5>\r\n                </div>\r\n              ))}\r\n            </>\r\n          )}\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCol>\r\n  )\r\n}\r\n","import { CButton, CCard, CCardBody, CCol } from '@coreui/react'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useDashboard } from 'src/hooks/dashboard/useDashboard'\r\nimport React from 'react'\r\nimport { CaretCircleLeft, CrownSimple, NumberOne, NumberThree, NumberTwo } from 'phosphor-react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\n\r\nconst BestUsers = () => {\r\n  const { bestUsers, loading } = useDashboard()\r\n  const navigate = useNavigate()\r\n  const { width } = useWidth()\r\n  console.log(bestUsers)\r\n  return (\r\n    <CCol sm={width > 768 ? 6 : 12} lg={width > 768 ? 6 : 12}>\r\n      <CCard\r\n        style={{\r\n          height: '325px',\r\n          backgroundColor: Theme.white,\r\n          boxShadow: '0.5px 2px 3px #c8c8c8',\r\n          border: 'none',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <CButton\r\n          style={{\r\n            position: 'absolute',\r\n            border: 'none',\r\n            backgroundColor: 'transparent',\r\n            color: Theme.primary1,\r\n            bottom: 0,\r\n            left: 0,\r\n          }}\r\n          onClick={() => navigate('/users')}\r\n        >\r\n          ...جميع المستخدمين <CaretCircleLeft size={20} />\r\n        </CButton>\r\n        <CCardBody\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <h4 style={{ fontWeight: 'bold' }}>أفضل المستخدمين</h4>\r\n          {loading ? (\r\n            <div className=\"h-100 w-100 d-flex justify-content-center align-items-center py-5 my-5\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {bestUsers?.map((item, index) => (\r\n                <div key={index} style={{ width: '100%' }}>\r\n                  {item.user !== null && (\r\n                    <div\r\n                      style={\r\n                        index === 2\r\n                          ? {\r\n                              width: '100%',\r\n                              height: '75px',\r\n                              padding: '0.5rem',\r\n                              border: 'none',\r\n                              backgroundColor: Theme.white,\r\n                              display: 'flex',\r\n                              flexDirection: 'row',\r\n                              alignItems: 'center',\r\n                              justifyContent: 'space-between',\r\n                            }\r\n                          : {\r\n                              width: '100%',\r\n                              height: '75px',\r\n                              padding: '0.5rem',\r\n                              border: 'none',\r\n                              borderBottom: '1px solid #c8c8c8',\r\n                              backgroundColor: Theme.white,\r\n                              display: 'flex',\r\n                              flexDirection: 'row',\r\n                              alignItems: 'center',\r\n                              justifyContent: 'space-between',\r\n                            }\r\n                      }\r\n                    >\r\n                      <div\r\n                        key={index}\r\n                        style={{\r\n                          width: '100%',\r\n                          height: '75px',\r\n                          padding: '0.5rem',\r\n                          border: 'none',\r\n                          //   borderBottom: '1px solid #c8c8c8',\r\n                          display: 'flex',\r\n                          flexDirection: 'row',\r\n                          alignItems: 'center',\r\n                        }}\r\n                      >\r\n                        <h4\r\n                          style={{\r\n                            padding: '1rem',\r\n                            margin: 0,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                          }}\r\n                        >\r\n                          {index === 0 ? (\r\n                            <CrownSimple size={20} color=\"#ffdf00\" weight=\"fill\" />\r\n                          ) : null}\r\n                          {index === 0 ? (\r\n                            <NumberOne size={20} color=\"#ffdf00\" weight=\"bold\" />\r\n                          ) : null}\r\n                          {index === 1 ? <NumberTwo size={20} color=\"gray\" weight=\"bold\" /> : null}\r\n                          {index === 2 ? (\r\n                            <NumberThree size={20} color=\"#ce8946\" weight=\"bold\" />\r\n                          ) : null}\r\n                        </h4>\r\n                        <h5 style={{ padding: '1rem' }}>{item.user?.name}</h5>\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          width: '35%',\r\n                          display: 'flex',\r\n                          justifyContent: 'center',\r\n                          flexDirection: 'column',\r\n                          alignItems: 'center',\r\n                        }}\r\n                      >\r\n                        <h6>عمليات الشراء:</h6>\r\n                        <h6>{item.total_orders}</h6>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </>\r\n          )}\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCol>\r\n  )\r\n}\r\n\r\nexport default BestUsers\r\n","import React from 'react'\r\n\r\nimport { CButton, CCol, CRow } from '@coreui/react'\r\n// import WidgetsBrand from '../widgets/WidgetsBrand'\r\n// import WidgetsDropdown from '../../'\r\nimport { Card, CardContent } from '@mui/material'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  RadialLinearScale,\r\n} from 'chart.js'\r\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\r\nimport { Theme } from 'src/constants/colors'\r\nimport NavigationButtons from 'src/components/NavigationButtons'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\nimport { useSettings } from 'src/hooks/settings/useSettings'\r\nimport { useDashboard } from 'src/hooks/dashboard/useDashboard'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { BestProductsList } from 'src/components/AppBestProductsList'\r\nimport BestUsers from 'src/components/BestUsers'\r\nimport { Eye } from 'phosphor-react'\r\nChartJS.register(\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  RadialLinearScale,\r\n)\r\nconst DashboardMain = () => {\r\n  const { width } = useWidth()\r\n  const { settings } = useSettings()\r\n  console.log(settings)\r\n  const { loading } = useDashboard()\r\n\r\n  const data = {\r\n    labels: [\r\n      'January',\r\n      'February',\r\n      'March',\r\n      'April',\r\n      'May',\r\n      'June',\r\n      'July',\r\n      'August',\r\n      'September',\r\n      'October',\r\n      'November',\r\n      'December',\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: 'Sales',\r\n        data: [65],\r\n        // fill: true,\r\n        backgroundColor: [Theme.primary1, Theme.primaryLight],\r\n        borderColor: '#f6f6f8',\r\n        tension: 0.1,\r\n        barThickness: 20,\r\n      },\r\n    ],\r\n  }\r\n  const data2 = {\r\n    labels: [\r\n      'January',\r\n      'February',\r\n      'March',\r\n      'April',\r\n      'May',\r\n      'June',\r\n      'July',\r\n      'August',\r\n      'September',\r\n      'October',\r\n      'November',\r\n      'December',\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: 'Sales',\r\n        data: [65, 59, 80, 81, 56, 55, 40, 20, 40, 100, 65, 70],\r\n        // fill: true,\r\n        backgroundColor: [Theme.primary1, Theme.primaryLight],\r\n        borderColor: '#f6f6f8',\r\n        tension: 0.1,\r\n        barThickness: 20,\r\n      },\r\n    ],\r\n  }\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center py-5 my-5\">\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <CButton\r\n            style={{\r\n              position: 'sticky',\r\n              top: 0,\r\n              right: 0,\r\n              background: Theme.primary1,\r\n              border: 'none',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            <Eye size={24} style={{ marginLeft: '0.5rem' }} />\r\n            <a href=\"https://klimar.co\" style={{ textDecoration: 'none', color: Theme.white }}>\r\n              معاينة الموقع\r\n            </a>\r\n          </CButton>\r\n          {width > 768 && <NavigationButtons />}\r\n          <CRow lg={12}>\r\n            <CCol lg={12} className={width > 768 ? 'd-flex gap-2' : 'd-flex flex-column gap-2'}>\r\n              {/* <CCol sm={3} lg={9}>\r\n            <Card\r\n              className=\"d-flex justify-content-center align-items-center m-4 \"\r\n              style={{\r\n                height: '275px',\r\n                backgroundColor: Theme.white,\r\n                boxShadow: '0px 2px 3px #c8c8c8',\r\n              }}\r\n            >\r\n              <CardContent>\r\n                <div style={{ width: '200px' }}>\r\n                  <CChart\r\n                    type=\"doughnut\"\r\n                    data={{\r\n                      labels: ['الكمية في المخزون', 'الكمية المباعة'],\r\n                      datasets: [\r\n                        {\r\n                          backgroundColor: [Theme.primary1, Theme.primaryLight],\r\n                          data: [40, 20],\r\n                        },\r\n                      ],\r\n                    }}\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </CCol> */}\r\n              {/* <BestProducts /> */}\r\n              <BestProductsList />\r\n              <BestUsers />\r\n            </CCol>\r\n            <CCol sm={12}>\r\n              <WidgetsDropdown />\r\n            </CCol>\r\n          </CRow>\r\n          {/* <CRow>\r\n            <CCol sm={3} lg={9}>\r\n              <Card className=\"m-3\">\r\n                <CardContent>\r\n                  <Bar\r\n                    data={data2}\r\n                    options={{\r\n                      scales: {\r\n                        x: {\r\n                          grid: {\r\n                            display: false,\r\n                          },\r\n                        },\r\n                        y: {\r\n                          grid: {\r\n                            display: false,\r\n                          },\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </CardContent>\r\n              </Card>\r\n            </CCol>\r\n          </CRow> */}\r\n          {/*      \r\n      <div className='d-flex flex-wrap'>\r\n        <CCol sm={3} lg={6}>\r\n          <Card className='m-3'>\r\n            <CardContent>\r\n\r\n            </CardContent>\r\n          </Card>\r\n        </CCol>\r\n        <CCol sm={6} lg={6}>\r\n          <Card className='m-3'>\r\n            <CardContent>\r\n              <Line data={data} />\r\n            </CardContent>\r\n          </Card>\r\n        </CCol>\r\n         <CCol sm={6} lg={6}>\r\n        <Card>\r\n          <CardContent>\r\n            <PolarArea data={data} width={100}/>\r\n          </CardContent>\r\n        </Card>\r\n      </CCol> \r\n      </div> */}\r\n\r\n          {/* <CCard className=\"mb-4\">\r\n        <CCardHeader>الطلبيات</CCardHeader>\r\n        <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\r\n          <CTableHead color=\"light\">\r\n            <CTableRow>\r\n              <CTableHeaderCell className=\"text-center\">المدينة</CTableHeaderCell>\r\n              <CTableHeaderCell className=\"text-center\">المنطقة</CTableHeaderCell>\r\n              <CTableHeaderCell className=\"text-center\">بالقرب من </CTableHeaderCell>\r\n              <CTableHeaderCell className=\"text-center\">رقم الهاتف</CTableHeaderCell>\r\n              <CTableHeaderCell className=\"text-center\"> المجموع</CTableHeaderCell>\r\n              <CTableHeaderCell className=\"text-center\"> سعر التوصيل</CTableHeaderCell>\r\n              <CTableHeaderCell className=\"text-center\"> الإجمالي</CTableHeaderCell>\r\n              <CTableHeaderCell className=\"text-center\">حالة الطلبية </CTableHeaderCell>\r\n              <CTableHeaderCell className=\"text-center\">الإجراءات</CTableHeaderCell>\r\n            </CTableRow>\r\n          </CTableHead>\r\n          <CTableBody>\r\n            {orders.slice(0, 5).map((item, index) => (\r\n              <CTableRow v-for=\"item in tableItems\" key={index}>\r\n\r\n                <CTableDataCell className=\"text-center\">\r\n                  <div>{item.city}</div>\r\n                </CTableDataCell>\r\n                <CTableDataCell className=\"text-center\">\r\n                  <div>{item.area}</div>\r\n                </CTableDataCell>{' '}\r\n                <CTableDataCell className=\"text-center\">\r\n                  <div>{item.near}</div>\r\n                </CTableDataCell>\r\n                <CTableDataCell className=\"text-center\">\r\n                  <div>{item.phone}</div>\r\n                </CTableDataCell>\r\n                <CTableDataCell className=\"text-center\">\r\n                  <div>{item.sum}</div>\r\n                </CTableDataCell>\r\n                <CTableDataCell className=\"text-center\">\r\n                  <div>{item.delivery_price}</div>\r\n                </CTableDataCell> <CTableDataCell className=\"text-center\">\r\n                  <div>{item.total  }</div>\r\n                </CTableDataCell>\r\n                <CTableDataCell className=\"text-center\">\r\n                  <div>{item.status}</div>\r\n                </CTableDataCell>\r\n                <CTableDataCell className=\"text-center\">\r\n                  <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <CButton\r\n                      color=\"primary\"\r\n                      style={{ width: '80px', margin: '5px', marginBottom: '10px' }}\r\n                      onClick={() => navigate(`/view_order/${item.id}`)}\r\n                    >\r\n                      عرض\r\n                    </CButton>\r\n                  </div>\r\n                </CTableDataCell>\r\n              </CTableRow>\r\n            ))}\r\n          </CTableBody>\r\n        </CTable>\r\n      </CCard> */}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardMain\r\n","/* eslint-disable jsx-a11y/img-redundant-alt */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CFormCheck,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { CheckSquare, UserCircle } from 'phosphor-react'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useUsers } from 'src/hooks/users/useUsers'\r\nimport AppDialog from 'src/components/AppDialog'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport AppTooltip from 'src/components/Tooltip'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport image from '../../assets/images/image.png'\r\nimport EmptyPage from 'src/components/EmptyPage'\r\n\r\nconst UsersPage = () => {\r\n  const navigate = useNavigate()\r\n  const {\r\n    users,\r\n    loading,\r\n    showDialog,\r\n    confirmDelete,\r\n    executeDelete,\r\n    cancelDelete,\r\n    toggleMarkedItem,\r\n    markedItems,\r\n    showDeleteDialog,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n  } = useUsers()\r\n  const userId = sessionStorage.getItem('id') || localStorage.getItem('jfood_id')\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle\r\n          title=\"المستخدمين\"\r\n          icon={<UserCircle size={25} />}\r\n          addItem={true}\r\n          addText=\"إضافة مستخدم\"\r\n          addPath=\"add_user\"\r\n          mark={true}\r\n          deleteMarked={deleteMarked}\r\n          markedItems={markedItems}\r\n        />\r\n        <AppBreadcrumb />\r\n        <div>\r\n          {loading ? (\r\n            <div className=\"h-100 w-100 d-flex justify-content-center align-items-center py-5 my-5\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {users.length > 0 ? (\r\n                <div\r\n                  className=\"rounded my-3\"\r\n                  style={{ backgroundColor: Theme.white, boxShadow: '0px 2px 3px #c8c8c8' }}\r\n                >\r\n                  <CTable align=\"middle\" className=\"mb-3\" hover responsive striped>\r\n                    <CTableHead color=\"light\">\r\n                      <CTableRow>\r\n                        <CTableHeaderCell className=\"text-center\" style={{ width: 100 }}>\r\n                          <CButton\r\n                            style={{\r\n                              backgroundColor: Theme.primary1,\r\n                              border: 'none',\r\n                            }}\r\n                            onClick={markAll}\r\n                          >\r\n                            <CheckSquare size={20} /> الكل\r\n                          </CButton>\r\n                        </CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">الاسم</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">المسمى الوظيفي </CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\"> رقم الهاتف </CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\"> الصورة </CTableHeaderCell>\r\n\r\n                        <CTableHeaderCell className=\"text-center\"> الإجراءات </CTableHeaderCell>\r\n                      </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                      {users.map((item, index) => (\r\n                        <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                          <CTableDataCell className=\"text-center fw-medium\">\r\n                            <div className=\"d-flex justify-content-center align-items-center\">\r\n                              <CFormCheck\r\n                                id=\"index\"\r\n                                className=\"customCheckbox\"\r\n                                label=\" \"\r\n                                reverse\r\n                                checked={markedItems.find((id) => id === item.id)}\r\n                                onChange={() => {\r\n                                  toggleMarkedItem(item.id)\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>{item.name}</div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div className=\"small text-medium-emphasis\">\r\n                              <div>{item.role_id}</div>\r\n                            </div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <div>{item.phone}</div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <img\r\n                              src={item.image ? item.image : image}\r\n                              onError={(e) => {\r\n                                e.target.onError = null\r\n                                e.target.src = image\r\n                              }}\r\n                              alt=\"image\"\r\n                              width=\"100\"\r\n                            />\r\n                          </CTableDataCell>\r\n                          <CTableDataCell>\r\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                              {userId !== item.id.toString() && (\r\n                                <>\r\n                                  <AppTooltip\r\n                                    type=\"delete\"\r\n                                    onClick={() => confirmDelete(item.id)}\r\n                                  />\r\n                                </>\r\n                              )}\r\n                              <AppTooltip\r\n                                type=\"edit\"\r\n                                onClick={() =>\r\n                                  navigate(`/edit_user/${item.id}`, { state: { item } })\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </CTableDataCell>\r\n                        </CTableRow>\r\n                      ))}\r\n                    </CTableBody>\r\n                  </CTable>\r\n                </div>\r\n              ) : (\r\n                <EmptyPage emptyItems=\"مستخدمين\" />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CCol>\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف هذا المستخدم ؟\"\r\n        open={showDialog}\r\n        onClose={cancelDelete}\r\n        actionCancel={cancelDelete}\r\n        actionExecute={executeDelete}\r\n        deleteDialog={true}\r\n      />\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف جميع المنتجات التي تم تحديدها ؟\"\r\n        open={showDeleteDialog}\r\n        onClose={cancelDeleteMarked}\r\n        actionCancel={cancelDeleteMarked}\r\n        actionExecute={executeDeleteMarked}\r\n        deleteDialog={true}\r\n      />\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default UsersPage\r\n","import { useState, useEffect } from 'react'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { useDelete } from '../general/useDelete'\r\nimport axios from 'axios'\r\nimport { notifyDelete, notifyFailed } from 'src/utils/util'\r\nimport { useDeleteMarked } from '../general/useDeleteMarked'\r\n\r\nexport const useUsers = () => {\r\n  const [users, setUsers] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const getUsres = async () => {\r\n    const response = await fetch(`${API_ROUTE}/users`)\r\n    const data = await response.json()\r\n    // eslint-disable-next-line dot-notation\r\n    setUsers(data['users'])\r\n    setLoading(false)\r\n  }\r\n\r\n  const { showDialog, confirmDelete, executeDelete, cancelDelete } = useDelete(\r\n    'delete_user',\r\n    getUsres,\r\n  )\r\n\r\n  const {\r\n    showDeleteDialog,\r\n    markedItems,\r\n    setMarkedItems,\r\n    toggleMarkedItem,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n  } = useDeleteMarked(users, 'delete_user', getUsres)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getUsres()\r\n  }, [])\r\n\r\n  return {\r\n    users,\r\n    loading,\r\n    showDialog,\r\n    confirmDelete,\r\n    executeDelete,\r\n    cancelDelete,\r\n    toggleMarkedItem,\r\n    markedItems,\r\n    showDeleteDialog,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n  }\r\n}\r\n","import { CAlert, CButton, CCol, CFormCheck, CFormSwitch, CRow } from '@coreui/react'\r\nimport { Gear } from 'phosphor-react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport AppCard from 'src/components/AppCard'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useCurrency } from 'src/hooks/general/useCurrency'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport { useSettings } from 'src/hooks/settings/useSettings'\r\nimport React from 'react'\r\n\r\nconst Settings = () => {\r\n  const {\r\n    loading,\r\n    setLoading,\r\n    saveChanges,\r\n    visible,\r\n    setVisible,\r\n    isEnglishTemp,\r\n    isArabicTemp,\r\n    isHebrewTemp,\r\n    isNISTemp,\r\n    isJODTemp,\r\n    isUSDTemp,\r\n    setIsArabicTemp,\r\n    setIsEnglishTemp,\r\n    setIsHebrewTemp,\r\n    setIsNISTemp,\r\n    setIsJODTemp,\r\n    setIsUSDTemp,\r\n  } = useSettings()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"الإعدادات\" icon={<Gear size={25} />} />\r\n        <AppBreadcrumb />\r\n        <div>\r\n          <AppCard>\r\n            <p>لغات التطبيق/الموقع</p>\r\n            <div>\r\n              <span style={{ margin: '0px 3px' }}>\r\n                <CFormCheck\r\n                  button={{ color: 'secondary', variant: 'outline' }}\r\n                  id=\"arabic\"\r\n                  autoComplete=\"off\"\r\n                  label=\"العربية\"\r\n                  checked={isArabicTemp === 'true'}\r\n                  onChange={() => {\r\n                    if (isArabicTemp === 'true') {\r\n                      setIsArabicTemp('false')\r\n                    } else {\r\n                      setIsArabicTemp('true')\r\n                    }\r\n                  }}\r\n                />\r\n              </span>\r\n              <span style={{ margin: '0px 3px' }}>\r\n                <CFormCheck\r\n                  button={{ color: 'secondary', variant: 'outline' }}\r\n                  id=\"english\"\r\n                  autoComplete=\"off\"\r\n                  label=\"الإنجليزية\"\r\n                  checked={isEnglishTemp === 'true'}\r\n                  onChange={() => {\r\n                    if (isEnglishTemp === 'true') {\r\n                      setIsEnglishTemp('false')\r\n                    } else {\r\n                      setIsEnglishTemp('true')\r\n                    }\r\n                  }}\r\n                />\r\n              </span>\r\n              <span style={{ margin: '0px 3px' }}>\r\n                <CFormCheck\r\n                  button={{ color: 'secondary', variant: 'outline' }}\r\n                  id=\"hebrew\"\r\n                  autoComplete=\"off\"\r\n                  label=\"العبرية\"\r\n                  checked={isHebrewTemp === 'true'}\r\n                  onChange={() => {\r\n                    if (isHebrewTemp === 'true') {\r\n                      setIsHebrewTemp('false')\r\n                    } else {\r\n                      setIsHebrewTemp('true')\r\n                    }\r\n                  }}\r\n                />\r\n              </span>\r\n            </div>\r\n            <div className=\"mt-3 border-top py-3\">\r\n              <p>عملات التطبيق/الموقع</p>\r\n              <div>\r\n                <span style={{ margin: '0px 3px' }}>\r\n                  <CFormCheck\r\n                    button={{ color: 'secondary', variant: 'outline' }}\r\n                    id=\"nis\"\r\n                    autoComplete=\"off\"\r\n                    label=\"الشيكل\"\r\n                    checked={isNISTemp === 'true'}\r\n                    onChange={() => {\r\n                      if (isNISTemp === 'true') {\r\n                        setIsNISTemp('false')\r\n                      } else {\r\n                        setIsNISTemp('true')\r\n                      }\r\n                    }}\r\n                  />\r\n                </span>\r\n                <span style={{ margin: '0px 3px' }}>\r\n                  <CFormCheck\r\n                    button={{ color: 'secondary', variant: 'outline' }}\r\n                    id=\"usd\"\r\n                    autoComplete=\"off\"\r\n                    label=\"الدولار\"\r\n                    checked={isUSDTemp === 'true'}\r\n                    onChange={() => {\r\n                      if (isUSDTemp === 'true') {\r\n                        setIsUSDTemp('false')\r\n                      } else {\r\n                        setIsUSDTemp('true')\r\n                      }\r\n                    }}\r\n                  />\r\n                </span>\r\n                <span style={{ margin: '0px 3px' }}>\r\n                  <CFormCheck\r\n                    button={{ color: 'secondary', variant: 'outline' }}\r\n                    id=\"jud\"\r\n                    autoComplete=\"off\"\r\n                    label=\"الدينار\"\r\n                    checked={isJODTemp === 'true'}\r\n                    onChange={() => {\r\n                      if (isJODTemp === 'true') {\r\n                        setIsJODTemp('false')\r\n                      } else {\r\n                        setIsJODTemp('true')\r\n                      }\r\n                    }}\r\n                  />\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\" border-top py-3\">\r\n              <CFormSwitch size=\"lg\" label=\" تفعيل التطبيق/الموقع \" id=\"activeApp\" reverse />\r\n            </div>\r\n            {loading ? (\r\n              <Spinner animation=\"border\" role=\"status\" style={{ alignSelf: 'flex-end' }}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            ) : (\r\n              <CButton\r\n                onClick={saveChanges}\r\n                style={{\r\n                  width: '200px',\r\n                  backgroundColor: Theme.primary1,\r\n                  border: 'none',\r\n                  margin: '5px 3px',\r\n                  alignSelf: 'flex-end',\r\n                }}\r\n              >\r\n                حفظ التغييرات\r\n              </CButton>\r\n            )}\r\n            <CAlert color=\"danger\" dismissible visible={visible} onClose={() => setVisible(false)}>\r\n              يرجى اختيار لغة واحدة وعملة واحدة على الأقل للتطبيق/الموقع\r\n            </CAlert>\r\n          </AppCard>\r\n          {/* )} */}\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable prettier/prettier */\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CForm,\r\n  CFormCheck,\r\n  CFormInput,\r\n  CFormSelect,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport { PlusCircle } from 'phosphor-react'\r\nimport { useState } from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport AppCard from 'src/components/AppCard'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useBannerAdding } from 'src/hooks/banners/useBannerAdding'\r\nimport { useCategories } from 'src/hooks/categories/useCategories'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\nimport { useProducts } from 'src/hooks/products/useProducts'\r\n\r\nconst AddBanner = () => {\r\n  const {\r\n    bannerName,\r\n    setBannerName,\r\n    bannerImage,\r\n    setBannerImage,\r\n    bannerImageEn,\r\n    setBannerImageEn,\r\n    bannerImageMobile,\r\n    setBannerImageMobile,\r\n    bannerImageMobileEn,\r\n    setBannerImageMobileEn,\r\n    handleSubmit,\r\n    validated,\r\n    loading,\r\n    visible,\r\n    setVisible,\r\n    bannerTitleAr,\r\n    setBannerTitleAr,\r\n    bannerTitleEn,\r\n    setBannerTitleEn,\r\n    bannerTitleHeb,\r\n    setBannerTitleHeb,\r\n    type,\r\n    setType,\r\n    dataId,\r\n    setDataId,\r\n  } = useBannerAdding()\r\n\r\n  const { width } = useWidth()\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  const { categories } = useCategories()\r\n  const { products } = useProducts()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"بانر جديد\" icon={<PlusCircle size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <CForm\r\n                    className=\"row g-3 needs-validation\"\r\n                    noValidate\r\n                    validated={validated}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    <CCol sm={12}>\r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        placeholder=\" اسم البانر\"\r\n                        feedbackInvalid=\" اسم البانر\"\r\n                        id=\"categoryNameAr\"\r\n                        label=\" اسم البانر\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setBannerName(e.target.value)\r\n                        }}\r\n                        value={bannerName}\r\n                      />\r\n                    </CCol>\r\n                    {isArabic == 'true' && (\r\n                      <CCol sm={width < 768 ? 12 : null}>\r\n                        <CFormInput\r\n                          type=\"text\"\r\n                          placeholder=\" عنوان البانر بالعربية\"\r\n                          feedbackInvalid=\" عنوان البانر بالعربية\"\r\n                          id=\"categoryNameAr\"\r\n                          label=\" عنوان البانر بالعربية\"\r\n                          required\r\n                          onChange={(e) => {\r\n                            setBannerTitleAr(e.target.value)\r\n                          }}\r\n                          value={bannerTitleAr}\r\n                        />\r\n                      </CCol>\r\n                    )}\r\n                    {isEnglish == 'true' && (\r\n                      <CCol sm={width < 768 ? 12 : null}>\r\n                        <CFormInput\r\n                          type=\"text\"\r\n                          placeholder=\" عنوان البانر بالانجليزية\"\r\n                          feedbackInvalid=\" عنوان البانر بالانجليزية\"\r\n                          id=\"categoryNameAr\"\r\n                          label=\" عنوان البانر بالانجليزية\"\r\n                          required\r\n                          onChange={(e) => {\r\n                            setBannerTitleEn(e.target.value)\r\n                          }}\r\n                          value={bannerTitleEn}\r\n                        />\r\n                      </CCol>\r\n                    )}\r\n                    {isHebrew == 'true' && (\r\n                      <CCol sm={width < 768 ? 12 : null}>\r\n                        <CFormInput\r\n                          type=\"text\"\r\n                          placeholder=\" عنوان البانر بالعبرية\"\r\n                          feedbackInvalid=\" عنوان البانر بالعبرية\"\r\n                          id=\"categoryNameAr\"\r\n                          label=\" عنوان البانر بالعبرية\"\r\n                          required\r\n                          onChange={(e) => {\r\n                            setBannerTitleHeb(e.target.value)\r\n                          }}\r\n                          value={bannerTitleHeb}\r\n                        />\r\n                      </CCol>\r\n                    )}\r\n                    <div className=\"mb-3\">\r\n                      <CFormInput\r\n                        label=\"صورة البانر\"\r\n                        type=\"file\"\r\n                        id=\"categoryPic\"\r\n                        feedbackInvalid=\"صورة البانر مطلوبة\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setBannerImage(e.target.files[0])\r\n                        }}\r\n                      />\r\n                      {bannerImage && (\r\n                        <img\r\n                          src={bannerImage ? URL.createObjectURL(bannerImage) : ''}\r\n                          style={{ margin: '10px' }}\r\n                          width={300}\r\n                          height={300}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <CFormInput\r\n                        label=\"صورة البانر باللغة الانجليزية\"\r\n                        type=\"file\"\r\n                        id=\"categoryPic\"\r\n                        feedbackInvalid=\"صورة البانر باللغة الانجليزية مطلوبة\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setBannerImageEn(e.target.files[0])\r\n                        }}\r\n                      />\r\n                      {bannerImageEn && (\r\n                        <img\r\n                          src={bannerImageEn ? URL.createObjectURL(bannerImageEn) : ''}\r\n                          style={{ margin: '10px' }}\r\n                          width={300}\r\n                          height={300}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <CFormInput\r\n                        label=\"صورة للموبايل\"\r\n                        type=\"file\"\r\n                        id=\"categoryPic\"\r\n                        feedbackInvalid=\"صورة للموبايل مطلوبة\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setBannerImageMobile(e.target.files[0])\r\n                        }}\r\n                      />\r\n                      {bannerImageMobile && (\r\n                        <img\r\n                          src={bannerImageMobile ? URL.createObjectURL(bannerImageMobile) : ''}\r\n                          style={{ margin: '10px' }}\r\n                          width={300}\r\n                          height={300}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <CFormInput\r\n                        label=\"صورة للموبايل باللغة الانجليزية\"\r\n                        type=\"file\"\r\n                        id=\"categoryPic\"\r\n                        feedbackInvalid=\"صورة للموبايل باللغة الانجليزية مطلوبة\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setBannerImageMobileEn(e.target.files[0])\r\n                        }}\r\n                      />\r\n                      {bannerImageMobileEn && (\r\n                        <img\r\n                          src={bannerImageMobileEn ? URL.createObjectURL(bannerImageMobileEn) : ''}\r\n                          style={{ margin: '10px' }}\r\n                          width={300}\r\n                          height={300}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <CCol md={12}>هذا البانر تابع لـ</CCol>\r\n                    <CCol md={2} className=\"d-flex justify-content-between\">\r\n                      <CFormCheck\r\n                        button={{ color: 'secondary', variant: 'outline' }}\r\n                        type=\"radio\"\r\n                        name=\"options-outlined\"\r\n                        id=\"secondary-outlined\"\r\n                        autoComplete=\"off\"\r\n                        label=\"منتج\"\r\n                        value=\"product\"\r\n                        checked={type === 'product'}\r\n                        onChange={(e) => {\r\n                          setType(e.target.value)\r\n                        }}\r\n                      />\r\n                      <CFormCheck\r\n                        button={{ color: 'secondary', variant: 'outline' }}\r\n                        type=\"radio\"\r\n                        name=\"options-outlined\"\r\n                        id=\"danger-outlined\"\r\n                        autoComplete=\"off\"\r\n                        label=\"قسم رئيسي\"\r\n                        value=\"category\"\r\n                        checked={type === 'category'}\r\n                        onChange={(e) => {\r\n                          setType(e.target.value)\r\n                        }}\r\n                      />\r\n                    </CCol>\r\n                    {type == 'product' ? (\r\n                      <CCol md={12}>\r\n                        <CFormSelect\r\n                          id=\"productCategory\"\r\n                          label=\"اختر المنتج\"\r\n                          feedbackInvalid=\" المنتج مطلوب\"\r\n                          value={dataId}\r\n                          onChange={(e) => setDataId(e.target.value)}\r\n                          required\r\n                        >\r\n                          <option selected=\"\" value=\"\"> اختر المنتج</option>\r\n                          {products?.map((item, index) => (\r\n                            <option value={item.id} key={item.id}>\r\n                              {item.name_ar}\r\n                            </option>\r\n                          ))}\r\n                        </CFormSelect>\r\n                      </CCol>\r\n                    ) : (\r\n                      <CCol md={12}>\r\n                        <CFormSelect\r\n                          id=\"productCategory\"\r\n                          label=\"اختر القسم\"\r\n                          feedbackInvalid=\" القسم مطلوب\"\r\n                          value={dataId}\r\n                          onChange={(e) => setDataId(e.target.value)}\r\n                          required\r\n                        >\r\n                          <option selected=\"\" value=\"\"> اختر القسم</option>\r\n                          {categories?.map((item, index) => (\r\n                            <option value={item.id} key={item.id}>\r\n                              {item.name_ar}\r\n                            </option>\r\n                          ))}\r\n                        </CFormSelect>\r\n                      </CCol>\r\n                    )}\r\n\r\n                    {loading ? (\r\n                      <Spinner animation=\"border\" role=\"status\" style={{ margin: '10px' }}>\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                      </Spinner>\r\n                    ) : (\r\n                      <CButton\r\n                        style={{\r\n                          width: '200px',\r\n                          marginTop: '30px',\r\n                          backgroundColor: Theme.primary1,\r\n                          border: 'none',\r\n                        }}\r\n                        type=\"submit\"\r\n                      >\r\n                        <span style={{ fontWeight: 'bolder' }}>اضافه قسم</span>\r\n                      </CButton>\r\n                    )}\r\n                    <CAlert\r\n                      color=\"danger\"\r\n                      dismissible\r\n                      visible={visible}\r\n                      onClose={() => setVisible(false)}\r\n                    >\r\n                      حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n                    </CAlert>\r\n                  </CForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default AddBanner\r\n","import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyAdd } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useFormValidation } from '../general/useFormValidation'\r\nimport { useLanguage } from '../general/useLanguage'\r\n\r\nexport const useBannerAdding = () => {\r\n  const [bannerName, setBannerName] = useState('')\r\n  const [bannerImage, setBannerImage] = useState('')\r\n  const [bannerImageEn, setBannerImageEn] = useState('')\r\n  const [bannerImageMobile, setBannerImageMobile] = useState('')\r\n  const [bannerImageMobileEn, setBannerImageMobileEn] = useState('')\r\n  const [bannerTitleAr, setBannerTitleAr] = useState('')\r\n  const [bannerTitleEn, setBannerTitleEn] = useState('')\r\n  const [bannerTitleHeb, setBannerTitleHeb] = useState('')\r\n  const [type, setType] = useState('product')\r\n  const [dataId, setDataId] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const navigate = useNavigate()\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n\r\n  const addBanner = async () => {\r\n    setLoading(true)\r\n    console.log(\r\n      bannerName,\r\n      bannerTitleAr,\r\n      bannerTitleEn,\r\n      bannerTitleHeb,\r\n      type,\r\n      dataId,\r\n      bannerImage,\r\n      bannerImageMobile,\r\n    )\r\n    let formData = new FormData()\r\n    formData.append('name', bannerName)\r\n    formData.append('image', bannerImage)\r\n    formData.append('image_en', bannerImageEn)\r\n    formData.append('image_mobile', bannerImageMobile)\r\n    formData.append('image_mobile_en', bannerImageMobileEn)\r\n\r\n    isArabic === 'true'\r\n      ? formData.append('title_ar', bannerTitleAr)\r\n      : formData.append('title_ar', 'empty')\r\n\r\n    isEnglish === 'true'\r\n      ? formData.append('title_en', bannerTitleEn)\r\n      : formData.append('title_en', 'empty')\r\n\r\n    isHebrew === 'true'\r\n      ? formData.append('title_he', bannerTitleHeb)\r\n      : formData.append('title_he', 'empty')\r\n\r\n    formData.append('type', type)\r\n    formData.append('data_id', dataId)\r\n    console.log('all added')\r\n    try {\r\n      const resGet = await axios.post(`${API_ROUTE}/banners`, formData)\r\n      setLoading(false)\r\n      notifyAdd()\r\n      setTimeout(() => {\r\n        navigate('/banners')\r\n      }, 500)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setLoading(false)\r\n      setVisible(true)\r\n    }\r\n  }\r\n\r\n  const { handleSubmit, validated } = useFormValidation(addBanner)\r\n\r\n  return {\r\n    bannerName,\r\n    setBannerName,\r\n    bannerImage,\r\n    setBannerImage,\r\n    bannerImageEn,\r\n    setBannerImageEn,\r\n    bannerImageMobile,\r\n    setBannerImageMobile,\r\n    bannerImageMobileEn,\r\n    setBannerImageMobileEn,\r\n    handleSubmit,\r\n    validated,\r\n    loading,\r\n    visible,\r\n    setVisible,\r\n    bannerTitleAr,\r\n    setBannerTitleAr,\r\n    bannerTitleEn,\r\n    setBannerTitleEn,\r\n    bannerTitleHeb,\r\n    setBannerTitleHeb,\r\n    type,\r\n    setType,\r\n    dataId,\r\n    setDataId,\r\n  }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable prettier/prettier */\r\nimport { CAlert, CButton, CCardBody, CCol, CForm, CFormInput, CRow } from '@coreui/react'\r\nimport { PlusCircle } from 'phosphor-react'\r\nimport { useState } from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport AppCard from 'src/components/AppCard'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport { useBrandAdding } from 'src/hooks/brands/useBrandAdding'\r\nimport { useCategoryAdding } from 'src/hooks/categories/useCategoryAdding'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\n\r\nconst AddBrand = () => {\r\n  const {\r\n    brandNameAr,\r\n    setBrandNameAr,\r\n    loading,\r\n    addBrand,\r\n    image,\r\n    setImage,\r\n    handleSubmit,\r\n    validated,\r\n    visible,\r\n    setVisible,\r\n  } = useBrandAdding()\r\n\r\n  const { width } = useWidth()\r\n\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"علامة تجارية جديدة\" icon={<PlusCircle size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <CForm\r\n                    className=\"row g-3 needs-validation\"\r\n                    noValidate\r\n                    validated={validated}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    {isArabic === 'true' && (\r\n                      <CCol sm={width < 768 ? 12 : null}>\r\n                        <CFormInput\r\n                          type=\"text\"\r\n                          placeholder=\"اسم العلامة التجارية باللغة العربية\"\r\n                          feedbackInvalid=\"اسم العلامة التجارية باللغة العربية مطلوب\"\r\n                          id=\"categoryNameAr\"\r\n                          label=\"اسم العلامة التجارية باللغة العربية\"\r\n                          required\r\n                          onChange={(e) => {\r\n                            setBrandNameAr(e.target.value)\r\n                          }}\r\n                          value={brandNameAr}\r\n                        />\r\n                      </CCol>\r\n                    )}\r\n                    \r\n                    \r\n                    <div className=\"mb-3\">\r\n                      <CFormInput\r\n                        label=\"صورة القسم\"\r\n                        type=\"file\"\r\n                        id=\"categoryPic\"\r\n                        feedbackInvalid=\"صورة القسم مطلوبة\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          setImage(e.target.files[0])\r\n                        }}\r\n                      />\r\n                      {image && (\r\n                        <img\r\n                          src={image ? URL.createObjectURL(image) : ''}\r\n                          style={{ margin: '10px' }}\r\n                          width={300}\r\n                          height={300}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    {loading && brandNameAr !== '' ? (\r\n                      <Spinner animation=\"border\" role=\"status\" style={{ margin: '10px' }}>\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                      </Spinner>\r\n                    ) : (\r\n                      <CButton\r\n                        style={{\r\n                          width: '200px',\r\n                          marginTop: '30px',\r\n                          backgroundColor: Theme.primary1,\r\n                          border: 'none',\r\n                        }}\r\n                        type=\"submit\"\r\n                      >\r\n                        <span style={{ fontWeight: 'bolder' }}>اضافه علامة تجارية</span>\r\n                      </CButton>\r\n                    )}\r\n                    <CAlert\r\n                      color=\"danger\"\r\n                      dismissible\r\n                      visible={visible}\r\n                      onClose={() => setVisible(false)}\r\n                    >\r\n                      حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n                    </CAlert>\r\n                  </CForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CCardBody>\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\nexport default AddBrand\r\n","import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyAdd } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useFormValidation } from '../general/useFormValidation'\r\nimport { useLanguage } from '../general/useLanguage'\r\n\r\nexport const useBrandAdding = () => {\r\n  const [brandNameAr, setBrandNameAr] = useState('')\r\n  const [categoryNameEng, setCategoryNameEng] = useState('')\r\n  const [categoryNameHeb, setCategoryNameHeb] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [image, setImage] = useState('')\r\n  const [visible, setVisible] = useState(false)\r\n  const navigate = useNavigate()\r\n  const addBrand = async () => {\r\n    setLoading(true)\r\n    let formData = new FormData()\r\n    formData.append('image', image)\r\n    formData.append('name', brandNameAr)\r\n\r\n    try {\r\n      await axios.post(`${API_ROUTE}/brands`, formData)\r\n      setLoading(false)\r\n      notifyAdd()\r\n      setTimeout(() => {\r\n        navigate('/brands')\r\n      }, 500)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setLoading(false)\r\n      setVisible(true)\r\n    }\r\n  }\r\n\r\n  const { handleSubmit, validated } = useFormValidation(addBrand)\r\n\r\n  return {\r\n    brandNameAr,\r\n    setBrandNameAr,\r\n    loading,\r\n    addBrand,\r\n    image,\r\n    setImage,\r\n    handleSubmit,\r\n    validated,\r\n    visible,\r\n    setVisible,\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { API_ROUTE } from 'src/routes'\r\nimport { notifyEdit } from 'src/utils/util'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useLanguage } from '../general/useLanguage'\r\n\r\nexport const useBrandEditing = (categoryId, item) => {\r\n  const { name, image } = item\r\n  const [brandImage, setBrandImage] = useState('')\r\n  const [brandNameAr, setBrandNameAr] = useState('')\r\n  const [updatedImage, setUpdatedImage] = useState('')\r\n  const navigate = useNavigate()\r\n  const [loading, setLoading] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const getcategory = async () => {\r\n    // const url = `${API_ROUTE}/categories/${categoryId}`\r\n    // const response = await fetch(url)\r\n    // const item = await response.json()\r\n    setBrandNameAr(name)\r\n    // setCategoryNameEng(name_en)\r\n    // setCategoryNameHeb(name_he)\r\n    setBrandImage(image)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getcategory()\r\n  }, [])\r\n\r\n  const update = () => {\r\n    setLoading(true)\r\n    const formData = new FormData()\r\n\r\n    formData.append('name', brandNameAr)\r\n    formData.append('image', updatedImage)\r\n\r\n    axios\r\n      .post(`${API_ROUTE}/brands/${categoryId}?_method=PUT`, formData)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        notifyEdit()\r\n        setTimeout(() => {\r\n          navigate('/brands')\r\n        }, 500)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        setLoading(false)\r\n        setVisible(true)\r\n      })\r\n  }\r\n\r\n  return {\r\n    brandImage,\r\n    setUpdatedImage,\r\n    loading,\r\n    update,\r\n    updatedImage,\r\n    brandNameAr,\r\n    setBrandNameAr,\r\n    visible,\r\n    setVisible,\r\n  }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { CAlert, CButton, CCardBody, CCol, CRow } from '@coreui/react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useCategoryEditing } from 'src/hooks/categories/useCategoryEditing'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { NotePencil } from 'phosphor-react'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport { Theme } from 'src/constants/colors'\r\nimport image from '../../assets/images/image.png'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\nimport { useBrandEditing } from 'src/hooks/brands/useBrandEditing'\r\n\r\nconst EditBrand = () => {\r\n  const params = useParams()\r\n  const { state } = useLocation()\r\n  const item = state?.item\r\n  const {\r\n    brandImage,\r\n    setUpdatedImage,\r\n    loading,\r\n    update,\r\n    updatedImage,\r\n    brandNameAr,\r\n    setBrandNameAr,\r\n    visible,\r\n    setVisible,\r\n  } = useBrandEditing(params.id, item)\r\n  const { width } = useWidth()\r\n\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n  if (!item) {\r\n    return <div>Product not found</div>\r\n  }\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"تعديل علامة تجارية\" icon={<NotePencil size={25} />} />\r\n        <AppBreadcrumb />\r\n        <AppCard>\r\n          <CCardBody>\r\n            <div className=\"column\">\r\n              <div className=\"row\">\r\n                {isArabic === 'true' && (\r\n                  <CCol sm={width < 768 ? 12 : null}>\r\n                    <label className=\"form-label\">اسم العلامة التجارية باللغة العربية</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"اسم العلامة التجارية باللغة العربية \"\r\n                      aria-label=\"First name\"\r\n                      name=\"product_name\"\r\n                      value={brandNameAr}\r\n                      onChange={(e) => setBrandNameAr(e.target.value)}\r\n                    />\r\n                  </CCol>\r\n                )}\r\n                \r\n               \r\n              </div>\r\n            </div>\r\n            <div className=\"row\" style={{ marginTop: '15px' }}>\r\n              <div className=\"col\">\r\n                <label className=\"form-label\">صورة العلامة التجارية</label>\r\n                <input\r\n                  className=\"form-control form-control-sm\"\r\n                  id=\"formFileSm\"\r\n                  type=\"file\"\r\n                  name=\"product_pic\"\r\n                  onChange={(e) => setUpdatedImage(e.target.files[0])}\r\n                />\r\n                {updatedImage ? (\r\n                  <img\r\n                    src={updatedImage ? URL.createObjectURL(updatedImage) : image}\r\n                    onError={(e) => {\r\n                      e.target.onError = null\r\n                      e.target.src = image\r\n                    }}\r\n                    width={300}\r\n                    height={300}\r\n                    style={{ margin: '10px' }}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={brandImage ? brandImage : image}\r\n                    onError={(e) => {\r\n                      e.target.onError = null\r\n                      e.target.src = image\r\n                    }}\r\n                    width={300}\r\n                    height={300}\r\n                    style={{ margin: '10px' }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            {loading ? (\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            ) : (\r\n              <CButton\r\n                style={{\r\n                  width: '200px',\r\n                  marginTop: '30px',\r\n                  backgroundColor: Theme.primary1,\r\n                  border: 'none',\r\n                }}\r\n                type=\"submit\"\r\n                onClick={update}\r\n              >\r\n                <span style={{ fontWeight: 'bolder' }}>حفظ</span>\r\n              </CButton>\r\n            )}\r\n            <CAlert color=\"danger\" dismissible visible={visible} onClose={() => setVisible(false)}>\r\n              حصل خلل أثناء العملية، يرجى المحاولة فيما بعد\r\n            </CAlert>\r\n          </CCardBody>\r\n          {/* )} */}\r\n        </AppCard>\r\n      </CCol>\r\n      <ToastContainer />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default EditBrand\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CFormCheck,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { CheckSquare, CirclesThreePlus, Sparkle } from 'phosphor-react'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useCategories } from 'src/hooks/categories/useCategories'\r\nimport AppDialog from 'src/components/AppDialog'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport { Theme } from 'src/constants/colors'\r\nimport AppTooltip from 'src/components/Tooltip'\r\nimport { AppBreadcrumb } from 'src/components'\r\nimport { useLanguage } from 'src/hooks/general/useLanguage'\r\nimport image from '../../assets/images/image.png'\r\nimport EmptyPage from 'src/components/EmptyPage'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport { useBrands } from 'src/hooks/brands/useBrands'\r\n\r\nconst Brands = () => {\r\n  const navigate = useNavigate()\r\n  const {\r\n    brands,\r\n    loading,\r\n    showDialog,\r\n    confirmDelete,\r\n    executeDelete,\r\n    cancelDelete,\r\n    setFilterValue,\r\n    markedItems,\r\n    setMarkedItems,\r\n    showDeleteDialog,\r\n    toggleMarkedItem,\r\n    markAll,\r\n    deleteMarked,\r\n    cancelDeleteMarked,\r\n    executeDeleteMarked,\r\n    searchQuery,\r\n    setSearchQuery,\r\n    handleOnDragEnd,\r\n  } = useBrands()\r\n\r\n  const { isArabic, isEnglish, isHebrew } = useLanguage()\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle\r\n          title=\"العلامات التجارية\"\r\n          icon={<Sparkle size={25} />}\r\n          addText=\"إضافة علامة تجارية\"\r\n          addPath=\"add_brand\"\r\n          addItem={true}\r\n          mark={true}\r\n          deleteMarked={deleteMarked}\r\n          markedItems={markedItems}\r\n        />\r\n        <AppBreadcrumb />\r\n        <div>\r\n          {loading ? (\r\n            <div className=\"h-100 w-100 d-flex justify-content-center align-items-center py-5 my-5\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {brands.length > 0 ? (\r\n                <div\r\n                  className=\"rounded my-3\"\r\n                  style={{ backgroundColor: Theme.white, boxShadow: '0px 2px 3px #c8c8c8' }}\r\n                >\r\n                  {/* <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                    <Droppable droppableId=\"categories\">\r\n                      {(provided) => ( */}\r\n                  <CTable\r\n                    align=\"middle\"\r\n                    hover\r\n                    responsive\r\n                    striped\r\n                    className=\" mb-3 categories\"\r\n                    // {...provided.droppableProps}\r\n                    // ref={provided.innerRef}\r\n                    width={1000}\r\n                  >\r\n                    <CTableHead color=\"light\">\r\n                      <CTableRow>\r\n                        <CTableHeaderCell className=\"text-center\" style={{ width: 100 }}>\r\n                          <CButton\r\n                            style={{\r\n                              backgroundColor: Theme.primary1,\r\n                              border: 'none',\r\n                            }}\r\n                            onClick={markAll}\r\n                          >\r\n                            <CheckSquare size={20} /> الكل\r\n                          </CButton>\r\n                        </CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">الاسم</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\">الصورة</CTableHeaderCell>\r\n                        <CTableHeaderCell className=\"text-center\"> الإجراءات </CTableHeaderCell>\r\n                      </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                      {brands.map((item, index) => (\r\n                        <CTableRow\r\n                        key={index}\r\n                          v-for=\"item in tableItems\"\r\n                        >\r\n                          <CTableDataCell className=\"text-center fw-medium\">\r\n                            <div className=\"d-flex justify-content-center align-items-center\">\r\n                              <CFormCheck\r\n                                id=\"index\"\r\n                                className=\"customCheckbox\"\r\n                                label=\" \"\r\n                                reverse\r\n                                checked={markedItems.find((id) => id === item.id)}\r\n                                onChange={() => {\r\n                                  toggleMarkedItem(item.id)\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell>\r\n                            <div className=\"d-flex flex-column h-100 align-items-center\">\r\n                              {isArabic === 'true' && (\r\n                                <button\r\n                                  className=\"hovarableText\"\r\n                                  onClick={() =>\r\n                                    navigate(`/edit_brand/${item.id}`, {\r\n                                      state: { item },\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {item.name}\r\n                                </button>\r\n                              )}\r\n                              {isEnglish === 'true' && (\r\n                                <button\r\n                                  className=\"hovarableText\"\r\n                                  onClick={() =>\r\n                                    navigate(`/edit_brand/${item.id}`, {\r\n                                      state: { item },\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {item.name_en}\r\n                                </button>\r\n                              )}\r\n                              {isHebrew === 'true' && (\r\n                                <button\r\n                                  className=\"hovarableText\"\r\n                                  onClick={() =>\r\n                                    navigate(`/edit_brand/${item.id}`, { state: { item } })\r\n                                  }\r\n                                >\r\n                                  {item.name_he}\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </CTableDataCell>\r\n\r\n                          <CTableDataCell className=\"text-center\">\r\n                            <img\r\n                              src={item.image ? item.image : image}\r\n                              onError={(e) => {\r\n                                e.target.onError = null\r\n                                e.target.src = image\r\n                              }}\r\n                              alt=\"brand\"\r\n                              width=\"100\"\r\n                              height=\"100\"\r\n                            />\r\n                          </CTableDataCell>\r\n\r\n                          <CTableDataCell>\r\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                              <AppTooltip type=\"delete\" onClick={() => confirmDelete(item.id)} />\r\n                              <AppTooltip\r\n                                type=\"edit\"\r\n                                onClick={() =>\r\n                                  navigate(`/edit_brand/${item.id}`, {\r\n                                    state: { item },\r\n                                  })\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </CTableDataCell>\r\n                        </CTableRow>\r\n                      ))}\r\n                    </CTableBody>\r\n                  </CTable>\r\n                  {/* )}\r\n                    </Droppable>\r\n                  </DragDropContext> */}\r\n                </div>\r\n              ) : (\r\n                <EmptyPage emptyItems=\"علامات تجارية\" />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CCol>\r\n      <ToastContainer />\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف هذه العلامة التجارية\"\r\n        open={showDialog}\r\n        onClose={cancelDelete}\r\n        actionCancel={cancelDelete}\r\n        actionExecute={executeDelete}\r\n        deleteDialog={true}\r\n      />\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بحذف جميع العلامات التجارية التي تم تحديدها ؟\"\r\n        open={showDeleteDialog}\r\n        onClose={cancelDeleteMarked}\r\n        actionCancel={cancelDeleteMarked}\r\n        actionExecute={executeDeleteMarked}\r\n        deleteDialog={true}\r\n      />\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Brands\r\n","import React from 'react'\r\nimport Login from './views/pages/login/Login'\r\nimport CurrentUser from './views/Current-User/current_user'\r\n\r\nimport { Users } from 'phosphor-react'\r\nimport EditAboutUS from './views/About-Us/edit-about-us'\r\nimport EditSlider from './views/Slider/edit-slider'\r\nimport Sliders from './views/Slider/sliders'\r\nimport AddSlider from './views/Slider/add-slider'\r\nimport OrderDetails from './views/Order-Details/order_details'\r\nimport NotificationFirebase from './views/Notification-Firebase/notification-firebase'\r\nimport Banners from './views/Banners/banners'\r\nimport EditBanner from './views/Banners/edit-banner'\r\nimport PrivacyPolicy from './views/Privacy-Policy/privacy_policy'\r\nimport AboutUs from './views/About-Us/about-us'\r\nimport AddUser from './views/Users/add-user'\r\nimport EditUser from './views/Users/edit-user'\r\nimport Categories from './views/Categories/categories'\r\nimport AddCategory from './views/Categories/add-category'\r\nimport EditCategory from './views/Categories/edit-category'\r\nimport Products from './views/Products/products'\r\nimport AddProduct from './views/Products/add-product'\r\nimport EditProduct from './views/Products/edit-product'\r\nimport ViewProduct from './views/Products/view-product'\r\nimport Socials from './views/Socials/socials'\r\nimport EditSocial from './views/Socials/edit-social'\r\nimport Orders from './views/Orders/orders'\r\nimport Feedbacks from './views/Feedbacks/feedbacks'\r\nimport AddFeedback from './views/Feedbacks/add-feedback'\r\nimport EditFeedback from './views/Feedbacks/edit-feedback'\r\nimport Copons from './views/Copons/copons'\r\nimport AddCopon from './views/Copons/add-copon'\r\nimport EditCopon from './views/Copons/edit-copon'\r\nimport Dashboard from './views/Dashboard/Dashboard'\r\nimport DashboardMain from './views/Dashboard/Dashboard'\r\nimport UsersPage from './views/Users/users'\r\nimport Settings from './views/Settings/settings'\r\nimport { element } from 'prop-types'\r\nimport AddBanner from './views/Banners/add-banner'\r\nimport AddBrand from './views/Brands/add-brand'\r\nimport EditBrand from './views/Brands/edit-brand'\r\nimport Brands from './views/Brands/Brands'\r\n\r\nexport const API_ROUTE = 'https://perfectadv.ps/biofresh/api'\r\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'))\r\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'))\r\n\r\n// Base\r\nconst Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))\r\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))\r\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'))\r\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))\r\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))\r\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'))\r\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'))\r\nconst Paginations = React.lazy(() => import('./views/base/paginations/Paginations'))\r\nconst Placeholders = React.lazy(() => import('./views/base/placeholders/Placeholders'))\r\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'))\r\nconst Progress = React.lazy(() => import('./views/base/progress/Progress'))\r\nconst Spinners = React.lazy(() => import('./views/base/spinners/Spinners'))\r\nconst Tables = React.lazy(() => import('./views/base/tables/Tables'))\r\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'))\r\n\r\n// Buttons\r\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))\r\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))\r\nconst Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))\r\n\r\n//Forms\r\nconst ChecksRadios = React.lazy(() => import('./views/forms/checks-radios/ChecksRadios'))\r\nconst FloatingLabels = React.lazy(() => import('./views/forms/floating-labels/FloatingLabels'))\r\nconst FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\r\nconst InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\r\nconst Layout = React.lazy(() => import('./views/forms/layout/Layout'))\r\nconst Range = React.lazy(() => import('./views/forms/range/Range'))\r\nconst Select = React.lazy(() => import('./views/forms/select/Select'))\r\nconst Validation = React.lazy(() => import('./views/forms/validation/Validation'))\r\n\r\n// Icons\r\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))\r\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'))\r\n\r\n// Notifications\r\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))\r\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'))\r\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'))\r\nconst Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))\r\n\r\nconst routes = [\r\n  { path: '/', name: 'Login', element: Login },\r\n  { path: '/dashboard', name: 'Dashboard', element: DashboardMain },\r\n\r\n  // Start Users Routes\r\n  { path: '/users', name: 'المستخدمين', element: UsersPage },\r\n  { path: '/login', name: 'تسجيل الدخول', element: Login },\r\n  { path: '/add_user', name: 'إضافة مستخدم ', element: AddUser },\r\n  { path: '/edit_user/:id', name: 'المستخدمين', element: EditUser },\r\n  { path: '/profile', name: ' الملف الشخصي', element: CurrentUser },\r\n  // End Users Routes\r\n\r\n  // Start Categories Routes\r\n  { path: '/categories', name: 'الأقسام الرئيسية', element: Categories },\r\n  { path: '/add_category', name: ' إضافة قسم', element: AddCategory },\r\n  { path: '/edit_category/:id', name: 'تعديل القسم', element: EditCategory },\r\n  // End Categories Routes\r\n\r\n  // Start Categories Routes\r\n  { path: '/brands', name: 'العلامات التجارية', element: Brands },\r\n  { path: '/add_brand', name: ' إضافة علامة تجارية', element: AddBrand },\r\n  { path: '/edit_brand/:id', name: 'تعديل علامة تجارية', element: EditBrand },\r\n  // End Categories Routes\r\n\r\n  // Start Banners Routes\r\n  { path: '/banners', name: 'البنرات', element: Banners },\r\n  { path: '/edit_banner/:id', name: 'تعديل البنرات', element: EditBanner },\r\n  { path: '/add-banner', name: 'إضافة بانر', element: AddBanner },\r\n  // End Banners Routes\r\n\r\n  // Start Sliders Routes\r\n  { path: '/sliders', name: 'الشرائح', element: Sliders },\r\n  { path: '/add_slider', name: 'إضافة شريحة ', element: AddSlider },\r\n  { path: '/edit_slider/:id', name: 'تعديل شريحة', element: EditSlider },\r\n  // End Sliders Routes\r\n\r\n  // Start Products Routes\r\n  { path: '/products', name: 'المنتجات', element: Products },\r\n  { path: '/add_product', name: 'إضافة منتج', element: AddProduct },\r\n  { path: '/edit_product/:id', name: 'المنتجات', element: EditProduct },\r\n  { path: '/single_product/:id', name: ' تفاصيل المنتج', element: ViewProduct },\r\n  // End Products Routes\r\n\r\n  // Start Socials Routes\r\n  { path: '/socials', name: 'مواقع التواصل الاجتماعي ', element: Socials },\r\n  { path: '/edit_social/:id', name: 'تعديل موقع', element: EditSocial },\r\n  // End Products Routes\r\n\r\n  // Start Orders Routes\r\n  { path: '/orders', name: 'Orders', element: Orders },\r\n  { path: '/view_order/:id', name: 'تفاصيل الطلب', element: OrderDetails },\r\n  // End Orders Routes\r\n\r\n  // Start Notifications Routes\r\n  { path: '/notifications', name: ' الإشعارات', element: NotificationFirebase },\r\n  // End Notifications Routes\r\n\r\n  // Start Feedbacks Routes\r\n  { path: '/feedbacks', name: 'Feedbacks', element: Feedbacks },\r\n  { path: '/add_feedback', name: 'إضافة ملاحظة ', element: AddFeedback },\r\n  { path: '/edit_feedback/:id', name: 'تعديل ملاحظة', element: EditFeedback },\r\n  // End Feedbacks Routes\r\n\r\n  // Start Copons Routes\r\n  { path: '/coupons', name: '  كوبونات الخصم ', element: Copons },\r\n  { path: '/add_coupon', name: '  اإضافة كوبون الخصم ', element: AddCopon },\r\n  { path: '/edit_coupon/:id', name: '  تعديل كوبون الخصم ', element: EditCopon },\r\n  // End Copons Routes\r\n\r\n  // Start About Us Routes\r\n  { path: '/about_us', name: ' من نحن ', element: AboutUs },\r\n  { path: '/edit_about_us/:id', name: 'تعديل من نحن', element: EditAboutUS },\r\n  // End About Us Routes\r\n\r\n  // Start Privacy And Policy Routes\r\n  { path: '/privacy_policy', name: ' سياسة الخصوصية', element: PrivacyPolicy },\r\n  // End Privacy And Policy Routes\r\n\r\n  // { path: '/settings', name: ' الإعدادات', element: Settings},\r\n\r\n  { path: '/theme', name: 'Theme', element: Colors, exact: true },\r\n  { path: '/theme/colors', name: 'Colors', element: Colors },\r\n  { path: '/theme/typography', name: 'Typography', element: Typography },\r\n  { path: '/base', name: 'Base', element: Cards, exact: true },\r\n  { path: '/base/accordion', name: 'Accordion', element: Accordion },\r\n  { path: '/base/breadcrumbs', name: 'Breadcrumbs', element: Breadcrumbs },\r\n  { path: '/base/cards', name: 'Cards', element: Cards },\r\n  { path: '/base/carousels', name: 'Carousel', element: Carousels },\r\n  { path: '/base/collapses', name: 'Collapse', element: Collapses },\r\n  { path: '/base/list-groups', name: 'List Groups', element: ListGroups },\r\n  { path: '/base/navs', name: 'Navs', element: Navs },\r\n  { path: '/base/paginations', name: 'Paginations', element: Paginations },\r\n  { path: '/base/placeholders', name: 'Placeholders', element: Placeholders },\r\n  { path: '/base/popovers', name: 'Popovers', element: Popovers },\r\n  { path: '/base/progress', name: 'Progress', element: Progress },\r\n  { path: '/base/spinners', name: 'Spinners', element: Spinners },\r\n  { path: '/base/tables', name: 'Tables', element: Tables },\r\n  { path: '/base/tooltips', name: 'Tooltips', element: Tooltips },\r\n  { path: '/buttons', name: 'Buttons', element: Buttons, exact: true },\r\n  { path: '/buttons/buttons', name: 'Buttons', element: Buttons },\r\n  { path: '/buttons/dropdowns', name: 'Dropdowns', element: Dropdowns },\r\n  { path: '/buttons/button-groups', name: 'Button Groups', element: ButtonGroups },\r\n  { path: '/forms', name: 'Forms', element: FormControl, exact: true },\r\n  { path: '/forms/form-control', name: 'Form Control', element: FormControl },\r\n  { path: '/forms/select', name: 'Select', element: Select },\r\n  { path: '/forms/checks-radios', name: 'Checks & Radios', element: ChecksRadios },\r\n  { path: '/forms/range', name: 'Range', element: Range },\r\n  { path: '/forms/input-group', name: 'Input Group', element: InputGroup },\r\n  { path: '/forms/floating-labels', name: 'Floating Labels', element: FloatingLabels },\r\n  { path: '/forms/layout', name: 'Layout', element: Layout },\r\n  { path: '/forms/validation', name: 'Validation', element: Validation },\r\n  { path: '/icons', exact: true, name: 'Icons', element: CoreUIIcons },\r\n  { path: '/icons/coreui-icons', name: 'CoreUI Icons', element: CoreUIIcons },\r\n  { path: '/icons/flags', name: 'Flags', element: Flags },\r\n  { path: '/notifications', name: 'Notifications', element: Alerts, exact: true },\r\n  { path: '/notifications/alerts', name: 'Alerts', element: Alerts },\r\n  { path: '/notifications/badges', name: 'Badges', element: Badges },\r\n  { path: '/notifications/modals', name: 'Modals', element: Modals },\r\n  { path: '/notifications/toasts', name: 'Toasts', element: Toasts },\r\n]\r\n\r\nexport default routes\r\n","import React from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\n\r\nimport routes from '../routes'\r\n\r\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\r\nimport { Theme } from 'src/constants/colors'\r\n\r\nconst AppBreadcrumb = () => {\r\n  const currentLocation = useLocation().pathname\r\n\r\n  const getRouteName = (pathname, routes) => {\r\n    const currentRoute = routes.find((route) => route.path === pathname)\r\n    return currentRoute ? currentRoute.name : false\r\n  }\r\n\r\n  const getBreadcrumbs = (location) => {\r\n    const breadcrumbs = []\r\n    location.split('/').reduce((prev, curr, index, array) => {\r\n      const currentPathname = `${prev}/${curr}`\r\n      const routeName = getRouteName(currentPathname, routes)\r\n      routeName &&\r\n        breadcrumbs.push({\r\n          pathname: currentPathname,\r\n          name: routeName,\r\n          active: index + 1 === array.length ? true : false,\r\n        })\r\n      return currentPathname\r\n    })\r\n    return breadcrumbs\r\n  }\r\n\r\n  const breadcrumbs = getBreadcrumbs(currentLocation)\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <div\r\n      className=\" rounded p-2\"\r\n      style={{ backgroundColor: Theme.white, boxShadow: '0px 2px 3px #c8c8c8' }}\r\n    >\r\n      <CBreadcrumb className=\"m-0 ms-2\" style={{ '--cui-breadcrumb-divider': \"'>'\" }}>\r\n        <CBreadcrumbItem\r\n          className=\"hovarableText\"\r\n          onClick={() => {\r\n            navigate(`/dashboard`)\r\n          }}\r\n        >\r\n          الصفحة الرئيسية\r\n        </CBreadcrumbItem>\r\n        {breadcrumbs.map((breadcrumb, index) => {\r\n          return (\r\n            <CBreadcrumbItem\r\n              {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\r\n              key={index}\r\n            >\r\n              {breadcrumb.name}\r\n            </CBreadcrumbItem>\r\n          )\r\n        })}\r\n      </CBreadcrumb>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppBreadcrumb)\r\n","import { CCol, CRow } from '@coreui/react'\r\nimport shield from '../../../assets/images/shield.png'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport AppCard from 'src/components/AppCard'\r\nimport { Gear } from 'phosphor-react'\r\nimport { Theme } from 'src/constants/colors'\r\nimport React from 'react'\r\n\r\nconst Unauthorized = () => {\r\n  return (\r\n    <CRow>\r\n      <CCol xs>\r\n        <PageTitle title=\"الإعدادات\" icon={<Gear size={25} />} />\r\n        <div\r\n          className=\"rounded my-3 d-flex flex-column justify-content-center align-items-center h-100\"\r\n          style={{\r\n            backgroundColor: Theme.white,\r\n            boxShadow: '0px 2px 3px #c8c8c8',\r\n            border: 'none',\r\n            padding: 15,\r\n          }}\r\n        >\r\n          <h2 className=\"my-3\">تم تقييد الوصول الى هذه الصفحة!</h2>\r\n          <img src={shield} alt=\"image\" width=\"300\" className=\"my-3\" />\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Unauthorized\r\n","import React, { Suspense, useEffect } from 'react'\r\nimport { Navigate, Route, Routes } from 'react-router-dom'\r\nimport { CContainer, CSpinner } from '@coreui/react'\r\n\r\n// routes config\r\nimport routes from '../routes'\r\nimport Settings from 'src/views/Settings/settings'\r\nimport Unauthorized from 'src/views/pages/unauthorized/Unauthorezed'\r\nimport { useLogin } from 'src/hooks/login/useLogin'\r\n\r\nconst AppContent = () => {\r\n  const isLoggedIn =\r\n    sessionStorage.getItem('log_status') || localStorage.getItem('cubra_log_status')\r\n  const role_id = sessionStorage.getItem('role_id') || localStorage.getItem('cubra_role_id')\r\n  console.log(role_id === 1)\r\n  console.log(isLoggedIn)\r\n\r\n  return (\r\n    <CContainer style={{ flex: 1 }}>\r\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\r\n        <Routes>\r\n          {routes.map((route, idx) => {\r\n            return (\r\n              route.element && (\r\n                <Route\r\n                  key={idx}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  element={isLoggedIn === 'true' ? <route.element /> : <Navigate to=\"/#\" />}\r\n                />\r\n              )\r\n            )\r\n          })}\r\n\r\n          <Route path=\"/#\" element={<Navigate to=\"login\" replace />} />\r\n          <Route\r\n            path=\"/settings\"\r\n            element={role_id == 1 ? <Settings /> : <Unauthorized />}\r\n            name=\"الإعدادات\"\r\n          />\r\n          {/* <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} /> */}\r\n        </Routes>\r\n      </Suspense>\r\n    </CContainer>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppContent)\r\n","import React from 'react'\r\nimport { NavLink, useNavigate } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  CContainer,\r\n  CHeader,\r\n  CHeaderBrand,\r\n  CHeaderDivider,\r\n  CHeaderNav,\r\n  CHeaderToggler,\r\n  CNavLink,\r\n  CNavItem,\r\n  CButton,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\r\n\r\nimport { AppBreadcrumb, AppSidebar } from './index'\r\nimport { AppHeaderDropdown } from './header/index'\r\nimport { logo } from 'src/assets/brand/logo'\r\nimport { List } from 'phosphor-react'\r\nimport { useSidebar } from 'src/context/SidebarContext'\r\nimport { Theme } from 'src/constants/colors'\r\nimport './test.css'\r\n\r\nconst AppHeader = () => {\r\n  // const dispatch = useDispatch()\r\n  // const sidebarShow = useSelector((state) => state.sidebarShow)\r\n  const navigate = useNavigate()\r\n\r\n  const { isSidebarOpen, toggleSidebar } = useSidebar()\r\n\r\n  return (\r\n    <div className=\"app-header\">\r\n      {/* <CContainer fluid> */}\r\n      <div>\r\n        <input type=\"checkbox\" id=\"drop-check\" onChange={toggleSidebar}></input>\r\n        <label htmlFor=\"drop-check\" id=\"drop\">\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n        </label>\r\n      </div>{' '}\r\n      {/* <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\"></CHeaderBrand> */}\r\n      {/* <CHeaderNav className=\"d-none d-md-flex me-auto\">\r\n          <CNavItem>\r\n            <CNavLink to=\"/dashboard\" component={NavLink}>\r\n              الصفحة الرئيسية\r\n            </CNavLink>\r\n          </CNavItem>\r\n        </CHeaderNav> */}\r\n      {/* <CButton style={{ width: '150px', marginTop: '10px' }} onClick={() => handleLogout()}>\r\n          <span style={{ fontWeight: 'bolder' }}> تسجيل الخروج</span>\r\n        </CButton> */}\r\n      {/* <CHeaderNav>\r\n          <CNavItem>\r\n            <CNavLink href=\"#\">\r\n              <CIcon icon={cilBell} size=\"lg\" />\r\n            </CNavLink>\r\n          </CNavItem>\r\n          <CNavItem>\r\n            <CNavLink href=\"#\">\r\n              <CIcon icon={cilList} size=\"lg\" />\r\n            </CNavLink>\r\n          </CNavItem>\r\n          <CNavItem>\r\n            <CNavLink href=\"#\">\r\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\r\n            </CNavLink>\r\n          </CNavItem>\r\n        </CHeaderNav> */}\r\n      {/* <CHeaderNav className=\"ms-3\">\r\n          <AppHeaderDropdown />\r\n        </CHeaderNav>\r\n      </CContainer> */}\r\n      {/* <CHeaderDivider /> */}\r\n      {/* <AppBreadcrumb /> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import React, { useEffect, useRef } from 'react'\r\nimport './test.css'\r\nimport { CDBSidebarMenuItem } from 'cdbreact'\r\n\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\nimport {\r\n  Cards,\r\n  FacebookLogo,\r\n  Tag,\r\n  ChatsCircle,\r\n  ShoppingCartSimple,\r\n  House,\r\n  CirclesThreePlus,\r\n  UserCircle,\r\n  Question,\r\n  SidebarSimple,\r\n  Gear,\r\n  Gift,\r\n  SignOut,\r\n  Sparkle,\r\n  TreeStructure,\r\n} from 'phosphor-react'\r\nimport { useSidebar } from 'src/context/SidebarContext'\r\nimport logo from '../assets/images/logo.png'\r\nimport avatar from '../assets/images/avatars/male_avatar.png'\r\nimport { Theme } from 'src/constants/colors'\r\nimport '../layout/layout.css'\r\nimport '../scss/_custom.scss'\r\nimport { useLogin } from 'src/hooks/login/useLogin'\r\nimport AppDialog from './AppDialog'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\n\r\nfunction Sidebar() {\r\n  const { openSidebar, closeSidebar } = useSidebar()\r\n  const name = sessionStorage.getItem('name') || localStorage.getItem('cubra_name')\r\n  const location = useLocation()\r\n  const prevLocationRef = useRef(location.pathname)\r\n  const { width } = useWidth()\r\n  const { logout, openSignoutDialog, closeSignoutDialog, showSignoutDialog } = useLogin()\r\n\r\n  useEffect(() => {\r\n    if (width > 768 && location.pathname !== '/dashboard') {\r\n      openSidebar()\r\n    } else if (location.pathname == '/dashboard') {\r\n      closeSidebar()\r\n    }\r\n  }, [location])\r\n\r\n  useEffect(() => {\r\n    const prevLocation = prevLocationRef.current\r\n    const activeLink = document.querySelector(`.customNav[href=\"${prevLocation}\"]`)\r\n    if (activeLink) {\r\n      activeLink.classList.add('leaving')\r\n      setTimeout(() => {\r\n        activeLink.classList.remove('leaving')\r\n      }, 300)\r\n    }\r\n    prevLocationRef.current = location.pathname\r\n  }, [location])\r\n\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <nav\r\n        id=\"sidebar\"\r\n        className=\"sidebar-wrapper almarai-regular\"\r\n        style={{\r\n          transition: 'width 0.3s ease, right 0.3s ease',\r\n          // overflowX: 'scroll'\r\n        }}\r\n        // onMouseEnter={openSidebar}\r\n        // onMouseLeave={closeSidebar}\r\n      >\r\n        <div className=\"logo-container d-flex justify-content-center\" style={{ margin: '15px' }}>\r\n          <img src={logo} alt=\"Logo\" width={120} />\r\n        </div>\r\n        {/* <CSidebarHeader className=\"border-bottom\">\r\n          <CSidebarBrand>\r\n          </CSidebarBrand>\r\n        </CSidebarHeader> */}\r\n        <div>\r\n          <NavLink exact to=\"/dashboard\">\r\n            <CDBSidebarMenuItem\r\n              style={{ backgroundColor: Theme.primaryLight, borderRadius: 5 }}\r\n              className={`customNav ${location.pathname === '/dashboard' ? 'activeClicked' : ''}`}\r\n            >\r\n              <div className=\"logo-container\">\r\n                <img src={avatar} alt=\"Logo\" width={23} style={{ borderRadius: '100%' }} />\r\n                <span\r\n                  style={{\r\n                    color: Theme.white,\r\n                    marginRight: '10px',\r\n                    textDecorationLine: 'underline',\r\n                  }}\r\n                >\r\n                  {name}\r\n                </span>\r\n              </div>\r\n            </CDBSidebarMenuItem>\r\n            {/* <CNavGroup\r\n              toggler={\r\n                <>\r\n                   Nav dropdown\r\n                </>\r\n              }\r\n            >\r\n              <CNavItem href=\"#\">\r\n                <span className=\"nav-icon\">\r\n                  <span className=\"nav-icon-bullet\"></span>\r\n                </span>{' '}\r\n                Nav dropdown item\r\n              </CNavItem>\r\n              <CNavItem href=\"#\">\r\n                <span className=\"nav-icon\">\r\n                  <span className=\"nav-icon-bullet\"></span>\r\n                </span>{' '}\r\n                Nav dropdown item\r\n              </CNavItem>\r\n            </CNavGroup> */}\r\n          </NavLink>\r\n          <NavLink exact to=\"/dashboard\">\r\n            <CDBSidebarMenuItem\r\n              className={`customNav ${location.pathname === '/dashboard' ? 'activeClicked' : ''}`}\r\n            >\r\n              <House size={25} /> الصفحة الرئيسية\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/categories\">\r\n            <CDBSidebarMenuItem\r\n              className={`customNav ${location.pathname === '/categories' ? 'activeClicked' : ''}`}\r\n            >\r\n              <CirclesThreePlus size={25} /> الأقسام الرئيسية\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/brands\">\r\n            <CDBSidebarMenuItem\r\n              className={`customNav ${location.pathname === '/brands' ? 'activeClicked' : ''}`}\r\n            >\r\n              <Sparkle size={25} /> العلامات التجارية\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/products\">\r\n            <CDBSidebarMenuItem\r\n              className={`customNav ${location.pathname === '/products' ? 'activeClicked' : ''}`}\r\n            >\r\n              <Tag size={25} /> المنتجات\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/orders\">\r\n            <CDBSidebarMenuItem\r\n              className={`customNav ${location.pathname === '/orders' ? 'activeClicked' : ''}`}\r\n            >\r\n              <ShoppingCartSimple size={25} /> الطلبيات\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/sliders\">\r\n            <CDBSidebarMenuItem\r\n              className={`customNav ${location.pathname === '/sliders' ? 'activeClicked' : ''}`}\r\n            >\r\n              <SidebarSimple size={25} /> الشرائح\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/banners\">\r\n            <CDBSidebarMenuItem\r\n              className={`customNav ${location.pathname === '/banners' ? 'activeClicked' : ''}`}\r\n            >\r\n              <Cards size={25} /> البنرات\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/users\">\r\n            <CDBSidebarMenuItem\r\n              className={`customNav ${location.pathname === '/users' ? 'activeClicked' : ''}`}\r\n            >\r\n              <UserCircle size={25} /> المستخدمين\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/coupons\">\r\n            <CDBSidebarMenuItem\r\n              className={`customNav ${location.pathname === '/coupons' ? 'activeClicked' : ''}`}\r\n            >\r\n              <Gift size={25} /> الكوبونات\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/socials\">\r\n            <CDBSidebarMenuItem\r\n              className={`customNav ${location.pathname === '/socials' ? 'activeClicked' : ''}`}\r\n            >\r\n              <FacebookLogo size={25} /> مواقع التواصل الاجتماعي\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/about_us\">\r\n            <CDBSidebarMenuItem\r\n              className={`customNav ${location.pathname === '/about_us' ? 'activeClicked' : ''}`}\r\n            >\r\n              <Question size={25} /> من نحن\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/feedbacks\">\r\n            <CDBSidebarMenuItem\r\n              className={`customNav ${location.pathname === '/feedbacks' ? 'activeClicked' : ''}`}\r\n            >\r\n              <ChatsCircle size={25} /> ملاحظات العملاء\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/settings\">\r\n            <CDBSidebarMenuItem\r\n              className={`customNav ${location.pathname === '/settings' ? 'activeClicked' : ''}`}\r\n            >\r\n              <Gear size={25} /> الإعدادات\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          <NavLink onClick={openSignoutDialog}>\r\n            <CDBSidebarMenuItem className={`customNav`}>\r\n              <SignOut size={25} /> تسجيل الخروج\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          {/* <NavLink exact to=\"/notifications\" activeClassName=\"activeClicked\">\r\n            <CDBSidebarMenuItem icon=\"\">\r\n              <BellSimple size={25} /> الإشعارات\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/about_us\" activeClassName=\"activeClicked\">\r\n            <CDBSidebarMenuItem icon=\"\">\r\n              <Chats size={25} /> من نحن\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>{' '}\r\n          <NavLink exact to=\"/privacy_policy\" activeClassName=\"activeClicked\">\r\n            <CDBSidebarMenuItem icon=\"\">\r\n              <LockSimple size={25} /> سياسة الخصوصية\r\n            </CDBSidebarMenuItem>\r\n          </NavLink>{' '} */}\r\n        </div>\r\n      </nav>\r\n      <AppDialog\r\n        title=\"هل أنت متأكد من رغبتك بتسجيل الخروج ؟\"\r\n        open={showSignoutDialog}\r\n        onClose={closeSignoutDialog}\r\n        actionCancel={closeSignoutDialog}\r\n        actionExecute={logout}\r\n        deleteDialog={true}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { CCallout, CLink } from '@coreui/react'\r\n\r\nconst DocsCallout = (props) => {\r\n  const { content, href, name } = props\r\n\r\n  const plural = name.slice(-1) === 's' ? true : false\r\n\r\n  const _href = `https://coreui.io/react/docs/${href}`\r\n\r\n  return (\r\n    <CCallout color=\"info\" className=\"bg-white\">\r\n      {content\r\n        ? content\r\n        : `A React ${name} component ${\r\n            plural ? 'have' : 'has'\r\n          } been created as a native React.js version\r\n      of Bootstrap ${name}. ${name} ${plural ? 'are' : 'is'} delivered with some new features,\r\n      variants, and unique design that matches CoreUI Design System requirements.`}\r\n      <br />\r\n      <br />\r\n      For more information please visit our official{' '}\r\n      <CLink href={_href} target=\"_blank\">\r\n        documentation of CoreUI Components Library for React.js\r\n      </CLink>\r\n      .\r\n    </CCallout>\r\n  )\r\n}\r\n\r\nDocsCallout.propTypes = {\r\n  content: PropTypes.string,\r\n  href: PropTypes.string,\r\n  name: PropTypes.string,\r\n}\r\n\r\nexport default React.memo(DocsCallout)\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { CLink } from '@coreui/react'\r\n\r\nconst DocsLink = (props) => {\r\n  const { href, name, text, ...rest } = props\r\n\r\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\r\n\r\n  return (\r\n    <div className=\"float-end\">\r\n      <CLink\r\n        {...rest}\r\n        href={_href}\r\n        rel=\"noreferrer noopener\"\r\n        target=\"_blank\"\r\n        className=\"card-header-action\"\r\n      >\r\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\r\n      </CLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nDocsLink.propTypes = {\r\n  href: PropTypes.string,\r\n  name: PropTypes.string,\r\n  text: PropTypes.string,\r\n}\r\n\r\nexport default React.memo(DocsLink)\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilCode, cilMediaPlay } from '@coreui/icons'\r\n\r\nconst DocsExample = (props) => {\r\n  const { children, href } = props\r\n\r\n  const _href = `https://coreui.io/react/docs/${href}`\r\n\r\n  return (\r\n    <div className=\"example\">\r\n      <CNav variant=\"tabs\">\r\n        <CNavItem>\r\n          <CNavLink href=\"#\" active>\r\n            <CIcon icon={cilMediaPlay} className=\"me-2\" />\r\n            Preview\r\n          </CNavLink>\r\n        </CNavItem>\r\n        <CNavItem>\r\n          <CNavLink href={_href} target=\"_blank\">\r\n            <CIcon icon={cilCode} className=\"me-2\" />\r\n            Code\r\n          </CNavLink>\r\n        </CNavItem>\r\n      </CNav>\r\n      <CTabContent className=\"rounded-bottom\">\r\n        <CTabPane className=\"p-3 preview\" visible>\r\n          {children}\r\n        </CTabPane>\r\n      </CTabContent>\r\n    </div>\r\n  )\r\n}\r\n\r\nDocsExample.propTypes = {\r\n  children: PropTypes.node,\r\n  href: PropTypes.string,\r\n}\r\n\r\nexport default React.memo(DocsExample)\r\n","export const Theme = {\r\n  base: '#f8f9fa',\r\n  white: '#ffffff',\r\n  primary1: '#832e59',\r\n  primaryLight: '#d4719f',\r\n  transparentPrimary: 'rgba(233, 99, 78, 0.5)',\r\n  primaryRed: '#e55353',\r\n  primaryBlue: '#39f',\r\n  grayDark: '#333333',\r\n  gray: '#767676',\r\n}\r\n","const { useState } = require('react')\r\n\r\nexport const useWidth = () => {\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n\r\n  window.addEventListener('resize', function (event) {\r\n    setWidth(window.innerWidth)\r\n  })\r\n\r\n  return { width }\r\n}\r\n","import { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nexport const useLogin = () => {\r\n  const [phone, setPhone] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  // const [emptyPhone, setEmptyPhone] = useState(false)\r\n  // const [emptyPassword, setEmptyPassword] = useState(false)\r\n  const [showDialog, setShowDialog] = useState(false)\r\n  const navigate = useNavigate()\r\n  const [showSignoutDialog, setShowSignoutDialog] = useState(false)\r\n  const [rememberMe, setRememberMe] = useState(false)\r\n\r\n  const openSignoutDialog = () => {\r\n    setShowSignoutDialog(true)\r\n  }\r\n\r\n  const closeSignoutDialog = () => {\r\n    setShowSignoutDialog(false)\r\n  }\r\n\r\n  const autoLogin = async () => {\r\n    console.log('inside auto login')\r\n    const phoneNumber = localStorage.getItem('cubra_phone_number')\r\n    const rememberMe = localStorage.getItem('cubra_remember_me')\r\n\r\n    if (rememberMe === 'true') {\r\n      console.log('setting login info in session storage')\r\n      setLoading(true)\r\n      const name = localStorage.getItem('cubra_name')\r\n      const role_id = localStorage.getItem('cubra_role_id')\r\n      const id = localStorage.getItem('cubra_id')\r\n      const log_status = localStorage.getItem('cubra_log_status')\r\n      const token = localStorage.getItem('cubra_access_token')\r\n\r\n      sessionStorage.setItem('access_token', JSON.parse(token))\r\n      sessionStorage.setItem('name', JSON.parse(name))\r\n      sessionStorage.setItem('role_id', JSON.parse(role_id))\r\n      sessionStorage.setItem('id', JSON.parse(id))\r\n      sessionStorage.setItem('log_status', JSON.parse(log_status))\r\n\r\n      navigate('/dashboard')\r\n\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    sessionStorage.removeItem('access_token')\r\n    sessionStorage.removeItem('name')\r\n    sessionStorage.removeItem('role_id')\r\n    sessionStorage.removeItem('id')\r\n    sessionStorage.setItem('log_status', false)\r\n    localStorage.removeItem('cubra_access_token')\r\n    localStorage.removeItem('cubra_name')\r\n    localStorage.removeItem('cubra_role_id')\r\n    localStorage.removeItem('cubra_id')\r\n    localStorage.setItem('cubra_log_status', JSON.stringify(false))\r\n    localStorage.setItem('cubra_remember_me', JSON.stringify(false))\r\n    navigate('/#')\r\n    setShowSignoutDialog(false)\r\n  }\r\n  const login = async () => {\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    }\r\n\r\n    try {\r\n      setLoading(true)\r\n      const response = await axios.post(\r\n        `https://perfectadv.ps/biofresh/api/login`,\r\n        {\r\n          phone: phone,\r\n          password: password,\r\n        },\r\n        { headers },\r\n      )\r\n      console.log(response)\r\n      if (response.status === 200) {\r\n        // Successful login\r\n        const token = response.data.access_token\r\n        const status = response.data.status\r\n        const { name, role_id, id } = response.data.id\r\n        console.log(role_id)\r\n        sessionStorage.setItem('access_token', token)\r\n        sessionStorage.setItem('name', name)\r\n        sessionStorage.setItem('role_id', role_id)\r\n        sessionStorage.setItem('id', id)\r\n        sessionStorage.setItem('log_status', status)\r\n        if (rememberMe) {\r\n          localStorage.setItem('cubra_access_token', JSON.stringify(token))\r\n          localStorage.setItem('cubra_name', JSON.stringify(name))\r\n          localStorage.setItem('cubra_role_id', JSON.stringify(role_id))\r\n          localStorage.setItem('cubra_id', JSON.stringify(id))\r\n          localStorage.setItem('cubra_log_status', JSON.stringify(status))\r\n          localStorage.setItem('cubra_remember_me', JSON.stringify(rememberMe))\r\n        }\r\n        navigate('/dashboard')\r\n      } else {\r\n        console.log('Invalid login details')\r\n      }\r\n    } catch (error) {\r\n      setShowDialog(true)\r\n      console.error(error)\r\n      setLoading(false)\r\n    }\r\n    // }\r\n  }\r\n  return {\r\n    phone,\r\n    setPhone,\r\n    password,\r\n    setPassword,\r\n    loading,\r\n    showDialog,\r\n    setShowDialog,\r\n    login,\r\n    logout,\r\n    openSignoutDialog,\r\n    closeSignoutDialog,\r\n    showSignoutDialog,\r\n    rememberMe,\r\n    setRememberMe,\r\n    autoLogin,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { AppContent, AppFooter, AppHeader, AppSidebar } from '../components/index'\r\nimport { useSidebar } from 'src/context/SidebarContext'\r\nimport { List } from 'phosphor-react'\r\nimport { Theme } from 'src/constants/colors'\r\nimport './layout.css'\r\n\r\nconst DefaultLayout = () => {\r\n  const { isSidebarOpen, toggleSidebar } = useSidebar()\r\n  return (\r\n    <div dir=\"rtl\" className={`page-wrapper ${isSidebarOpen ? 'toggled' : ''}`}>\r\n      <AppSidebar />\r\n      <main\r\n        className=\"page-content almarai-regular\"\r\n        style={{\r\n          marginLeft: isSidebarOpen ? '' : '0',\r\n          transition: 'margin 0.3s ease',\r\n          backgroundColor: Theme.base,\r\n        }}\r\n      >\r\n        <div className=\"\">\r\n          <AppHeader />\r\n          <br />\r\n          <AppContent />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DefaultLayout\r\n","import React, { useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormCheck,\r\n  CFormInput,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport { Spinner } from 'react-bootstrap/esm'\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Button } from '@mui/material'\r\nimport { useLogin } from 'src/hooks/login/useLogin'\r\nimport { Theme } from 'src/constants/colors'\r\nimport logo from '../../../assets/images/logo.png'\r\nimport dashboard from '../../../assets/images/dashboard.png'\r\nimport '../../../components/test.css'\r\nimport '../../../layout/layout.css'\r\nimport { useWidth } from 'src/hooks/general/useWidth'\r\n\r\nconst Login = () => {\r\n  const {\r\n    phone,\r\n    setPhone,\r\n    password,\r\n    setPassword,\r\n    loading,\r\n    showDialog,\r\n    setShowDialog,\r\n    login,\r\n    rememberMe,\r\n    setRememberMe,\r\n    autoLogin,\r\n  } = useLogin()\r\n\r\n  useEffect(() => {\r\n    autoLogin()\r\n  })\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      login()\r\n    }\r\n  }\r\n\r\n  const { width } = useWidth()\r\n\r\n  return (\r\n    <div className=\"bg-light w-100 h-100 min-vh-100 d-flex almarai-regular\" dir=\"rtl\">\r\n      <CContainer className=\"d-flex align-items-center justify-content-center w-100 h-100\">\r\n        <CRow className=\"w-100 h-100\">\r\n          <CCol\r\n            sm={width > 768 ? 6 : 12}\r\n            className={\r\n              width > 768\r\n                ? 'rounded d-flex flex-column justify-content-center align-items-center px-5'\r\n                : 'rounded d-flex flex-column justify-content-center align-items-center h-100'\r\n            }\r\n            style={\r\n              width > 768\r\n                ? {\r\n                    backgroundColor: Theme.white,\r\n                    boxShadow: '0px 2px 3px #c8c8c8',\r\n                    border: 'none',\r\n                    height: '100vh',\r\n                    position: 'absolute',\r\n                    left: '0px',\r\n                  }\r\n                : {\r\n                    backgroundColor: Theme.white,\r\n                    boxShadow: '0px 2px 3px #c8c8c8',\r\n                    border: 'none',\r\n                    height: '100vh',\r\n                    position: 'absolute',\r\n                    // left: '0px',\r\n                  }\r\n            }\r\n          >\r\n            <CCard\r\n              className={\r\n                width > 768\r\n                  ? 'rounded w-75 m-3 d-flex flex-column justify-content-center align-items-center p-5'\r\n                  : 'rounded w-75 d-flex flex-column justify-content-center align-items-center p-3'\r\n              }\r\n              style={{\r\n                border: 'none',\r\n              }}\r\n            >\r\n              <img src={logo} alt=\"Logo\" width={300} />\r\n              <CForm onKeyPress={handleKeyPress} className=\"w-100\">\r\n                <CRow className=\" my-2\">\r\n                  <h1 className=\"text-center almarai-bold\">تسجيل الدخول</h1>\r\n                </CRow>\r\n                <CRow className=\" my-2\" sm={width < 768 ? 12 : ''}>\r\n                  <CFormInput\r\n                    placeholder=\"رقم الهاتف\"\r\n                    autoComplete=\"username\"\r\n                    id=\"phone\"\r\n                    value={phone}\r\n                    onChange={(e) => {\r\n                      setPhone(e.target.value)\r\n                    }}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"my-2\">\r\n                  <CFormInput\r\n                    value={password}\r\n                    onChange={(e) => {\r\n                      setPassword(e.target.value)\r\n                    }}\r\n                    type=\"password\"\r\n                    placeholder=\"كلمة المرور\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol md={5} className=\"d-flex align-items-center\">\r\n                    <CFormCheck\r\n                      id=\"rememberMe\"\r\n                      label=\"تذكرني\"\r\n                      reverse\r\n                      className=\"customCheckbox\"\r\n                      checked={rememberMe}\r\n                      onChange={() => setRememberMe(!rememberMe)}\r\n                    />\r\n                  </CCol>\r\n                  <CCol md={7} className=\"d-flex justify-content-end p-0\">\r\n                    <CButton color=\"white\">هل نسيت كلمة المرور؟</CButton>\r\n                  </CCol>\r\n                </CRow>\r\n                {loading ? (\r\n                  <Spinner animation=\"border\" role=\"status\" style={{ margin: '10px' }}>\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                  </Spinner>\r\n                ) : (\r\n                  <CRow className=\" my-3\">\r\n                    <CButton\r\n                      style={{ backgroundColor: Theme.primary1, border: 'none' }}\r\n                      onClick={() => {\r\n                        login()\r\n                      }}\r\n                      disabled={password.trim() === '' || phone.trim() === ''}\r\n                    >\r\n                      تسجيل الدخول\r\n                    </CButton>\r\n                  </CRow>\r\n                )}\r\n              </CForm>\r\n            </CCard>\r\n          </CCol>\r\n          {width > 768 && (\r\n            <CCol\r\n              md={6}\r\n              className=\"trapezoid d-flex flex-column justify-content-center align-items-center text-white\"\r\n              style={{\r\n                backgroundColor: Theme.primary1,\r\n                boxShadow: '0px 2px 3px #c8c8c8',\r\n                border: 'none',\r\n                padding: 15,\r\n                height: '100vh',\r\n              }}\r\n            >\r\n              <h1>Al Shiakh Dashboard</h1>\r\n              {/* <p>لوحة التحكم</p> */}\r\n              <img src={dashboard} alt=\"login\" width={500} />\r\n            </CCol>\r\n          )}\r\n        </CRow>\r\n        <Dialog open={showDialog} onClose={() => setShowDialog(false)}>\r\n          <DialogTitle>رقم الهاتف أو كلمة المرور غير صحيحة. حاول مرة اخرى</DialogTitle>\r\n          <DialogContent></DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setShowDialog(false)}>حسناً</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"names":["CurrentUser","currentUser","sessionStorage","getItem","id","navigate","useNavigate","_jsxs","_Fragment","children","style","display","justifyContent","flexDirection","alignItems","_jsx","CAvatar","src","size","width","border","marginTop","backgroundColor","borderRadius","padding","margin","cursor","onClick","concat","NotePencil","weight","color","notifyDelete","toast","success","position","autoClose","closeOnClick","draggable","progress","undefined","fontSize","Theme","base","className","notifyAdd","notifyEdit","notifyEdit2","notifyFailed","error","useLanguage","isArabic","JSON","parse","localStorage","isEnglish","isHebrew","setArabic","value","setItem","stringify","setEnglish","setHebrew","useAboutUsEditing","aboutId","item","body_ar","body_en","body_he","image","bodyAr","setBodyAr","useState","bodyEng","setBodyEng","bodyHeb","setBodyHeb","updatedImage","setUpdatedImage","loading","setLoading","visible","setVisible","useEffect","async","getAbout","update","formData","FormData","append","axios","API_ROUTE","then","res","setTimeout","catch","err","console","useDelete","path","refreshFunction","showDialog","setShowDialog","deleteID","setDeleteID","confirmDelete","executeDelete","cancelDelete","useDeleteMarked","items","markedItems","setMarkedItems","showDeleteDialog","setShowDeleteDialog","toggleMarkedItem","find","itemId","newItems","filter","markAll","length","map","deleteMarked","cancelDeleteMarked","executeDeleteMarked","useCategories","categories","setCategories","filterValue","setFilterValue","searchQuery","setSearchQuery","getCategories","response","fetch","data","json","trim","getFilteredCategories","handleOnDragEnd","result","destination","Array","from","reorderedItem","splice","source","index","log","_ref","title","icon","addText","addPath","addItem","filterItems","filterByCategory","editItems","categoryFilter","setCategoryFilter","mark","editMarked","saveExcel","isExportable","loadingOrders","CCard","white","boxShadow","CCardBody","CButton","marginLeft","primary1","fontWeight","Spinner","animation","role","excelLogo","height","alignSelf","Funnel","CFormSelect","marginRight","outline","paddingRight","onChange","e","target","selected","name_ar","MagnifyingGlass","type","placeholder","disabled","Trash","name","props","ReactQuill","modules","toolbar","header","list","formats","EditAboutUS","params","useParams","state","useLocation","aboutData","aboutImage","CRow","CCol","xs","PageTitle","AppBreadcrumb","AppCard","TextEditor","files","URL","createObjectURL","onError","CAlert","dismissible","onClose","ToastContainer","useProducts","products","setProducts","links","setLinks","currentPage","setCurrentPage","loadingId","setLoadingId","sortKey","setSortKey","selectedProduct","setSelectedProduct","productDialog","setProductDialog","loadingOfferId","setLoadingOfferId","offerDialog","setOfferDialog","discount","setDiscount","offerId","setOfferId","getProducts","getFilteredProducts","getProductsByCategory","handlePageClick","page","truncateDescription","description","maxLength","slice","updateAvailability","availability","updatedProducts","product","available","failedProductsUpdate","handleDeletePage","draggableId","order_number","updateOffer","isOffer","is_offer","openOfferDialog","itemDiscount","useSliderEditing","sliderId","image_mobile","data_id","sliderPic","setSliderPic","sliderPicMobile","setSliderPicMobile","productID","setProductID","productName","setProductName","imagePC","setImagePC","imageMobile","setImageMobile","sliderType","setSliderType","url","getSlider","setImage","setType","EditSlider","alt","md","CFormCheck","button","variant","autoComplete","label","checked","feedbackInvalid","required","open","actionCancel","actionExecute","deleteDialog","CModal","alignment","CModalHeader","CModalTitle","CModalFooter","gray","primaryRed","displayTooltip","CTooltip","content","placement","Eye","emptyItems","empty","Sliders","sliders","changeActiveStatus","useSliders","setSliders","getSliders","activeState","SidebarSimple","CTable","align","hover","responsive","striped","CTableHead","CTableRow","CTableHeaderCell","CheckSquare","CTableBody","CTableDataCell","reverse","AppTooltip","CFormSwitch","active","borderColor","EmptyPage","AppDialog","useAllProducts","getAllProducts","useFormValidation","addFunc","validated","setValidated","checkValidated","setCheckValidated","handleSubmit","event","preventDefault","currentTarget","checkValidity","stopPropagation","AddSlider","sliderImage","setSliderImage","sliderImageMobile","setSliderImageMobile","useSliderAdding","addSlider","PlusCircle","CForm","noValidate","onSubmit","CFormInput","useOrderDetails","order","setOrder","OrderDetails","setOrderDetails","coordinate","setCoordinates","lng","lat","isLoaded","useLoadScript","googleMapsApiKey","process","REACT_APP_GOOGLE_API_KEY","lattitude","longitude","getOrderDetails","totals","reduce","total","sum_all","info","useWidth","primaryLight","paddingBottom","rowGap","marginBottom","_order$note","ShoppingCartSimple","columnGap","flexWrap","OrderCard","customer_name","phone","geoarea","city","status","note","overflowX","_item$product","borderBottom","paddingTop","product_image","selected_color","paddingLeft","selected_size","qty","X","price","Equals","delivery_price","Minus","GoogleMap","zoom","center","mapContainerStyle","Marker","NotificationFirebase","Notification","setNotification","deleteId","setDeleteId","getNotification","CCardHeader","Dialog","DialogTitle","DialogActions","Button","Banners","banners","selectedLanguage","setSelectedLanguage","useBanners","setBanners","getBanners","Cards","CNav","layout","CNavItem","CNavLink","grayDark","title_ar","title_en","title_he","image_en","image_mobile_en","useBannersEditing","bannerId","bannerName","setBannerName","bannerImage","setBannerImage","bannerImageEn","setBannerImageEn","bannerImageMobile","setBannerImageMobile","bannerImageMobileEn","setBannerImageMobileEn","bannerTitleAr","setBannerTitleAr","bannerTitleEn","setBannerTitleEn","bannerTitleHeb","setBannerTitleHeb","bannerType","dataId","setDataId","bannerImageUpdated","setBannerImageUpdated","bannerImageEnUpdated","setBannerImageEnUpdated","bannerImageMobileUpdated","setBannerImageMobileUpdated","bannerImageMobileEnUpdated","setBannerImageMobileEnUpdated","getBanner","EditBanner","sm","PrivacyPolicy","AboutUs","about","useAboutUs","setAbout","getAboutUs","Question","dangerouslySetInnerHTML","__html","AddUser","userName","setUserName","password","setPassword","phoneNumber","setPhoneNumber","roleId","setRoleId","useUserAdding","addUser","useUserEditing","userId","role_id","userNameAr","setUserNameAr","getuser","EditUser","Categories","CirclesThreePlus","name_en","name_he","onSelect","categoriesByLevel","setCategoriesByLevel","selectedCategories","setSelectedCategories","dropdownOpen","setDropdownOpen","fetchCategories","parentId","level","prev","renderDropdown","_selectedCategories$l","Dropdown","isOpen","toggle","toggleDropdown","DropdownToggle","caret","DropdownMenu","category","DropdownItem","newSelectedCategories","isArray","lastSelectedCategory","handleSelectCategory","Object","keys","parseInt","AddCategory","categoryNameAr","setCategoryNameAr","categoryNameEng","setCategoryNameEng","categoryNameHeb","setCategoryNameHeb","subCategories","selectedCategory","setSelectedCategory","handleCategorySelect","isChild","setIsChild","useCategoryAdding","addCategory","CategoryDropdown","useCategoryEditing","categoryId","parent_id","categoryImage","setCategoryImage","parent","setParent","isMainParent","setIsMainParent","getcategory","EditCategory","_product$product_size","selectedLang","setSelectedLang","scrollable","CModalBody","CCarousel","controls","indicators","dark","images","img","CCarouselItem","CImage","broken","price_nis","Tag","price_usd","textAlign","description_ar","description_en","description_he","product_sizes","size_price_usd","size_price_nis","trigger","tabIndex","shape","Products","DragDropContext","onDragEnd","Droppable","droppableId","provided","droppableProps","ref","innerRef","ArrowsDownUp","ArrowDown","ArrowUp","Draggable","toString","draggableProps","dragHandleProps","top","right","discount_percentage","CPagination","CPaginationItem","searchParams","get","Number","ProductDialog","dir","DialogContent","useBrands","brands","setBrands","getBrands","getFilteredBrands","CProgress","animated","CProgressBar","useCurrency","isNIS","isUSD","isJUD","setNIS","setUSD","setJUD","AddProduct","productNameAr","setProductNameAr","setImages","descriptionAr","setDescriptionAr","sizes","isMultipleSize","setIsMultipleSize","handleSizeChange","addSize","deleteSize","productNameEng","setProductNameEng","productNameHeb","setProductNameHeb","descriptionEng","setDescriptionEng","descriptionHeb","setDescriptionHeb","categoryID","setCategoryID","isMultipleColor","setIsMultipleColor","colors","hex","setHex","colorImage","setColorImage","addColor","deleteColor","editColor","editedColor","setEditedColor","productPriceJOD","productPriceNIS","productPriceUSD","setProductPriceJOD","setProductPriceNIS","setProductPriceUSD","handleFileChange","uploadProgress","productVideo","setSizes","brandId","setBrandId","setIsOffer","discountPercentage","setDiscountPercentage","colorCode","setColorCode","useProductAdding","setProductVideo","setColors","setUploadProgress","file","addProduct","forEach","priceNIS","priceUSD","code","getAll","field","newSize","priceJOD","sizeIndex","newColors","colorIndex","startsWith","reader","FileReader","onloadstart","onprogress","lengthComputable","Math","round","loaded","prevProgress","onloadend","onerror","readAsDataURL","CFormTextarea","multiple","prevImages","_","i","ProgressBar","invalid","Chrome","left","primaryBlue","priceJUD","EditProduct","isChecked","setIsChecked","ProductVideoEdited","setProductVideoEdited","showDeleteImageDialog","setShowDeleteImageDialog","DeleteProductImage","cancelDeleteImage","startDelete","isVideoEdited","setIsVideoEdited","isMultipleSizes","isMultipleColors","setIsMultipleColors","setIsMultipleSizes","showColorDialog","setShowColorDialog","startDeleteColor","cancelDeleteColor","deleteProductColor","saveAndExit","saveAndStay","useProductEditing","productId","category_id","price_jod","product_colors","brand_id","imagesURL","setImagesURL","isAvailable","setIsAvailable","deletedImageId","setDeletedImageId","deletedImageIndex","setDeletedImageIndex","deletedColorId","setDeletedColorId","deletedColorIndex","setDeletedColorIndex","setNewColors","getProduct","color_image","color_code","colorsAfterDelete","endsWith","broken_image","ViewProduct","CBadge","Socials","socials","useSocials","setSocials","getSocials","FacebookLogo","useSocialEditing","socialId","socialName","setName","sotionUrl","setUrl","getSocail","EditSocial","columns","key","workSheetName","Orders","orders","dialogStatus","orderID","updateStatus","setDialogStatus","setOrderID","setStatus","getOrdersByStatus","selectedStatus","setSelectedStatus","executeEditMarked","editMarkedDialog","setEditMarkedDialog","markedStatus","setMarkedStatus","useOrders","setOrders","getOrders","workbook","Excel","fileName","worksheet","addWorksheet","getRow","font","bold","column","horizontal","singleOrder","addRow","eachRow","includeEmpty","row","_cells","singleCell","cellAddress","_address","getCell","bottom","buf","xlsx","writeBuffer","saveAs","Blob","message","removeWorksheet","area","near","Feedbacks","feedbacks","toggleMarkedFeedback","markedFeedbacks","useFeedbacks","setFeedbacks","itemOffset","setItemOffset","setMarkedFeedbacks","getFeedbacks","newFeedbacks","ChatsCircle","gap","body","AddFeedback","customerName","setCustomerName","setBody","useFeedbackAdding","addFeedback","useFeedbackEditing","feedbackId","customerNameAr","setCustomerNameAr","customerNameEng","setCustomerNameEng","customerNameHeb","setCustomerNameHeb","setBody_ar","setBody_en","body_heb","setBody_heb","_item$feedback","_item$feedback2","_item$feedback3","_item$feedback4","getFeedback","EditFeedback","Copons","copons","useCopons","setCopons","getCopons","Gift","end_date","AddCopon","setCode","valueNIS","setValueNIS","endDate","setEndDate","useCoponAdding","addCopon","useCoponEditing","coponId","coponCode","coponValue","setValue","coponName","getCopon","EditCopon","useDashboard","dashboard","setDashboard","bestSellingProducts","setBestSellingProducts","bestUsers","setBestUsers","best_sellers_products","best_users","getDashboard","WidgetsDropdown","stats","change","NavLink","textDecoration","exact","to","NavigationButtons","NavigationCard","UserCircle","useSettings","isArabicTemp","setIsArabicTemp","isEnglishTemp","setIsEnglishTemp","isHebrewTemp","setIsHebrewTemp","isNISTemp","setIsNISTemp","isUSDTemp","setIsUSDTemp","isJODTemp","setIsJODTemp","settings","setSettings","getSettings","element","saveChanges","BestProductsList","lg","CaretCircleLeft","CrownSimple","NumberOne","NumberTwo","NumberThree","ordered_number","BestUsers","_item$user","user","total_orders","ChartJS","register","ArcElement","Title","Tooltip","Legend","CategoryScale","LinearScale","BarElement","PointElement","LineElement","RadialLinearScale","DashboardMain","background","href","UsersPage","users","useUsers","setUsers","getUsres","Settings","Gear","AddBanner","useBannerAdding","AddBrand","brandNameAr","setBrandNameAr","addBrand","useBrandAdding","useBrandEditing","brandImage","setBrandImage","EditBrand","Brands","Sparkle","Colors","React","Typography","Accordion","Breadcrumbs","Carousels","Collapses","ListGroups","Navs","Paginations","Placeholders","Popovers","Progress","Spinners","Tables","Tooltips","Buttons","ButtonGroups","Dropdowns","ChecksRadios","FloatingLabels","FormControl","InputGroup","Layout","Range","Select","Validation","CoreUIIcons","Flags","Alerts","Badges","Modals","Toasts","Login","currentLocation","pathname","breadcrumbs","location","split","curr","array","currentPathname","routeName","getRouteName","routes","currentRoute","route","push","getBreadcrumbs","CBreadcrumb","CBreadcrumbItem","breadcrumb","_createElement","Unauthorized","shield","AppContent","isLoggedIn","CContainer","flex","Suspense","fallback","CSpinner","Routes","idx","Route","Navigate","replace","AppHeader","isSidebarOpen","toggleSidebar","useSidebar","htmlFor","openSidebar","closeSidebar","prevLocationRef","useRef","logout","openSignoutDialog","closeSignoutDialog","showSignoutDialog","useLogin","prevLocation","current","activeLink","document","querySelector","classList","add","remove","transition","logo","CDBSidebarMenuItem","textDecorationLine","House","SignOut","DocsCallout","plural","_href","CCallout","CLink","DocsLink","text","rest","rel","DocsExample","CIcon","cilMediaPlay","cilCode","CTabContent","CTabPane","transparentPrimary","require","setWidth","window","innerWidth","addEventListener","setPhone","setShowSignoutDialog","rememberMe","setRememberMe","login","headers","token","access_token","removeItem","autoLogin","log_status","DefaultLayout","AppSidebar","onKeyPress"],"sourceRoot":""}